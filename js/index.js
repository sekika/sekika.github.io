var start = new Date().getTime();
var data = [{file:"/2015/10/09/tag-jekyll/",title:"GitHub Pages の Jekyll でカテゴリ / タグの作成",mtime:1444316400,ctime:1444316400,body:"GitHub Pages の Jekyll でカテゴリ / タグの作成 Jekyll には様々なプラグインがあり、プラグインを使うとカテゴリやタグを管理できる。しかし、GitHub Pages では、プラグインを使えないので、ローカルで jekyll を動かしてアップする、というちょっと面倒なことをする必要があるとのこと。ところが、このページ によれば、プラグインを使わなくてもカテゴリやタグを使うことができるらしい。というわけで、タグが使えるか試してみる。タグが使えるようになったようだ。タグを入れる前に、Bootstrap と Flatly のテーマを入れてみた。それから、_layouts/tagpage.html, tags/jekyll/index.htmlを上記のページの通りに書いて、tags/index.htmlを書いたら動いた。"},
{file:"/2015/10/09/welcome-to-jekyll/",title:"Jekyll によるブログ作成",mtime:1444322769,ctime:1444322769,body:"Jekyll によるブログ作成 Jekyll でブログを構築。ちょっとしたメモに使う予定。以下は、Jekyll をインストールした時に自動的に作成されたドキュメント。You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.To add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.Jekyll also offers powerful support for code snippets:{% highlight ruby %}def print_hi(name)puts  Hi, #{name} endprint_hi('Tom')=> prints 'Hi, Tom' to STDOUT.{% endhighlight %}Check out the [Jekyll docs][jekyll] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll’s dedicated Help repository][jekyll-help]."},
{file:"/2015/10/10/equation-on-jekyll/",title:"Jekyll 上での数式の表示",mtime:1444402800,ctime:1444402800,body:"Jekyll 上での数式の表示 Jekyll のドキュメントによれば、Kramdown はMathJaxによる数式表示をサポートしている、とのこと。MathJax を使うためには、HTML に<script type= text/javascript  src= http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML ></script>と記述して、MathJax を読み込ませる必要がある。MathJax を読み込ませるためのレイアウト mathを用意して、数式を使う記事には layout: math と指定することで、必要な時にだけ MathJax を読み込ませるようにした。設定はこれだけで、プラグインを使う必要はないので、GitHub Pages 上で数式の表示をすることができた。LaTeX 書式の数式が MathJax でどのように表示されるかをリアルタイムで確認するためには MathJax checker を使うと便利である。Kramdown のドキュメントに書かれている方法を使って、リチャーズ式を表示してみる。$$\begin{align*}\frac{\partial \theta}{\partial t}= \frac{\partial}{\partial z} \left[ K(\theta) \left (\frac{\partial \psi}{\partial z} + 1 \right) \right]\ \end{align*}$$この数式のソースコードは{% highlight tex %}$$\begin{align*}\frac{\partial \theta}{\partial t}= \frac{\partial}{\partial z}\left[ K(\theta) \left (\frac{\partial \psi}{\partial z} + 1 \right) \right]\\end{align*}$${% endhighlight %}となっている。すなわち、{% highlight tex %}$$\begin{align*}{% endhighlight %}と{% highlight tex %}\end{align*}$${% endhighlight %}の間に、LaTeX で数式を記述すれば良い。インラインでの表示は $$ と $$ で囲む。たとえば、半径 $$ r $$ の円の面積は $$ \pi r^2 $$ であり、球の体積は $$ \frac{4}{3}\pi r^3 $$ である。と表示するためには、半径 $$ r $$ の円の面積は $$ \pi r^2 $$ であり、球の体積は $$ \frac{4}{3}\pi r^3$$ である。と書く。"},
{file:"/2015/10/10/keyword-in-each-post/",title:"ページごとのキーワード（タグ）の表示",mtime:1444402800,ctime:1444402800,body:"ページごとのキーワード（タグ）の表示 カテゴリ / タグの作成 で、タグの一覧を表示できるようになったので、今度は各記事に含まれるタグを記して、そのタグに関する記事の一覧に直接飛べるようにした。「タグ」という日本語は微妙にわかりにくい感じがするので「キーワード」にしてみた。_layouts/post.html に、以下の記述を加えた。キーワード：{% capture tags %}{% for tag in page.tags %}&lcub;&lcub; tag &rcub;&rcub;{% endfor %}{% endcapture %}{% assign eachtag = tags | split:' ' %}{% for tag in eachtag %}<a href= /tags/{{ tag }}/index.html >{{ tag }}</a>{% endfor %}これで、キーワードが表示され、そのキーワードの記事一覧へとべるようになった。複数のキーワードにも対応していることを確認した。"},
{file:"/2015/10/11/english-layout/",title:"English layout",mtime:1444489200,ctime:1444489200,body:"English layout I mainly write posts in Japanese, but sometimes I may want to write in English. Therefore I start to make English layout. By using english tag, it is easy to list English posts."},
{file:"/2015/10/11/excel-mabiki/",title:"Excel でデータの間引き",mtime:1444489200,ctime:1444489200,body:"Excel でデータの間引き 「Excel 間引き」とか「csv 間引き」で検索すると、専用のツールが色々ある。ここでは、ツールを使わずに手軽に間引きをする方法を紹介する。「フィルタ」という名前の列を作成する。6個ずつ間引きしたい場合には、a,b,c,d,e,fと6個のアルファベットを入力する。間引きする間隔の個数分だけの記号を入力すれば良い。a～fを選択して、そのまま一番下までコピーすると、フィルタの列にはa,b,c,d,e,f,a,b,c,d,e,f...と繰り返しデータが入ることになる。オートフィル機能を利用して、a～fを選択した時点で、選択範囲の長方形の右下にカーソルをあわせ、カーソルが十字になったところでダブルクリックをすれば良い。「データ」「フィルタ」「オートフィルタ」にて、オートフィルタを設定して、フィルタの横にあらわれるプルダウンメニューをクリックすると、a,b,c,d,e,fから選ぶことができる。 eのデータを採用するのであれば、フィルタから「e」を選択する。これで、画面上には「フィルタ」列が「e」のデータ、すなわち6個おきに間引きされたデータが表示される。この状態でグラフを書けば、間引きしたデータによるグラフを書くことができる。また、他のワークシートにコピーペーストすれば、間引きされたデータのみのワークシートを作成できる。この記事は、2006年に旧ブログで書いた記事をコピーしたものです。この方法以外には、INDIRECT関数とROW関数を使って間引く方法もあります。"},
{file:"/2015/10/11/old-blog/",title:"過去のブログ",mtime:1444489200,ctime:1444489200,body:"過去のブログ これまでに使ってきたブログサービスをまとめます。|---| 開始   | リンク | システム||--------|:-------|:--------|| 2000年 | Seki's Diary | さざんか|| 2000年 | Seki's Diary | Tomsoft Diary System|| 2002年 | Seki's Diary | tDiary|| 2006年 | Seki's Diary | さくらのブログ|| 2007年 | seki @ Twitter (twilog) | Twitter || 2014年 | ブログ | Researchmap|| 2015年 | Seki's note | Jekyll と Bootstrap||---"},
{file:"/2015/10/12/cheetsheet/",title:"マークダウン文法チートシート",mtime:1444649361,ctime:1444649361,body:"マークダウン文法チートシート マークダウン記法、Kramdown 記法を、このサイトの著者が自分用に簡潔にまとめたものです。ソースコードを参照して使います。適宜、アップデートします。基本なべやかん（引用）ヘッダー1個目2個目コードの例return shell_exec( echo $input | $markdown_script );kramdown: A Markdown-superset converterMaruku:     Another Markdown-superset converterThis is some text.[^1]. Other text.[^footnote].表見栄えはスタイルシートで調整。|---| デフォルト | 左寄せ | センタリング | 右寄せ|-|:-|:-:|-:| First body part | Second cell | Third cell | fourth cell| Second line |foo | strong | baz| Third line |quux | baz | bar数式Jekyll 上での数式の表示$$\begin{align*}\frac{\partial \theta}{\partial t}= \frac{\partial}{\partial z}\left[ K(\theta) \left (\frac{\partial \psi}{\partial z} + 1 \right) \right]\\end{align*}$$コード~~Here comes some code.~~ rubydef what?42endHow to embed a Gist on GitHub Pages using Jekyll{% gist 63b5987deb3baca8f546 %}Front matterlayout: posttitle:tag:複数タグ~layout: posttitle:tags:tag1tag2~layout: post-enlayout: math特殊文字& < > ©参考サイトMarkdown syntaxKramdown syntaxLiquid DocumentationHTML Entity List"},
{file:"/2015/10/13/git-repository/",title:"自分専用 Git リポジトリの作成",mtime:1444729951,ctime:1444729951,body:"自分専用 Git リポジトリの作成 無料でGithubライクな共同開発環境を「さくらインターネット」で実現するを参考に、リポジトリを作成した。「共同開発」はしていないのだけど、自分専用の非公開リジポトリを持っておくのは便利。すでに、さくらには git がインストールされているので、インストールは不要。とても簡単にできた。ついでに、$HOME/git の下に CreateRepository.sh というシェルスクリプトを作成した。これで、cd git./CreateRepository.sh repositoryで簡単にリポジトリを作成して ssh でアクセスできるように設定できるようになった。これが CreateRepository.sh で、3行目の host=hostname.example.com をリポジトリを作成するホストのホスト名に変えて使う。{% gist 2206f77e1302c6e4f13c %}ついでに、.git を見えなくする .htaccess ファイルの書き方 についてメモしておく。~RedirectMatch 404 /.git~"},
{file:"/2015/10/18/eps-fig/",title:"EPSファイルの作成方法",mtime:1448158375,ctime:1445145779,body:"EPSファイルの作成方法 Excel や PowerPoint で作成した図を EPS ファイルにする方法。追記：PDFでいいよこの記事を作成した後に、使ってはいけない LaTeX のコマンド・パッケージ・作法を読んだところLaTeX の画像と言えば EPS 形式! という向きもありましたが，dvips を使っていたころの名残なので，そろそろ認識を改める必要があります．という記述がありました。EPS を提出する必要がある場合はしかたありませんが、これからはベクター画像は PDF を、ラスター画像は JPEG か PNG を使っていこうと思います。PDF からの変換まずは、EPS に変換したい画像が含まれる PDF ファイルを作成する。次に、作成したPDFファイルを適宜トリミングして、ちょうどいい大きさの PDF ファイルにする。Mac であれば、プレビューで PDF ファイルを開いて選択ツールで長方形の範囲選択をしてコピーし、「クリップボードから新規作成」でトリミングされたPDFファイルを作成できる。そして、PDFファイルを pdftops コマンドで EPS ファイルに変換する。Xpdf または、Xpdf を元に開発されている poppler をインストールすると、pdftops を使えるようになる。Mac ならば、brew install poppler でOK。そして、~pdftops -eps filename.pdf ~とすることで、filename.eps が作成される。WMF からの変換Window メタファイル (WMF) から直接 EPS ファイルを作りたくなるときもある。その場合には、Metafile to EPS Converter を使う。TeXを便利に使うツール類WMF2EPS もあるけれど、最新版の Windows だと動かないようだ。wmf2eps - PowerPoint等の図をEPS形式に変換TeXに張り付けるEPS形式の図をWindows上で作成する方法"},
{file:"/2015/10/19/office-open-xml-git/",title:"Office Open XML の git ファイル管理",mtime:1445227273,ctime:1445227273,body:"Office Open XML の git ファイル管理 git diff で Office ファイルの差分を見る に書かれている Apache Tika を使う方法で、docx, xmlx, pptx ファイルを差分管理できる。やってみたところ、たしかに git log -p で差分が表示された。これは便利。Mac の場合の手順について、上記サイトに書かれている通りのことをこちらにもメモ。~brew install tika~以下のようなスクリプト unopnexml を置く。~!/bin/shtika -t  $1~~/.gitconfig を編集~[diff  openxml ]textconv = unopenxml # フルパスで書く~レポジトリに .gitattributes を追加。~*.pptx diff=openxml*.docx diff=openxml*.xlsx diff=openxml~"},
{file:"/2015/10/20/word-author/",title:"Word の校閲者名を統一する方法",mtime:1445319229,ctime:1445319229,body:"Word の校閲者名を統一する方法 論文の閲読結果を修正するときに、修正箇所を Word の編集履歴で表示することがある。そのときに、２台以上のPCで作業をすると、Word の校閲者名が統一されていないと（片方は日本語名で片方は英語名だったり）、別人として表示されるので、校閲者名はそろえておく方が良い。けれど、それを忘れてしまい、作成者名を一括で変更しようとして調べたところ、どうもこれまでに編集した履歴を別の校閲者名に変更することは、できないようだ。ただし、すべての校閲者名を「作成者」という校閲者名に一括して変更することはできるとのこと。これは、チームで編集したファイルを、一括して個人名を取り除くときにも使えるだろう。方法としては、Word 2010 for Windows だと「ドキュメント検査」「ドキュメントのプロパティと個人情報」の「すべて削除」にあるらしい。Word2010： 文書内の校閲者名（変更履歴）を統一することは可能？Office 2010で社外には出したくないプロパティ情報などを削除するWord for Mac 2016では、「プライバシー」オプションの「保存するときに個人情報をファイルから削除する」にチェック。Office 2016 for Mac: 保存するときに個人情報をファイルから削除するには手元の Word for Mac 2011 では、「Word」「環境設定」「セキュリティ」の下に「プライバシー オプション」「保存するときに個人情報をファイルから削除する」があった。"},
{file:"/2015/10/21/iphone-multi-calendar/",title:"複数の Google カレンダーを iPhone に同期",mtime:1445406511,ctime:1445406511,body:"複数の Google カレンダーを iPhone に同期 Google カレンダーで複数のカレンダーを使っている場合には、Google カレンダーの設定ページ で表示させたいカレンダーにチェックする。詳しくはこちらのサイト。複数のGoogleカレンダーをiPhoneに同期させるための設定方法以前は、Exchange から Google アカウントを設定しないとこの設定ができなかったのでそうしていたのだけど、2013年1月30日から、Googleアカウントを用いて Exchange で新しい端末を登録できなくなっていた（2013年以前に登録していたアカウントは、そのまま使えていた）。そして、Exchange の設定で複数のカレンダーがうまく表示されなくなっていた。Exchange のアカウントを外して、Gmail のアカウントを設定してそちらでカレンダーをオンにしたら、複数カレンダーが表示された。ついでに、Apple iCal と Google カレンダーを同期する方法はこちら。Apple iCal と Google カレンダーを同期"},
{file:"/2015/10/22/upgrading-apache/",title:"Apache 2.2 から 2.4 にアップグレードするときのバーチャルホスト設定の更新",mtime:1445474123,ctime:1445474123,body:"Apache 2.2 から 2.4 にアップグレードするときのバーチャルホスト設定の更新 Debian のサーバーを wheezy から jessy にアップグレードしたときに、apache のバージョンが 2.2 から 2.4 に上がって、バーチャルホストが見えなくなりました。そのときに、なぜ見えなくなったのかを調べて、以下のサイトに書かれている方法で解決したのでメモしておきます。Updating Virtual Host Settings from Apache 2.2 to Apache 2.4簡単にまとめると、このようになります。詳しくは、上記サイトを参照してください。Ubuntu と Debian: sites-available ディレクトリの下のバーチャルホスト設定ファイルに、 .conf の拡張子をつける必要がある。すべてのディストリビューション: バーチャルホスト設定ファイルの Directory ブロックの中に、このように Require all granted を入れる必要がある。 htmlRequire all granted"},
{file:"/2015/10/23/excel-absolute-reference/",title:"相対参照と絶対参照",mtime:1445530960,ctime:1445530960,body:"相対参照と絶対参照 Excel の相対参照と絶対参照について、授業で使っている説明資料をこちらにコピーしておきます。計算式でセルを参照する方式には、セルの位置を入力セルとの相対的な位置関係で指定する相対参照と、セルの位置を絶対的な位置で指定する絶対参照の二種類がある。セルの位置をアルファベットと数字で指定すると、相対参照になる。つまり、D5セルでB5と入力した場合には、B5という位置を絶対的に指定したのではなく、D5から左へ２つ移動したセルを相対的に指定したものと考える。したがって、数式をコピーすると参照セルも一緒に移動する。参照セルを移動させずに固定したい場合は、絶対参照を用いる。絶対参照は、参照セルの、固定させたい行または列の前に$を指定する。たとえば、B5というセルの指定方法には、以下の4パターンがある。B5: B5セルを相対参照$B$5: B5セルを絶対参照B$5: B列を相対参照、5行を絶対参照$B5: B列を絶対参照、5行を相対参照ファンクションキーのF4で、相対参照と絶対参照（3パターン）を指定できる。たとえば、計算式で「=B5」と指定した状態で、F4キーを1回押すと$B$5に、もう1回押すとB$5に、と順番に変わる。理屈だけでは分かりにくいので、実例で学習する。このような九九の表を作ってみる。まずは、B1-J1, A2-A10のセルに数字を入力する。次に、B2のセルに、=B$1*$A2 と入力して、右にオートフィル機能で連続コピーする。その後、B2からJ2を選択した状態で、10列目まで連続コピーすることで完成する。このとき、以下の表のような式が入力されている。$がついている$1と$Aはコピーしても変化せず、$がついていないBと2はそれぞれの方向にコピーすることで変化することが分かる。このように、$をつけることによって絶対参照となり、つけないことで相対参照となる。"},
{file:"/2015/10/23/ipcc-2013-fig/",title:"IPCCのAR5「気候変動2013」政策決定者向け要約の図表",mtime:1445548753,ctime:1445548753,body:"IPCCのAR5「気候変動2013」政策決定者向け要約の図表 IPCC (Intergovernmental Panel of Climate Change; 気候変動に関する政府間パネル) は、気候変動（地球温暖化）に関する科学的な研究成果を収集、整理して公表している国際的な学術機関である。1988年に世界気象機関 (WMO) と国連環境計画 (UNEP) により設立された。IPCC ホームページ次の３つの作業部会 (Working Group) に分かれている。第1作業部会| WG I |科学的知見第2作業部会| WG II| 脆弱性、影響、適応第3作業部会| WG III| 排出抑制と気候変動の緩和これまでに、以下の報告書が公表された。|---|年次 | 報告書 | 略称|---|1990年 |第1次評価報告書 |FAR|1995年 |第2次評価報告書 |SAR|2001年 |第3次評価報告書 |TAR|2007年 |第4次評価報告書 |AR4|2014年 |第5次評価報告書 |AR5第5次評価報告書 (AR5) の中で、第1作業部会が作成した報告書は、2013年に以下の出版物「気候変動2013」として公表された。Climate Change 2013: The Physical Science Basisこの出版物は、本編が1535ページの大部の著作であり、28ページの「政策決定者向け要約 (SPM; Summary for policymakers)」が添えられている。気象庁が翻訳したSPMの和訳も公開されている。また、気象庁のサイトにはIPCCに関する情報として、情報がまとめられている。このページでは、SPMに掲載されている図表をまとめる。なお、図表によく出てくる RCP については、以下の用語集和訳の 代表的濃度経路（Representative Concentration Pathways）を参照。IPCC第5次評価報告書　第1作業部会報告書　用語集（抜粋版）　気象庁訳（PDF 392KB）SPM に掲載されている図AR5のSPM(政策決定者向け要約)に掲載されている図は、Report Graphics: Summary for Policymakers にまとめられている。以下に、図のタイトルを和訳して図をリンクしたものを一覧にする。解説については、上記のSPMの和訳を参照。<p> <a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-1.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-1-thumb_155_276_70.jpg  style= width:155; height:276;   /></a></p><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-2.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-2-thumb_155_69_70.jpg  style= width:155; height:69;   /></a></td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-3.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-3-thumb_155_357_70.jpg  style= width:155; height:357;   /></a></td><strong>図 SPM.1</strong>: 1850年から2012年までの世界平均地上気温の偏差（年平均と10年平均）と1901年から2012年までの観測された地上気温の変化</td><strong>図 SPM.2</strong>: 1901年から2010年及び1951年から2010年までの降水量変化の分布図</td><strong>図 SPM.3</strong>: 世界的な気候変動に関する複数の観測指標</td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-4.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-4-thumb_155_180_70.jpg  style= width:155; height:180;   /></a></td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-5.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-5-thumb_155_132_70.jpg  style= width:155; height:132;   /></a></td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-6.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-6-thumb_155_155_70.jpg  style= width:155; height:155;   /></a></td><strong>図 SPM.4</strong>: 地球の炭素循環に関する複数の観測指標（大気中の二酸化炭素、海面の二酸化炭素とpH）</td><strong>図 SPM.5</strong>: 1750年を基準とした2011年における放射強制力の推定値と要因ごとに集計された不確実性</td><strong>図 SPM.6</strong>: 観測及びシミュレーションによって再現された気候変動の比較。すなわち、大陸の地上気温、極地の海氷面積、海洋貯熱量の変化</td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-7.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-7-thumb_155_234_70.jpg  style= width:155; height:234;   /></a></td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-8.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-8-thumb_155_218_70.jpg  style= width:155; height:218;   /></a></td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-9.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-9-thumb_155_124_70.jpg  style= width:155; height:124;   /></a></td><strong>図 SPM.7</strong>: 1950年から2100年までの世界平均地上気温、北半球の9月の海氷面積、世界平均の海面pH変化の複数のモデルによるシミュレーション</td><strong>図 SPM.8</strong>: 21世紀後半における年平均地上気温変化、年平均降水量変化、9月の北半球の海氷面積、海面のpH変化の2つのシナリオによるモデル予測分布図</td><strong>図 SPM.9</strong>: 21世紀中の世界平均海面水位の上昇予測(1986～2005年平均との比較)</td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-10.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-10-thumb_155_124_70.jpg  style= width:155; height:124;   /></a></td><strong>図 SPM.10</strong>: 世界全体の二酸化炭素の累積総排出量の関数として示した、モデルにより予測される世界平均地上気温の上昇量</td>SPM に掲載されている表AR5のSPMには以下の3枚の表が掲載されている。表 SPM.1: 気象及び気候の極端現象。気象庁による和訳の p.5 参照。表 SPM.2: 1986～2005年平均を基準とした、21世紀中頃と21世紀末における、世界平均地上気温と世界平均海面水位上昇の変化予測。注釈は省略。2046～2065年2081～2100年シナリオ平均可能性が高い予測幅平均可能性が高い予測幅世界平均地上気温の変化（℃）RCP2.61.00.4～1.61.00.3～1.7RCP4.51.40.9～2.01.81.1～2.6RCP6.01.30.8～1.82.21.4～3.1RCP8.52.01.4～2.63.72.6～4.8シナリオ平均可能性が高い予測幅平均可能性が高い予測幅世界平均海面水位の上昇（m）RCP2.60.240.17～0.320.400.26～0.55RCP4.50.260.19～0.330.470.32～0.63RCP6.00.250.18～0.320.480.33～0.63RCP8.50.300.22～0.380.630.45～0.82表SPM.3: CMIP5の地球システムモデルのシミュレーションにより計算された、RCPシナリオの大気中濃度変化に対応する2012年から2100年の期間の累積二酸化炭素排出量。シナリオ2012～2100年の累積二酸化炭素排出量(a)GtCGtCO2平均範囲平均範囲RCP2.6270140～410990510～1505RCP4.5780595～100528602180～3690RCP6.01060840～125038853080～4585RCP8.516851415～191061805185～7005注釈：(a) 1 GtC は、炭素換算で1ギガトン（=10 億トン=1000 兆グラム）を表す。二酸化炭素換算では36億6700万トンに相当する。要約の要約以下は、SPMの和訳の中に各章の要約として網掛けで記されていることをそのまま列記したものであり、いわば要約の要約である。|章 |要約|---|---|B. 気候システムの観測された変化 | 気候システムの温暖化には疑う余地がなく、また 1950 年代以降、観測された変化の多くは数十年から数千年間にわたり前例のないものである。大気と海洋は温暖化し、雪氷の量は減少し、海面水位は上昇し、温室効果ガス濃度は増加している（図 SPM.1、図 SPM.2、図 SPM.3、図 SPM.4 を参照）。|B.1 大気 |地球の表面では、最近 30 年の各 10 年間はいずれも、1850 年以降の各々に先立つどの 10 年間よりも高温でありつづけた（図 SPM.1 を参照）。北半球では、1983～2012 年は過去 1400 年において最も高温の 30 年間であった可能性が高い（中程度の確信度）。|B.2 海洋 |海洋の温暖化は気候システムに蓄積されたエネルギーの増加量において卓越しており、1971 年から2010 年の間に蓄積されたエネルギーの 90%以上を占める（高い確信度）。1971 年から 2010 年において、海洋表層（0～700 m）で水温が上昇したことはほぼ確実であり（図 SPM.3 を参照）、また 1870年代から 1971 年の間に水温が上昇した可能性が高い。|B.3 雪氷圈 |過去 20 年にわたり、グリーンランド及び南極の氷床の質量は減少しており、氷河はほぼ世界中で縮小し続けている。また、北極域の海氷及び北半球の春季の積雪面積は減少し続けている（高い確信度）（図SPM.3 を参照）。|B.4 海面水位 |19 世紀半ば以降の海面水位の上昇率は、過去 2 千年間の平均的な上昇率より大きかった（高い確信度）。1901 年から 2010 年の期間に、世界平均海面水位は 0.19 [0.17～0.21] m 上昇した（図SPM.3 を参照）。|B.5 炭素とその他の生物地球化学循環 |大気中の二酸化炭素、メタン、一酸化二窒素濃度は、少なくとも過去 80 万年間で前例のない水準にまで増加している。 二酸化炭素濃度は、第一に化石燃料からの排出、第二に正味の土地利用変化による排出により、工業化以前より 40%増加した。海洋は排出された人為起源の二酸化炭素の約 30%を吸収し、海洋酸性化を引き起こしている（図 SPM.4 を参照）。|C. 気候変動をもたらす要因 |放射強制力の合計は正であり、その結果、気候システムによるエネルギーの吸収をもたらしている。合計放射強制力に最大の寄与をしているのは、1750 年以降の大気中の二酸化炭素濃度の増加である（図SPM.5 を参照）。|D. 気候システム及びその近年の変化についての理解 |気候システムに対する人間の影響は明瞭である。これは、大気中の温室効果ガス濃度の増加、正の放射強制力、観測された温度上昇、そして気候システムに関する理解から明白である。|D.1 気候モデルの評価 |第 4 次評価報告書以降、気候モデルは改良されている。モデルは、20 世紀半ば以降のより急速な温暖化や、大規模火山噴火直後の寒冷化を含め、観測された地上気温の大陸規模の分布や数十年にわたる変化傾向を再現している（非常に高い確信度）。|D.2 気候モデルの応答の定量化 |温度変化、気候フィードバック、及び地球のエネルギー収支の変化に関する観測やモデルによる研究が総合されて、過去及び将来の強制力への応答としての地球温暖化の大きさについての確信度を与えている。|D.3 気候変動の検出と原因特定 |気候に対する人為的影響は、大気と海洋の温暖化、世界の水循環の変化、雪氷の減少、世界平均海面水位の上昇、及びいくつかの気候の極端現象の変化において検出されている（図 SPM.6、表 SPM.1 を参照）。人為的影響に関するこの証拠は、第 4 次評価報告書以降増加し続けている。人間による影響が20 世紀半ば以降に観測された温暖化の支配的な原因であった可能性が極めて高い。|E. 将来の世界及び地域における気候変動 |温室効果ガスの継続的な排出は、更なる温暖化と気候システム全ての要素の変化をもたらすだろう。気候変動を抑制するには、温室効果ガス排出量の大幅かつ持続的な削減が必要であろう。|E.1 大気：気温 |21 世紀末における世界平均地上気温の変化は、RCP2.6 シナリオを除く全ての RCP シナリオで 1850年から 1900 年の平均に対して 1.5℃を上回る可能性が高い。RCP6.0 シナリオと RCP8.5 シナリオでは 2℃を上回る可能性が高く、RCP4.5 シナリオではどちらかと言えば 2℃を上回る。RCP2.6 シナリオを除く全ての RCP シナリオにおいて、気温上昇は 2100 年を越えて持続するだろう。気温上昇は年々から十年規模の変動性を示し続け、地域的に一様ではないだろう（図 SPM.7、図 SPM.8 を参照）。|E.2 大気：水循環  |21 世紀にわたる温暖化に対する世界の水循環の変化は一様ではないだろう。地域的な例外はあるかもしれないが、湿潤地域と乾燥地域、湿潤な季節と乾燥した季節の間での降水量の差が増加するだろう（図 SPM.8 を参照）。|E.3 大気：大気質 ||E.4 海洋 |21 世紀の間、世界全体で海洋は昇温し続けるであろう。熱は海面から海洋深層に広がり、海洋循環に影響するであろう。|E.5 雪氷圈 |21 世紀の間、世界平均地上気温の上昇とともに、北極域の海氷面積が縮小し厚さが薄くなり続けること、また北半球の春季の積雪面積が減少することの可能性は非常に高い。世界規模で氷河の体積は更に減少するだろう。|E.6 海面水位 |21 世紀の間、世界平均海面水位は上昇を続けるだろう（図 SPM.9 を参照）。海洋の温暖化が強まることと、氷河と氷床の質量損失が増加することにより、全ての RCP シナリオについて海面水位の上昇率は1971 年から 2010 年の期間に観測された上昇率を超える可能性が非常に高い。|E.7 炭素とその他の生物地球化学循環 |気候変動は、大気中の二酸化炭素の増加を更に促進するような形で炭素循環過程に影響を与えるであろう（高い確信度）。海洋の更なる炭素吸収により、海洋酸性化が進行するであろう。|E.8 気候の安定化、気候変動の不可避性と、気候変動の不可逆性 |二酸化炭素の累積排出量によって、21 世紀後半及びその後の世界平均の地表面の温暖化の大部分が決定づけられる（図 SPM.10 を参照）。気候変動の特徴の大部分は、たとえ二酸化炭素の排出が停止したとしても、何世紀にもわたって持続するだろう。このことは、過去、現在、及び将来の二酸化炭素の排出の結果による、大規模で数世紀にわたる気候変動の不可避性を表している。"},
{file:"/2015/10/26/dentist/",title:"歯科診療",mtime:1445815383,ctime:1445815383,body:"歯科診療 奥歯の被せ物（銀歯）が外れたので、入れてもらった。外れた銀歯を保管して持って行ったら、そのままはめられた。歯科医師の先生に聞いた話のメモ。私は医者ではないので、ここに書かれていることは信用しないでください。銀歯を入れたのは2年前。外れたのははじめて。とりあえず、今回はそのままはめ直し。今後、何度も外れるようだったら、適合性が悪くなっているので作り直す必要があるかもしれない。その時は、また考える。老化による歯の退化により、適合性が悪くなる可能性もある。歯周病の予防に効くとされているガムが売られているが、歯に詰め物がある場合は、やめた方がいい。顎関節症について、今のところは特に問題ないが、気をつける必要あり。クリッキング。歯磨きについて。だいたいよく磨けているが、下の前歯裏と、右の奥歯裏をもっと丁寧に。最初に歯磨き粉をつけずに丁寧に磨いて、最後に歯磨き粉をつけて軽く磨くと良い。関連サイト歯の詰め物が取れた時の３つの対処法と４つのやってはいけないこと日本臨床歯周病学会：一般の皆様へ日本顎関節学会：一般の方へ"},
{file:"/2015/10/27/open-command/",title:"ターミナルからファイルを開く",mtime:1445890082,ctime:1445890082,body:"ターミナルからファイルを開く 端末エミュレータ から指定したファイルを関連付けられているアプリケーション（あるいは指定したアプリケーション）で開く方法について、Mac, Linux, Windows それぞれの方法をメモ。Mac の場合ターミナルで open コマンドを使う。open Readme.txtとすると、Readme.txt に関連付けられているアプリケーションで Readme.txt が開かれる。open http://google.comとすれば、ブラウザで Google を開くことができる。また、ディレクトリを指定するとopen .とすれば、Finder でカレントディレクトリが開かれる。関連付けられているアプリケーションとは異なるアプリケーションを使いたいことがある。たとえば、html ファイルをエディタで編集したい時など。-tオプションを使うと、デフォルトのテキストエディタで開くことができる。open -t filenameまた、openコマンドの-aオプションを使って -a アプリケーションで、起動するアプリケーションを指定できる。CotEditor で指定したファイルを開くコマンド cot を作るには、!/bin/shopen $1 -a /Applications/CotEditor.appといったシェルスクリプトを作っておき、実行可能にして cotコマンドとしてパスが通る場所に置いておく。cot filenameとして、使うことができる。open --help で次のヘルプが表示される。Usage: open [-e] [-t] [-f] [-W] [-R] [-n] [-g] [-h] [-b <bundle identifier>] [-a <application>] [filenames] [--args arguments]Help: Open opens files from a shell.  By default, opens each file using the default application for that file.  If the file is in the form of a URL, the file will be opened as a URL.Options:   -a                Opens with the specified application.  -b                Opens with the specified application bundle identifier.  -e                Opens with TextEdit.  -t                Opens with default text editor.  -f                Reads input from standard input and opens with TextEdit.  -F  --fresh       Launches the app fresh, that is, without restoring windows. Saved persistent state is lost, excluding Untitled documents.  -R, --reveal      Selects in the Finder instead of opening.  -W, --wait-apps   Blocks until the used applications are closed (even if they were already running).      --args        All remaining arguments are passed in argv to the application's main() function instead of opened.  -n, --new         Open a new instance of the application even if one is already running.  -j, --hide        Launches the app hidden.  -g, --background  Does not bring the application to the foreground.  -h, --header      Searches header file locations for headers matching the given filenames, and opens them.他にも、Finder と Terminal の連携をするための技がこの記事に解説されている。FinderとTerminalの連携を考えるLinux の場合xdg-open または gnome-open コマンドを使う。LinuxでコマンドラインからURLやファイルを開けるxdg-open/gnome-openのメモなんだかコマンドがダサいと思われる方は.bashrcでinteractiveか判定した後にalias open=xdg-open等としておけばいいかもしれません。xdg-open(1) - Linux man pageWindows の場合コマンドプロンプトから start コマンドを使う。意外に知らないstartコマンドの使い方別ウィンドウでコマンドを実行(START)以下は、Windows 10 で start /? として表示されるヘルプ。指定されたプログラムまたはコマンドを実行するためにウィンドウを開きます。START [ タイトル ] [/D パス] [/I] [/MIN] [/MAX] [/SEPARATE | /SHARED]  [/LOW | /NORMAL | /HIGH | /REALTIME | /ABOVENORMAL | /BELOWNORMAL]  [/NODE <NUMA ノード>] [/AFFINITY <16 進数の関係マスク>] [/WAIT] [/B]  [コマンド/プログラム] [パラメーター] タイトル   ウィンドウのタイトル バーに表示するタイトル。パス        開始するディレクトリ。B           新しいウィンドウを作成せずにアプリケーションを起動します。            アプリケーションは Ctrl + C を無視します。            アプリケーションで Ctr l+ C を有効にしていない場合、            Ctrl + Break がアプリケーションを中断する唯一の方法です。I           新しい環境は、現在の環境ではなく、cmd.exe に渡された元の環境に            なります。MIN         ウィンドウを最小化の状態で起動します。MAX         ウィンドウを最大表示の状態で起動します。SEPARATE    16 ビットの Windows プログラムを別メモリ領域で起動します。SHARED      16 ビットの Windows プログラムを共有メモリ領域で起動します。LOW         IDLE 優先度クラスでアプリケーションを起動します。NORMAL      NORMAL 優先度クラスでアプリケーションを起動します。HIGH        HIGH 優先度クラスでアプリケーションを起動します。REALTIME    REALTIME 優先度クラスでアプリケーションを起動します。ABOVENORMAL ABOVENORMAL 優先度クラスでアプリケーションを起動します。BELOWNORMAL BELOWNORMAL 優先度クラスでアプリケーションを起動します。NODE        優先 NUMA (Non-Uniform Memory Architecture) ノードを 10 進の            整数で指定します。AFFINITY    プロセッサの関係マスクを 16 進数で指定します。            プロセスはこれらのプロセッサで実行されるように制限されます。            /AFFINITY と /NODE を組み合わせると、関係マスクは異なって            解釈されます。NUMA ノードのプロセッサ マスクを右にシフトして            ビット 0 で始まるかのように関係マスクを指定します。            プロセスは、指定した関係マスクと NUMA ノードの間で共通する            プロセッサ上で実行されるように制限されます。共通するプロセッサ            がない場合は、プロセスは指定した NUMA ノード上で実行される            ように制限されます。WAIT        アプリケーションを起動し、終了するまで待ちます。コマンド/プログラム            内部コマンドまたはバッチ ファイルの場合、コマンド プロセッサ            は cmd.exe の /K オプションを使用して実行されます。            これはコマンドの後でもウィンドウが残ることを意味            します。            内部コマンドまたはバッチ ファイルではない場合、そのプログラム            はウィンドウ モードのアプリケーションまたはコンソール            アプリケーションとして動作します。パラメーター            コマンド/プログラムに渡すパラメーターです。注意: SEPARATE および SHARED オプションは 64 ビット プラットフォームではサポートされません。/NODE を指定すると、NUMA システム上のメモリ局所性を利用する方法でプロセスが作成されるようにできます。たとえば、共有メモリ経由で互いに頻繁に通信する2 つのプロセスを、メモリ待ち時間を最小限に抑えるために同じ優先 NUMA ノードを共有するように作成できます。これらのプロセスは可能であれば同じ NUMA ノードからメモリを割り当て、指定したノード外のプロセッサ上で実行されることもあります。start /NODE 1 application1.exestart /NODE 1 application2.exeこれら 2 つのプロセスは、さらに、同じ NUMA ノード内の特定のプロセッサ上で実行されるように制限できます。次の例では、application1 がノードの低順位の2 つのプロセッサ上で実行されるのに対し、application2 はノードの次の 2 つのプロセッサ上で実行されます。この例では、指定したノードに少なくとも 4 つの論理プロセッサがあることを想定しています。ノード番号は、関係マスクを変更しなくても、そのコンピューターの任意の有効なノード番号に変更できることに注意してください。start /NODE 1 /AFFINITY 0x3 application1.exestart /NODE 1 /AFFINITY 0xc application2.exeコマンド拡張機能を有効にすると、コマンド ラインまたは START コマンドによる外部コマンドの起動は、次のように変更されます:非実行可能ファイルは、ファイル名をコマンドとして入力することによって、ファイルの関連付けを使って開くことができます (例:  WORD.DOC は .DOCファイル拡張子に関連付けられているアプリケーションを起動します)。コマンド スクリプト内でファイルの関連付けを作成する方法については、ASSOC と FTYPE コマンドを参照してください。32 ビット GUI アプリケーションを実行する場合、CMD.EXE は、アプリケーションの終了を待たずにコマンド プロンプトに戻ります。コマンド スクリプト内で実行する場合は、この動作は発生しません。最初のトークンが拡張子やパス修飾子を持たない文字列  CMD  であるコマンド ラインを実行する場合、 CMD  が COMSPEC 変数の値で置き換えられます。これにより現在のディレクトリの CMD.EXE が使われないようにします。最初のトークンが拡張子を含まないコマンド ラインを実行する場合、CMD.EXE は、PATHEXT 環境変数の値を使って拡張子の種類と順序を判断します。PATHEXT 変数の既定値は、次のとおりです:    .COM;.EXE;.BAT;.CMDこの構文は PATH 変数と同じであり、各要素はセミコロンで区切られていることに注意してください。実行可能なファイルを検索するときにどの拡張子でも一致するファイルが見つからない場合は、拡張子なしの名前がディレクトリ名と一致するかどうかを調べます。一致する場合は、START コマンドがそのパスでエクスプローラーを起動します。コマンド ラインから実行した場合は、そのパスに対する CD /D の実行と同じになります。"},
{file:"/2015/10/28/win10-virtualbox/",title:"VirtualBox への Windows 10 のアップグレードインストール",mtime:1446007687,ctime:1446007687,body:"VirtualBox への Windows 10 のアップグレードインストール VirtualBox 上で、Windows 7 から Windows 10 へアップグレードした。ホストOSは、Mac OS X。OSバージョンの設定まずは、OS タイプのバージョンを Windows 10 に設定した。VirtualBox での新規仮想マシンの作成 より図 6.6 に示すように、VM 名および OS タイプの手順で、仮想マシンのわかりやすい名前を「名前」フィールドに入力し、インストールしようとしているオペレーティングシステムとバージョンをドロップダウンリストから選択します。これによって VirtualBox が仮想マシンに使用するデフォルト設定が決まるため、正しいオペレーティングシステムとバージョンを選択することが重要です。最初は、仮想マシンの OS タイプのバージョンに、Windows 10 が表示されなかったので、VirtualBox を最新版 (5.0.8) にアップデートしてから設定した。ディスク容量の拡張Windows 7 で確保していたディスク容量が、Windows 10 をインストールするには少なかったので、仮想ディスク容量を拡張した。可変サイズの VDI 形式で仮装ディスクを作成していたので、次の手順で拡張できた。VirtualBoxにおける仮想マシンの仮想ディスク容量を拡張するための手順まず、ホストOSで VBoxManage コマンドを実行して、ディスク容量を拡張する。~VBoxManage modifyhd 拡張したい仮想マシンの仮想ディスクのパス —-resize 拡張後のディスク容量~これだけでは、仮想マシンで拡張された分のディスクを使用できる状態にないので、仮想マシン側でディスクを拡張する。Windows 7 を起動して C ドライブの拡張を試みたが（システムとセキュリティー > 管理ツール > コンピューターの管理 > ディスクの管理 > Cドライブを右クリックして「ボリュームの拡張」[参考](http://tech.ewdev.info/2014/10/2140/)）、Cドライブは起動ディスクなので、拡張できなかった。そこで、上記サイトに書かれているように、Linux で起動して、gparted でパーティションを編集した。LiveCD から起動しても良いが、すでに Debian をインストールした仮想ディスク環境があったので、そこから起動した。Debian 環境の SATA ドライブに Windows のディスクを追加して起動gparted で Cドライブに相当する /dev/sdb2 を拡大して、シャットダウンDebian 環境からは Windows のディスクを削除Windows 7 を起動チェックディスクが立ち上がる再起動、無事にCドライブが拡張されたWindows 10 へのアップグレード「Windows 10 を入手する」アプリからのアップグレードを試みた。「Windows 10を入手する」アプリは表示されましたかしかし、「Windows 10 を入手する」アプリを起動すると、VirtualBox Graphics Adapter が Windows 10 に対応していないから Windows 10 を入手できないと言われてしまう。その件について、いくつかのサイトを検索した。VirtualBoxでWindows 10アップデートHow to get VirtualBox video driver working in Windows 10 build 10041Windows 10 inside VirtualBox not scaling after upgrade from 8.1VirtualBox Graphics Adapter を削除する方法はうまくいかなかったので、手動インストールすることとし、Windows 10 のディスクイメージをダウンロードした。Windows 10 のディスク イメージ (ISO ファイル) のダウンロードファイルサイズは、32 bit 版は 2.9 GB、64 bit 版は 3.9 GB とけっこう大きく、時間がかかった。ダウンロードが終わり、Windows 7 を起動して、DVDドライブに Windows 10 のディスクイメージをマウントして、setup.exe を実行したら、アップグレードできた。Windows 10 にアップグレードした直後の使用ディスク容量は 33.7 GBだった。Microsoft Office Professional 2013 がインストールされ、他にもいくつかのプログラムとデータが入っている状態で、ルートディレクトリの下は、ユーザー 1.55 GB、Program Files 2.79 GB、cygwin 1.33 GB、Windows 9.40 GB、Windows.old 14.5 GB。"},
{file:"/2015/10/29/linear-trend-estimation/",title:"株価時系列データからの線形回帰トレンド作成",mtime:1446092188,ctime:1446092188,body:"株価時系列データからの線形回帰トレンド作成 株価の時系列データを分析し予測するテクニカル分析の手法の中で、過去の株価の時系列データだけを分析する手法には、いくつかの手法がある。その中で、ある一定期間の株価を線形で回帰分析する線形回帰トレンドを Excel で計算する。以下の資料の線形回帰トレンドに示されているExcelによる計算方法を利用して、株価時系列データから線形回帰トレンドの図を作成した。Excelによる経済・経営分野の情報処理IV」ー株価のテクニカル分析ー (和歌山大学経済学部　牧野真也)これが、その Excel ファイルである。株価分析 Excel ファイル使い方は、Yahoo! ファイナンス 株式 から、解析する銘柄の株価時系列データを取得する。株価時系列データをクリップボードにコピーして、水色のセルに貼り付ける。必要に応じて、縦軸の最小値と最大値を調整する。このようにすると、75日線形回帰と25日線形回帰が表示される。アップルインターナショナルの2015年10月28日までの株価データを使うと、このようなグラフが作成できる。実線が最小２乗法による線形回帰式の直線であり、上下の破線は回帰式±標準誤差と回帰式±２×標準誤差を示している。"},
{file:"/2015/10/30/excel-regression/",title:"Excel と回帰分析",mtime:1446179705,ctime:1446179705,body:"Excel と回帰分析 Excel で回帰分析をする方法についての参考ページです。散布図と近似式エクセル2013基本講座：散布図に近似曲線を表示する健康統計の基礎・健康統計学 - Excelで散布図と回帰直線を作成回帰直線を関数で計算回帰直線を求めるためのエクセル関数応用例：株価時系列データからの線形回帰トレンド作成より高度な分析（重回帰分析、非線形回帰)やってみよう分析！ 第5章：Excelの分析ツールとソルバーの活用(回帰、最小2乗法おまけ（Excel ではない)SWRC Fit - 土壌水分特性曲線の非線形回帰プログラム -"},
{file:"/2015/11/02/blank-cell/",title:"Excel の計算における空白セルの処理",mtime:1446436885,ctime:1446436885,body:"Excel の計算における空白セルの処理 Excel で計算式を書く時に、空白セルがある時の処理のしかたについて。空白セルがあるときに計算結果を表示しない、という場合には、IF関数を使って =IF(A2=  ,  ,計算式) のように書く（A2 セルが空白セルかどうかを判定する場合）。詳しい解説はこちら。第三回　「IF関数」の空白処理を知らないとExcelの便利さ半減！？次に、空白セルを 0 であるとして計算したい場合について。空白セルを参照した計算式を書けば、空白セルの値が0であるとして計算がされる。VALUE関数を使えば、文字列は数値に変換され、空白セルは0に変換される。空白文字が入っている時や、計算式の途中でNULL値が返ってきたときなど、1の方法でうまくいかなかった時に使える。データ内の空白セルを一括で選択して「0」を入れる方法と、その逆については、ここで解説されている。Excelワザ　空白セル　⇔　「０」"},
{file:"/2015/11/04/energy-policy/",title:"エネルギー政策と原子力発電",mtime:1446608346,ctime:1446608346,body:"エネルギー政策と原子力発電 エネルギー政策と原子力発電について、特に福島第一原子力発電事故の前後でどのように変わってきたかを中心に年表をまとめる。|---|年次 | できごと |説明|---|2002年 |「エネルギー政策基本法」制定 | 第十二条 　政府は、エネルギーの需給に関する施策の長期的、総合的かつ計画的な推進を図るため、エネルギーの需給に関する基本的な計画（以下「エネルギー基本計画」という。）を定めなければならない。|2003年 |「エネルギー基本計画」閣議決定 |原子力発電については、安全確保を大前提として、今後とも基幹電源と位置付け推進する。核燃料サイクルを推進する。|2007年 |「エネルギー基本計画」改定（閣議決定） | 2003年と同様の方針をより詳しく。|2010年 |「エネルギー基本計画」改定（閣議決定）| ゼロエミッション電源（原子力発電＋再生可能エネルギー）の電源比率を、2010年の34%から、2020年50%、2030年70%へと引き上げる。その中で、再生可能エネルギーは2020年に10%とする（つまり、原子力を40%に上げる）。原子力発電は、2008年の時点で54基稼働し、設備利用率60%であった。これを、2020年までに9基増設して、設備利用率を85%とし、2030年までに14基増設して設備利用率90%とする。|2011年 | 福島第一原子力発電事故 | 3月11日。「原子力発電では炉心溶融のような苛酷事故は決して起きない」という原子力安全神話が崩壊した。|2011年 | エネルギー白書2011 (概要) | 10月28日。これまでのエネルギー政策を反省し、聖域なく見直す。エネルギー基本計画もゼロベースで見直す必要。原子力発電については、中長期的に依存度を可能な限り引き下げていくという方向性を目指すとともに、省エネルギーの徹底的な推進、再生可能エネルギーの開発・普及の強力な推進が重要。|2012年| 国内の原発がすべて停止。 | 5月5日。北海道電力泊原発3号機を定期点検のため停止したことによる。|2013年| 原子力発電所の新規制基準施行 | 7月8日。原子力規制委員会による。シビアアクシデントやテロを防止するための基準を新しく策定。|2014年|「エネルギー基本計画」改定 | 原子力発電は重要なベースロード電源。ただし、原子力発電への依存度は省エネルギー・再生可能エネルギーの導入や火力発電所の効率化などにより、可能な限り低減させる。電源構成のベストミックスの目標を出来る限り早く決定する。|2015年|電源構成の経済産業省案 | 6月1日。総合資源エネルギー調査会（経済産業相の諮問機関）の小委員会。2030年に原子力20〜22%、再生可能エネルギー22～24％とする。参考意見は下記。|2015年|川内原発１号機再稼働 | 8月11日。2013年に新規制基準が導入されてから、原発の再稼働は初めて。2015年6月1日の電源構成の経済産業省案に対する参考意見：視点・論点　「電源構成割合の問題点」 (橘川武郎, NHK, 2015/5/22)2030 年の日本の電源構成見通し：より多くのガスと太陽光発電の導入は可能 (PDF) (Bloomberg Finance, 2015/6/2)"},
{file:"/2015/11/06/word-link/",title:"Word 参考サイト",mtime:1446783828,ctime:1446783828,body:"Word 参考サイト Microsoft Word の使い方について解説しているサイトへのリンクです。Windows 版「Office 2016」で何が変わった？--生産性を上げる10の特長 (ZDNet, 2015/10/8)ワード2013基本講座 (よねさん)Office 2013 トレーニングビデオ (Microsoft)ワード2010基本講座 (よねさん)動画マニュアル：Word 2010 使い方 (Webdemo Inc)ワード2007基本講座 (よねさん)Mac 版Word for Mac 2011 のトレーニング (Microsoft)マイクロソフト ワード (Microsoft Word 2008) for Mac 使い方辞典関連記事Excel 参考サイトPowerPoint 参考サイトオフィスソフトの比較"},
{file:"/2015/11/07/draft-and-publish/",title:"記事の下書き",mtime:1446856104,ctime:1446856104,body:"記事の下書き Jekyll で記事を公開する前に下書きを作成して保存する方法には、いくつかの流儀があって、好みで使い分けられているようだ。_drafts フォルダを使う方法YAML フロントマター に published: false を設定する方法未来の時間を設定する方法下書き用のブランチを作成する方法この中で、私は1の方法を採用することにした。現在作業中のファイルが1つのフォルダの下にまとまっているのは分かりやすいと感じるためである。スクリプトを作成して、下書きのプレビューと公開を、それぞれ _drafts フォルダの下でコマンド一発でできるようにした。このスクリプトを使うと、コミットログがきれいになる。また、公開時に自動的にファイル名に日付が付与されるので、下書きの時点でファイル名に日付を入れる必要がない。下書きのプレビュー_drafts/Makefile を作成した。UNAME = ${shell uname}all:git add -A- git commit -m draftmake previewpush:git add -A- git commit -m draftgit push origin mastermake previewpreview:if [ $(UNAME) =  Darwin  ]; then open http://localhost:4000/; fiif [ $(UNAME) =  Linux  ]; then xdg-open http://localhost:4000/; ficd ..; bundle exec jekyll serve --drafts --host localhostこれで、_drafts フォルダで make とすると、git への commit下書き記事入りでサイトのプレビュー (Mac または Linux の場合）サイト構築と localhost でのサーバー起動を、まとめてする。git については、push まではしないので、push もいっしょにしたい時には make push とする。プレビューをサイト構築の前にしているので、最初はプレビューが表示されないが、ブラウザによっては、サイトが構築されると自動的に再読み込みして表示をしてくれる。自動的にしてくれない場合には、自分で更新ボタンを押す。下書きの公開シェルスクリプト _drafts/pub を作成した。_drafts フォルダの下で、filename というファイルを公開したい時には、./pub filenameとすることで、以下の作業をまとめてできる。git mv を使う場合と比べると、下書き時点のコミットログが見えなくなるのでコミットログがきれいになる。filename を ../_posts/YY-MM-DD-Filename にコピーする。このときに YAML フロントマターに date: フィールドを作成して追加するので、下書きには date: フィールドを入れない。公開するポストを、Published on [permalink] というコミットメッセージで git レポジトリにコミットする。マスターブランチに push する。下書きのファイルを git レポジトリから削除する。なお、コミットメッセージのパーマリンクは pretty 形式となっているので、他の形式にするためには、スクリプトの次の箇所を直接編集する必要がある。Permalink=$Site_URLdate -u +/%Y/%m/%d/``echo $Filename | sed -e 's/\..*$/\//'また、サイトの URL は _config.yml の url: 行から読んでいる。"},
{file:"/2015/11/08/msieve/",title:"素因数分解プログラム msieve",mtime:1446939564,ctime:1446939564,body:"素因数分解プログラム msieve 素因数分解をするプログラム msieve は相当に速いということなので、インストールした。Integer Factorization Source CodeSourceforge: MsieveMsieve の使い方Mac で Homebrew を使っている場合には、Homebrew Science に Formula を入れておいた ので、brew install homebrew/science/msieveで、インストールできる。これで、msieve -q 素因数分解したい数で、手軽に素因数分解ができるようになった。ためしに、レピュニット Rn = (10n - 1) / 9 について、R100 までの素因数分解をしてみた。python が入っていれば、python -c  for i in range(101): print ('1'*i)  | msieve -m -l rep100.txtで、rep100.txt に計算結果が保存される。計算は1時間半ほどで終了した。あまり細かいログがいらない時には、python -c  for i in range(101): print ('1'*i)  | msieve -m -q | grep -v next > rep100.txtとすれば、計算結果だけが保存される。たとえば、R97 の計算結果は1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111p8: 12004721prp36: 846035731396919233767211537899097169prp54: 109399846855370537540339266842070119107662296580348039となる。これはつまり、$$\begin{eqnarray*}R_{97} &=& \frac{10^{97}-1}{9} \&=& 12004721 \&\cdot& 846035731396919233767211537899097169 \&\cdot& 109399846855370537540339266842070119107662296580348039\end{eqnarray*}$$であることを示している。ここで、p8 は8桁の素数であることを、prp36 は36桁の「おそらく素数」であることを示している。素数判定には確率的手法を使っているため、prp (probably prime) はまだ素数であることが確定しているわけではないが、ほぼ確実に素数、というくらいの「おそらく」である。計算の確認は、calc を使うか$ calc  12004721 * 846035731396919233767211537899097169 * 109399846855370537540339266842070119107662296580348039 1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111Online Arbitrary Precision Calculator を使う。ここに、R100 までの計算結果を貼っておく。Factorization of repunit up to 100 with msieveレピュニットの素因数分解はこのサイトで計算結果がまとめられている。Factorizations of 11...11 (Repunit)"},
{file:"/2015/11/08/sieve/",title:"素因数分解プログラム msieve の結果表示を変換するスクリプト",mtime:1446946851,ctime:1446946851,body:"素因数分解プログラム msieve の結果表示を変換するスクリプト 素因数分解プログラム msieve の結果表示を変換するスクリプトを書いた。{% gist a31408f4061a943c85a0 %}これを sieve としてパスの通ったところに入れておけば、$ sieve 12345678902 * 3 ^ 2 * 5 * 3607 * 3803のように計算結果が表示される。msieve がインストールされている必要がある。"},
{file:"/2015/11/10/excel-link/",title:"Excel 参考サイト",mtime:1447118857,ctime:1447118857,body:"Excel 参考サイト Microsoft Excel の使い方について解説しているサイトへのリンクです。Windows 版Excelでお仕事！ (井上 治)エクセル2013基本講座 (よねさん)Office 2013 トレーニングビデオ (Microsoft)エクセル2010基本講座 (よねさん)動画マニュアル Excel 2010 使い方 (Webdemo Inc)エクセル2007基本講座 (よねさん)Mac 版Excel for Mac 2011 のトレーニング (Microsoft)マイクロソフト エクセル 使い方辞典 (Excel 2008 for Mac)関数Excel 関数 (機能別) (Microsoft)Excel(エクセル)関数一覧表  (よねさん)エクセル関数の技36 (日経PC21)ワンポイント相対参照と絶対参照関連記事Word 参考サイトPowerPoint 参考サイトオフィスソフトの比較"},
{file:"/2015/11/11/joho-a-link/",title:"「情報処理実習A」参考サイト",mtime:1449193066,ctime:1447198542,body:"「情報処理実習A」参考サイト 「情報処理実習A」の授業で参考にするサイトへのリンクです。講義全般情報処理実習A: 講義情報受講者専用ページ (東洋大学外からはアクセス不可)ToyoNet 情報関連ポータルパソコンの基礎・インターネット・セキュリティファイルの拡張子についてキー配列 / タッチタイピング (Wikipedia)イータイピングネットワークと情報セキュリティ (Kindle 版)情報処理技術者試験 - ITパスポート試験Microsoft Officeオフィスソフトの比較Word 参考サイトExcel 参考サイトPowerPoint 参考サイト"},
{file:"/2015/11/12/office-soft/",title:"オフィスソフトの比較",mtime:1447952995,ctime:1447264910,body:"オフィスソフトの比較 オフィスソフトとは、ワープロ、表計算、プレゼンテーション等、PCを用いたオフィス業務に必要なソフトウェアをセットにしたもので、オフィススイートとも呼ばれる。現在では Microsoft Office が圧倒的シェアを築いているが、他にも様々な製品やフリーソフトウェアがある。また、PCにインストールして使うものだけではなく、ブラウザから使うもの、タブレット端末やスマートフォンで使うものなど使い方が多様化している。仕事で使う時には会社で使われている製品を使うことになるが、個人的な利用であれば、目的や予算に応じて好きなソフトを選ぶことができる。共同作業でファイルをやりとりするときには、お互いにどのようなソフトウェアを使っているのか、ファイルの互換性はあるのか、といった配慮が必要となる。このページでは、比較的よく使われているオフィスソフトに関する情報をまとめる。比較記事無料（フリー）のオフィスソフトは、どれが使える？ (WEB、IT、パソコン講座, 2015/2/7)オフィススイートの比較 (Wikipedia)Microsoft OfficeMicrosoft Office 公式サイトデスクトップ版購入Office.com 無料オンラインアプリ, スマートフォン, タブレット, ラップトップ/デスクトップ無料で使える「新iPad版Office」レビュー　Excelは重要機能がカットされるも、PowerPointはプレゼンに有用 (日経トレンディネット, 2014/11/28)Microsoft Officeには複数のバージョンがあり、バージョンによって使い勝手が異なる。あるバージョンの操作に慣れた頃に、新しいバージョンで操作が変わってしまい戸惑う、ということもある。バージョンが異なるソフトで作成したファイルを開く時に、書式が完全に再現されるかどうかには注意が必要である。また、Office 2003 以前と Office 2007 以降では、ファイル形式、拡張子が異なる。<tr>  <th>ソフトウェア</th>  <th>目的</th>  <th>Office 2003 以前の拡張子</th>  <th>Office 2007 以降の拡張子</th></tr><tr>  <td rowspan= 2 >Word</td>  <td rowspan= 2 >文書作成</td>  <td rowspan= 2 >.doc</td>  <td>.docx (マクロ無効; 標準)</td></tr><tr>  <td>.docm (マクロ有効)</td></tr><tr>  <td rowspan= 2 >Excel</td>  <td rowspan= 2 >表計算</td>  <td rowspan= 2 >.xls</td>  <td>.xlsx (マクロ無効; 標準)</td></tr><tr>  <td>.xlsm (マクロ有効)</td></tr><tr>  <td rowspan= 2 >PowerPoint</td>  <td rowspan= 2 >プレゼンテーション</td>  <td rowspan= 2 >.ppt</td>  <td>.pptx (マクロ無効; 標準)</td></tr><tr>  <td>.pptm (マクロ有効)</td></tr><tr>  <td>Access</td>  <td>データベース</td>  <td>.mdb</td>  <td>.accdb</td></tr>Office 2007 以降では、拡張子に「x」と「m」がつけられている。それまでは、Microsoft 独自のバイナリ形式であったファイルの形式を、Office Open XML（OOXML）と呼ばれるXMLベースの国際的な標準規格の形式へと変更した。標準拡張子の「x」は、このXMLを意味するものと考えられる。複数のXMLファイルをzipで圧縮することにより、1つのファイルとしている。また、マクロ感染型ウィルスに感染することを防ぐために、マクロが有効な文書では拡張子を変えている。Word 参考サイトExcel 参考サイトPowerPoint 参考サイトGoogle ドキュメント文書作成、表計算、プレゼンテーション、図形編集ができる。ドキュメントは Google のサーバ（Google ドライブ）に保存され、ブラウザで直接編集する。他のユーザーとのドキュメント共有ができるため、共同管理するファイルを取り扱う時には便利である。いくつかのファイル形式でインポート・エクスポートが可能である。たとえば、Word や Excel で作成したドキュメントを Google ドライブにアップロードしてそのまま共有したり、PDFファイルに変換してダウンロードしたりすることもできる。Google ドキュメントGoogle ドキュメント エディタ ヘルプセンターGoogle ドライブGoogleドキュメントの互換性を検証～ どこまでMicrosoft Officeの代わりとして使えるのか？ (@IT, 2014/5/28)Googleドライブを使ったお手軽PDF変換術 (ITmedia, 2014/2/3)OpenOffice 系統オープンソース方式で開発・供給されていたオフィスソフト OpenOffice.org の製作プロジェクトは2011年に解散した。OpenOffice.org の後継として LibreOfficeと Apache OpenOffice がある。いずれもフリーソフトであり、Windows, Mac, Linux 等に対応している。LibreOfficeApache OpenOffice.org 国際的な標準規格である OpenDocument Format (ODF) という形式でファイルを読み書きする。Microsoft Office の OOXML 形式の読み込みも可能である。OOXML 形式の書き込みについては、LibreOffice は可能で、Apache OpenOffice では xlsx 形式の書き込みはできない。Microsoft Office で ODF 形式のファイルを読み書きすることは可能である。ベルギー、イギリス、フランス、ブラジル等、多くの国で政府として ODF のファイル形式を採用している。また、日本でも中央省庁や地方公共団体で ODF を標準フォーマットとして採用しているところがある。OpenDocument adoption (Wikipedia)Belgium adopts OpenDocument (Techworld, 2006/6/29)Open document formats selected to meet user needs (UK government, 2014/7/22)French Government IT directorate stands its ground : ODF supported, OOXML rejected (April, 2015/7/9)|ソフトウェア |目的 |拡張子||---------------+-----|-------||Writer |文書作成 |.odt ||Calc |表計算 | .ods||Impress |プレゼンテーション | .odp ||Draw|図形描画 | .odg||Math|数式 | .odf||Base|データベース | .odb|iWorkアップルが開発・販売している Mac や iOS 機器のためのオフィスソフトである。Mac を購入するとプリインストールされているので、Mac ユーザーが使うのには手軽で便利である。Microsoft Office の OOXML 形式でファイルの読み書きが可能であるが、Microsoft Office で開くと書式がずれることはよくある。たとえば Pages でレポートを作成してオンラインで提出する時には、PDFファイルに変換するのが良いであろう。PagesNumbersKeynoteMicrosoft Office の書類との互換性iCloud のための iWork新iWorkとiLifeはGarageBandも含めて新規購入MacとiOS端末ですべて無料 (ITmedia, 2013/10/23)|ソフトウェア |目的 |拡張子 ||---------------+-----|--------||Pages |文書作成 |.pages ||Numbers |表計算 |.numbers|Keynote |プレゼンテーション |.key |KINGSOFT OfficeMicrosoft Office と同じ OOXML 形式でファイルを読み書きし、操作性も Microsoft Office とよく似ている。なるべく Microsoft Office と近い操作性で、購入価格を抑えたい時には1つの選択肢である。Windows, Android, iOS (iPhone, iPad) に対応している。KINGSOFT Office製品一覧オンラインショップキングソフト オフィスはMS Officeの代わりになる？ (井上健語, All About, 2013/4/30)一太郎純国産ワープロソフトの一太郎は、かつては国内最大のシェアを持っていたが、Microsoft Office の Word にシェアを奪われてしまった。独自形式のファイルを使うが、Word 形式や ODF 形式にも対応している。表計算とプレゼンテーションソフトを備えるオフィス製品が、法人向け、官公庁向け、警察機関向けに用意されている。日本の役所が作る書類は無駄に罫線が多く、罫線が多い文書の作成は Word よりも一太郎の方が使いやすいとの定評がある。私は罫線が多い書類を作成するのが嫌いである。一太郎WebJUST Office一太郎 (ニコニコ大百科)一太郎と官公庁 (Open ブログ, 2011/2/18)官公庁のワープロソフトも一太郎からwordへ (弁護士ZEKE（ジーク）の法律問題etc.ブログ, 2012/2/5)"},
{file:"/2015/11/17/file-extension/",title:"ファイルの拡張子について",mtime:1447708665,ctime:1447708665,body:"ファイルの拡張子について ファイルの拡張子とは、ファイルのデータ形式を識別するためにファイル名の最後につけられる文字列である。Windows や Mac では、ドット (.) の後に続く文字であり、たとえば、filename.txt という名前のファイルがあるときに、.txt の部分、あるいは txt の部分が拡張子である。拡張子とアプリケーションの関連付けWindows では、拡張子とアプリケーションが関連付けられているときに、ファイルをダブルクリックすると、関連付けられたプログラムでそのファイルが開く。たとえば、Microsoft Office をインストールすると、拡張子 docx は Microsoft Word に関連付けられるため、拡張子 docx のファイルをダブルクリックすると、Word でそのファイルを開くことができる。この関連付けを変える方法については、Windows のバージョンによって異なり、以下のサイトに解説されている。Windows 10でファイルとアプリの関連付けを変更する (できるネット)Windows 10でアプリケーションと拡張子の関連付けを変更する方法 (NEC Personal Computers)ファイル拡張子とアプリケーションの関連付けを変更する（Windows 8編） (@IT, 2013/3/29)Windows 8 / 8.1でアプリケーションと拡張子の関連付けを変更する方法 (NEC Personal Computers)Windows7 ： 拡張子の関連付け法（ダブルクリックで開くプログラムを変更する） (教えて！HELPDESK)[ファイルを開くアプリケーションソフトを変更したい拡張子の関連付けを変更したい](http://soft1.jp/trouble/w/w015.html) (HEARTSNET)Mac OS X では、v10.4 以降、UTI (Uniform Type Identifier) という仕組みでデータの種類を識別している。UTIによって拡張子とファイルタイプが関連付けられるため、拡張子によってファイルタイプを判別することができる。以下の方法で、拡張子とファイルの関連付けを変えることができる。Mac OS Xでファイルの関連付けをちょっと簡単に変更する方法 (@makopo, 2011/8/13)Mac ファイルの関連付けを変更する設定方法！ (アプリアン, 2015/4/26)拡張子を表示するWindows では、アプリケーションの関連付けがされているファイルの拡張子が、デフォルトでは表示されないようになっている。そのため、多くの人は拡張子を意識せず、そのようなものがあることを知らない。ファイルの種類は、アイコンの種類で識別されている。しかし、これは以下の理由でよろしくない。ウィルスの可能性の高い exe scr vbs com などの実行ファイルの拡張子が表示されない。たとえば、見積書.exe というファイル名で、ファイルのアイコンが Word のアイコンになっていたときに、拡張子が見えないと、アイコンの形だけで Word のファイルだと認識して、そのファイルを起動してしまう可能性がある。ファイル名を レポート.docx として保存したところ、さらに自動的に .docx の拡張子が付与されて、レポート.docx.docx といったようなファイル名となる。フォルダでは ``レポート.docx``` というファイル名で表示される、といったような混乱が生じる。ファイルの拡張子を表示する設定方法については、以下のサイトに解説されている。Windows の場合Windows10でファイルの拡張子を表示させる方法 (Win10ラボ)Windows 8 / 8.1でファイルの拡張子を表示する方法 (NEC Personal Computers)ファイルの拡張子を表示する - Windows 7 (Microsoft)ファイルの拡張子を表示させる方法を教えてください。 (Fujitsu FMVサポート)Mac の場合Mac - ファイルの拡張子を表示/非表示にする (PC設定のカルマ)Macでファイルの拡張子を常に表示させる方法 (MacPlus+, 2014/12/9)拡張子の文字数拡張子の取り扱いはOSによって異なり、また歴史的な変遷もあった。インターネットが普及しだしたころ、Windows では「ファイル名8文字 +  .  + 拡張子3文字」という 8.3 ファイル形式が使われていたため、HTML ファイルの拡張子を .HTM と3文字にする必要があったが、Macintosh や UNIX では拡張子の文字数が自由であったため、.html が使われていた。やがて Windows でも、Winows NT 3.5 と Windows 95 から長いファイル名がサポートされ、8.3 文字の制限がなくなった。そのような経緯もあり、拡張子はドットを除いて3文字以内のものが多いが、4文字以上のものもある。拡張子の例Wikipedia のファイルフォーマット一覧には、拡張子とファイルフォーマットが一覧にされている。ただし、拡張子はファイルのデータ形式に必ずしも対応していないため、参考であるとしている。また、画像、音声、動画等のコンテナのファイル形式が、それぞれまとめられている。その中から、いくつかを以下に抜粋する。|拡張子 |説明 |主な使用ソフトウェア |種類||--------|-----|-------------------------|-----||7z| 7-Zipペッドファイル   |7-Zip |アーカイブ||AAC |Advanced Audio Coding （音楽ファイルの標準の1つ） ||音声|ACCDB |データファイル |Microsoft Access Database (Open XML)|データベース||AVI |Audio Video Interleaved 動画ファイル |Video for Windows、他多数|動画||BAT |バッチファイル|MS-DOS, RT-11|スクリプト||BMP|Windows、OS/2のビットマップ画像ファイル |QPeg、CorelDraw、PC Paintbrush、他多数|画像||BZ2 |圧縮ファイル |bzip2|圧縮||C |C言語ソース |GCCなど|ソース||CGI |Common Gateway Interface スクリプト | |スクリプト||CLASS|Java classファイル |Java|実行||COM |コマンドファイル |DOS|実行||CSS |カスケーディング スタイル シート| |スクリプト||CSV |カンマ区切りテキストファイル (Comma Separated Values) |||DOC |ドキュメントファイル。テキストファイル形式の説明書。| 多数 |文書||DOC|ワープロファイル |Microsoft Word、他 |文書||DOCM |Microsoft Word 2007 以降で作成されたマクロ機能有効な文書ファイル |Microsoft Word |文書||DOCX |Office Open XML ドキュメント |Microsoft Word|文書||DLL|Dynamic Link Library, 動的リンクライブラリ |Windows |実行||DVI |DeVice Independent document |TeX|文書||EPS|Encapsulated PostScript |CorelDraw - PhotoStyler - PMView - Adobe Illustrator - Ventua Publisher|画像||EXE |実行可能なプログラム |DOS, Windows|実行||FLV |Flash ビデオファイル |Flash Video Player|動画||GIF |Compuserves' Graphics Interchange Format |QPeg - Display - CompuShow |画像||GZ |圧縮ファイル |GNU zip - WinZipNT|圧縮||HTM |HTML 参照||文書 ||HTML |Hypertext Markup Language (WWW)  |Netscape - Mosaic - 多数 |文書||INDD |InDesign 文書 |Adobe InDesign|文書 ||INI |初期設定ファイル |||JAVA |Java ソースコード ||ソース ||JPEG |Joint Photography Experts Groupファイルフォーマット |多数 |画像||JPG |JPEGを参照 |多数 |画像||LZH |アーカイブ |LHA/LHARC|アーカイブ||MDB |Microsoft DataBase |Microsoft Access |データベース||MID |標準 MIDI ファイル |music synthetizers, Winamp|音声 ||MIDI |MID 参照 ||音声 ||MOV |動画形式 (Mac) |QuickTime|動画||MP3 |MPEG オーディ オストリーム, レイヤー3 |AWAVE, CoolEdit(+PlugIn), Winamp |音声||MP4 |マルチメディアコンテナ形式 MPEG 4 Part 14 |Winamp |音声||MPEG |マルチメディアコンテナ形式 |MPEG Player, Winamp |音声/動画||MPG |MPEGを参照    ||音声/動画||PDF |Adobe's Portable Document Format |Adobe Acrobat Reader|文書||PHP |PHP ファイル ||スクリプト ||PNG |Portable Network Graphics, Animated Portable Network Graphics |多数 |画像/動画||PPS |Microsoft PowerPoint Slideshow |Microsoft PowerPoint|プレゼンテーション||PPT |Microsoft PowerPoint プレゼンテーション |Microsoft PowerPoint|プレゼンテーション||PPTM |マクロ付き PowerPoint ファイル |Microsoft PowerPoint|プレゼンテーション||PPTX |Office Open XML プレゼンテーション |Microsoft PowerPoint|プレゼンテーション||PS |PostScript 形式の文書 |Adobe|文書||PSD |Photoshop bitmap file |Photoshop document|画像 ||PY |Python スクリプトファイル |Python |スクリプト||RB |Ruby スクリプトファイル |Ruby |スクリプト||RTF |Rich Text Format |ワードパッドなど多数 |文書||SVG |Scalable Vector Graphics, 多数 ||画像||TAR |アーカイブ |TAR |アーカイブ||TGZ |アーカイブ |WindowsZipNT - TAR - GNUzip |アーカイブ||TIF |TIFFを参照 ||画像||TIFF |TIFF (tagged image format file) bitmapped file |Alchemy - PhotoStyler -PageMaker - CorelDRAW |画像||TTF |TrueType Font ||フォント||TXT |ASCIIテキストファイルの一般的な名称 |メモ帳、テキストエディタなど多数 |文書||XLS|Microsoft Excelの表計算ファイル |Microsoft Excel |表計算||XLSM |Microsoft Excel 2007 Macro-Enabled Workbook (Spreadsheets) |Microsoft Excel 2007|表計算||XLSX |Office Open XML Workbook (スプレッドシート) |Microsoft Excel 2007 |表計算||XML |eXtensible Markup Language 文書 | |文書||WAV |音声形式 |Media Player |音声||ZIP |ZIPアーカイブ |PKZip, WinZip, Mac OS X、他多数 |アーカイブ|"},
{file:"/2015/11/18/last-update/",title:"最終更新日の表示",mtime:1447789082,ctime:1447789082,body:"最終更新日の表示 記事のヘッダーに最終更新日と更新履歴へのリンクを表示することを可能にした。たとえば、この記事では、ヘッダーにこのように表示されている。公開日：2015年11月12日 - 最終更新日：2015年11月17日そのために、YAML フロントマターにこのように書いてある。date: 2015-11-12 03:01:50 +0000update: 2015-11-17 06:38:29 +0000そして、レイアウトで公開日 page.date と最終更新日 page.update を取得して表示している。公開日：{{ page.date | date:  %Y年%-m月%-d日  }}{% if page.update %} - <a href= {{ % site.repository }}/commits/master/{{ page.path }} >最終更新日</a>：{{ page.update | date:  %Y年%-m月%-d日  }}{% endif %}<br />YAML フロントマターに update: がなければ、最終更新日は表示されない。最終更新日を表示したいときにだけ表示するようにした。ここで、時刻を手入力するのは面倒なので自動的に挿入している。公開日の date: は下書きを公開するスクリプトで挿入している。最終更新日の update: については、YAML フロントマターにupdate:と書くことで、コミット時に自動的に更新時刻を挿入するようにした。そのために、How to show the modification date of a file in Jekyll? に書かれている krlmlr さんのpre-commit フック を書き直して使った。すなわち、.git/hooks/pre-commit にこのスクリプトを置いた。!/bin/shContents of .git/hooks/pre-commitRead YAML front matter in all the modified files for committing,and replace  update:  line to  update: current date and time git diff --cached --name-status | grep  ^M  | while read a b; docat $b | sed  /---./,/---./s/^update:.*$/update: $(date -u  +%Y-%m-%d %T ) +0000/  > tmpmv tmp $bgit add $bdoneこのスクリプトは、git diff --cached --name-status で更新のあったファイルを調べて、更新のあったファイルの YAML フロントマターの中で、update: で始まる行に対して、現在時刻を追加する。"},
{file:"/2015/11/19/special-lecture/",title:"「環境の科学」特別授業",mtime:1447911277,ctime:1447911277,body:"「環境の科学」特別授業 環境の科学の授業では、時々外部講師を招いて環境に関する話題の講演をしていただいています。これは、東洋大学経営学部産学共同推進特別教育講座として、社会で活躍するエキスパートを講師として招き、日頃の授業では聞けない社会経験談などを聞こうという企画です。このページでは、これまでの外部講師による授業についてまとめます。私の専門である土壌に関わる話が多くなっていますが、せっかくの機会なので、環境に関する話題についていろいろな分野の方の話を聞こうとしています。なお、開催場所はすべて東洋大学白山キャンパスです。|日時 |講師所属 |講師氏名 |講演タイトル ||-----+---------+----------+---------------||2015年11月14日 |株式会社ダイヤコンサルタント |前村庸之氏 |放射性廃棄物の処分に関する研究と調査 ||2014年11月15日 |EAインターナショナル |亀元宏宣氏 |􏰀ばく露しないで！身近にある危険なアスベスト||2012年11月6日 |EAインターナショナル |亀元宏宣氏 |土壌・地下水汚染の調査と対策ー 環境コンサルタントの役割 ー||2011年11月14日 | 一般財団法人日本気象協会 |叶木律子氏 |天気予報を活用した環境問題への取り組み||2009年11月24日 |いであ株式会社 |島田克也氏 |資源リサイクルと地球温暖化対策を目指して－製鋼スラグを利用した藻場造成によるCO2固定の取組み－|"},
{file:"/2015/11/20/powerpoint-link/",title:"PowerPoint 参考サイト",mtime:1447952658,ctime:1447952658,body:"PowerPoint 参考サイト Microsoft PowerPoint の使い方について解説しているサイトへのリンクです。Windows 版PowerPoint 2013の使い方まとめ (できるネット)Office 2013 トレーニングビデオ (Microsoft)パワーポイントの使い方 2010入門基本PowerPoint 動画マニュアルMac 版PowerPoint for Mac 2011 の学習ロードマップ関連記事Word 参考サイトExcel 参考サイトオフィスソフトの比較"},
{file:"/2015/11/22/strasbourg/",title:"ストラスブールの写真",mtime:1448157376,ctime:1448157376,body:"ストラスブールの写真 2013年度に、1年間フランスのストラスブールに滞在しました。その前後にも、何度かストラスブールを訪問しています。ストラスブールで撮影した写真は1万枚を越えますが、その中から選んだ写真をこちらにまとめました。ストラスブールの写真アルバムその中で、いくつかの写真を以下に貼ります。写真をクリックすると、拡大写真と撮影時間、撮影場所の地図が表示されます。写真：クリスマースマーケット写真：グーテンベルク広場のカルーセルとグーテンベルク像写真：プティットフランス写真：大聖堂のイルミネーション（動画）写真：大聖堂の上から眺めるストラスブールの景色写真：欧州議会会議場写真：Auchan というスーパの近くで撮影した虹と、Auchan の裏にあるバガゼー池、その近くでストラスブール号に載るくじゃく写真：ストラスブール大学の Geology 棟と1年間研究をした机写真：アルザスワイン写真：タルト・フランベとシュークルートとベッコフ写真：広場でペタンクをする人達写真：現代美術館にある像"},
{file:"/2015/11/23/mac-terminal-japanese/",title:"Mac のターミナルで日本語入力",mtime:1448215535,ctime:1448215535,body:"Mac のターミナルで日本語入力 Mac OS X のターミナルで日本語入力をするための設定。だいたいはデフォルトでうまくいくようだけど、うまくいかない時の確認用。ターミナル＞環境設定＞設定＞詳細＞Control + V で非ASCII入力をエスケープ　のチェックをはずす。ターミナル＞環境設定＞設定＞詳細＞テキストエンコーディング　を Unicode (UTF-8) にする。環境変数の設定 LANG=ja_JP.UTF-8~/.inputrc に、以下の設定をするset input-meta on set output-meta on set convert-meta off参考サイトコマンドラインでの文字化け解決?: '\M-c'とは... (rcmdnk's blog, 2013/5/29)メタキー/ESCについて: iTermでそれらのキーを送る設定も  (rcmdnk's blog, 2013/5/30)MacBook Air ターミナルからtelnetした先で日本語入力したら文字化けしちゃう問題が解決したのでメモっとく (Solr, Python, MacBook Air in Shinagawa Seaside RSSフィード, 2008/3/4)Macでロケール環境変数を設定しようとした話 (綴点, 2015/1/13)"},
{file:"/2015/11/26/el-capitan-homebrew/",title:"El Capitan とHomebrew",mtime:1448499429,ctime:1448499429,body:"El Capitan とHomebrew El Capitan & Homebrew には、OS X 10.11/El Capitan 以降でHomebrew をインストールするために、 /usr/local ディレクトリを作成して所有者を一般ユーザーとする方法について、このように解説されている。OS X 10.11/El Capitan では、System Integrity Protection (SIP, rootless) というセキュリティの機能により、/usr, /System と /bin ディレクトリの下は、root であっても書き込みができなくなった。ただし、/usr/local の下は書き込みができる。ところが、/usr/local ディレクトリがない場合、あるいは消してしまった場合には、/usr ディレクトリの下が書き込みできないため、/usr/local ディレクトリを簡単に作成できない。その時には、このようにする。/usr/local がすでに存在する場合sudo chown -R $(whoami):admin /usr/local/usr/local が存在しない場合まずは、通常の方法で /usr/local の作成を試みる。sudo mkdir /usr/local && sudo chflags norestricted /usr/local && sudo chown -R $(whoami):admin /usr/localSIP のためにこの方法で /usr/local の作成ができなかったときには、このようにする。Command + R キーを押しながら再起動して、復元システムを起動する。ターミナルを起動して、このコマンドを実行する。`csrutil disable`通常の方法で再起動する。ターミナルを起動して、このコマンドを実行する。sudo mkdir /usr/local && sudo chflags norestricted /usr/local && sudo chown -R $(whoami):admin /usr/localCommand + R キーを押しながら再起動して、復元システムを起動する。ターミナルを起動して、このコマンドを実行する。csrutil enable通常の方法で再起動する。これで、/usr/local に一般ユーザー権限で書き込み可能となり、Homebrew のインストールが可能となる。"},
{file:"/2015/11/30/cop21/",title:"COP21 とパリ協定に関する情報",mtime:1449958034,ctime:1448837052,body:"COP21 とパリ協定に関する情報 パリ協定 (Paris Agreement) が採択された気候変動枠組条約第21回締約国会議 (COP21)、京都議定書第11回締約国会議 (CMP11) に関する情報のリンク。開催日: 2015年11月30日〜12月12日開催場所: パリ (Paris Le Bourget Parc d'Expositions)日本語第21回締約国会議（COP21） (JCCCA 全国地球温暖化防止活動推進センター)ＣＯＰ２１きょう開幕 先進国と途上国の溝埋まるか (NHK, 2015/11/30)ＣＯＰ２１パリで開幕、温暖化対策で合意目指す (ロイター, 2015/11/30)COP21とは？ 待ったなしの気候変動、世界の指導者はパリで何を話し合うのか (The Huffington Post, 2015/12/1)ＣＯＰ２１ 温暖化対策の責任差異化で対立 (NHK, 2015/12/4)ＣＯＰ２１ 途上国支援上積み合意　２０年以降、１０００億ドルから (毎日新聞, 2015/12/8)ＣＯＰ21、パリ協定採択　196カ国・地域が参加  18年ぶり　温暖化1.5度以内へ努力 (日経新聞, 2015/12/13)ＣＯＰ２１、「パリ協定」を採択 (読売新聞, 2015/12/13)ＣＯＰ２１　パリ協定合意へ　削減、実効性に不安ＣＯＰ２１ 「パリ協定」を採択 (NHK, 2015/12/13)COP21、歴史的な「パリ協定」 温暖化防止の取り組みは「ようやく半分程度」 (ハフィントンポスト, 2015/12/13)グーグルニュース英語United Nations - COP21 / Press ReleaseCOP21Paris Agreement (PDF) (United Nations, 2015/12/12)Paris Agreement (Wikipedia)What to know about the COP21 climate change summit in Paris (The Globe and Mail, 2015/11/29)COP21 negotiators unveil new 50-page draft text (POLITICO, 2015/12/3)COP21: New draft text released, as China and India accuse rich nations of dodging funding responsibilities (Business Green, 2015/12/3)COP21 climate change summit reaches deal in Paris (BBC, 2015/12/13)COP21: Global Climate Agreement Reached At United Nations Talks In Paris (2015/12/13)What to Know About the Historic ‘Paris Agreement’ on Climate Change (Time, 2015/12/13)Obama: Climate agreement 'best chance we have' to save the planet (CNN, 2015/12/13)COP21: UN chief hails new climate change agreement as 'monumental triumph' (UN News Centre, 2015/12/13)Historic Paris Agreement on Climate Change - 195 Nations Set Path to Keep Temperature Rise Well Below 2 Degrees Celsius (PDF) (United Nations, 2015/12/12)Google Newsフランス語COP21COP21 / twitterCOP21 / FacebookLe Monde.fr - COP21Lancement de la COP21: une unité de façade et déjà des fractures (RFI, 2015/12/1)COP21 : les trois faits marquants de ce lundi 7 décembre (Le parisien, 2015/12/7)COP21 : ce que contient le premier accord mondial sur le climat de l'histoire (Le parisien, 2015/12/13)COP 21: un conditionnel, un marteau et beaucoup d'émotion (Libération. 2015/12/12)Google Actualités"},
{file:"/2015/12/01/mac-tex/",title:"Mac で TeX / LaTeX",mtime:1449189637,ctime:1448919727,body:"Mac で TeX / LaTeX Mac OS X で TeX / LaTeX を使えるようにするための手順を記す。MacTeX はあえて使わずに、TeX Live を直接入れる。独自のディレクトリ構成にならないので便利。詳しくは参考サイト参照。インストールヒラギノフォントの埋め込み設定確認メンテナンス参考サイト インストールEl Capitan で /usr/local ディレクトリが存在しない場合には、あらかじめ作成しておく必要がある。 TeX Live から install-tl-unx.tar.gz をダウンロード、展開して install-tl-yyyymmdd ディレクトリ内で sudo ./install-tl を実行。パスを通すために、~/.bash_profile にこの行を追記。インストールする Tex Live の年次によって、2015 のところは変わるはず。export PATH=$PATH:/usr/local/texlive/2015/bin/x86_64-darwintlmgr の設定sudo tlmgr option repository http://mirror.ctan.org/systems/texlive/tlnetpdffonts を使えるようにするために（要 Homebrew)brew install poppler ヒラギノフォントの埋め込み設定Mac OS Xのヒラギノフォントは商用利用可能です。(1) OS X 10.11 / El Capitan の場合にはcd /usr/local/texlive/2015/texmf-dist/scripts/cjk-gs-integratesudo perl cjk-gs-integrate.pl --link-texmf --forcesudo mktexlsrsudo kanji-config-updmap-sys hiragino-elcapitan-prontlmgr によって、最新のパッケージに更新した状態で実行する。最初の行の 2015 については、インストールされている Tex Live の年次にあわせて変える。JIS X 0213に対応したヒラギノの N シリーズを埋め込んでいる。(2) OS X 10.10 / Yosemite 以前の場合にはsudo mkdir -p /usr/local/texlive/texmf-local/fonts/opentype/public/hiragino/cd /usr/local/texlive/texmf-local/fonts/opentype/public/hiragino/sudo ln -s  /Library/Fonts/ヒラギノ明朝 Pro W3.otf  ./HiraMinPro-W3.otfsudo ln -s  /Library/Fonts/ヒラギノ明朝 Pro W6.otf  ./HiraMinPro-W6.otfsudo ln -s  /Library/Fonts/ヒラギノ丸ゴ Pro W4.otf  ./HiraMaruPro-W4.otfsudo ln -s  /Library/Fonts/ヒラギノ角ゴ Pro W3.otf  ./HiraKakuPro-W3.otfsudo ln -s  /Library/Fonts/ヒラギノ角ゴ Pro W6.otf  ./HiraKakuPro-W6.otfsudo ln -s  /Library/Fonts/ヒラギノ角ゴ Std W8.otf  ./HiraKakuStd-W8.otfsudo mktexlsrsudo kanji-config-updmap-sys hiraginoターミナルで日本語入力ができない時の設定 確認サンプル TeX ファイルのコンパイル、生成されたPDFファイルの確認とフォントのチェック。curl -sO https://gist.githubusercontent.com/sekika/34cad1547e92a62a4a1b/raw/sample.texplatex sample.texdvipdfmx sample.dviopen sample.pdf &pdffonts sample.pdfこのように emb の欄がすべて yes になっていれば、フォント埋め込みOK。確認後、rm sample.*  でファイルを消せる。 メンテナンスパッケージの更新sudo tlmgr update --self --allTeX Live のバージョン（年次）のメジャーアップグレードについては、TeX Live のページではインストールを最初からやり直すことを勧める、としている。しかし、そもそもはtlmgr のリポジトリを CTAN mirror に設定していれば、勝手にメジャーアップグレードされるという話もあり、インストールした時の年次のままで tlmgr でパッケージの更新を続けていれば、わざわざインストールをやり直す必要はなさそう。ちなみに、私の場合は次のような update というスクリプトを書いて、TeX Live, Homebrew, pip のアップデートをまとめてしている。ここで、pip-review の実行には pip install pip-review が必要。!/bin/shsudo tlmgr update --self --allbrew updatebrew upgradepip-review --auto 参考サイトTeX Live を使おう──Linux ユーザと Mac OS X ユーザのために── (Tamotsu Thomas UEDA, 2015)TeX Wiki (奥村晴彦) - TeX Live/MacTeX界の El Capitan 迎撃戦記 (TeX Alchemist Online, 2015/10/8)"},
{file:"/2015/12/05/upgrade-el-capitan/",title:"El Capitan へのアップグレード",mtime:1449272272,ctime:1449272272,body:"El Capitan へのアップグレード Mac OS X を Yosemite から El Capitan へアップグレードインストールした時の手順を記録する。App Store のアップデートから、El Capitan へのアップグレードを開始する。ダウンロード、再起動してインストール。待つ。途中、Command-Lでインストールログを確認できる。App Store で、Xcode 最新版のインストールとソフトウェアのアップデート。Xcode のライセンスに合意。sudo xcodebuild -license/usr/local ディレクトリの所有者を一般ユーザーに変更。sudo chown -R $(whoami):admin /usr/local諸々のソフトをアップデートxcode-select --installsudo chown -R $(whoami):admin /Library/Rubybrew doctor（brew doctor になにか言われたら直す）brew updatebrew upgradebrew install rubyGemfile がある場合には、そのディレクトリに入ってからgem install bundlebundle installTeX のヒラギノフォント埋め込み設定El Capitan を使いながら気がついたこと拡張子の関連付けは再設定する必要あり。joinPDF が動かなくなった。公開も止まっているようだ。poppler の pdfunite を使う。"},
{file:"/2015/12/06/uninstall-flash-player/",title:"Flash Player のアンインストール",mtime:1449355018,ctime:1449355018,body:"Flash Player のアンインストール アドビ自らFlashに白旗宣言…。HTML5への移行を推奨という記事が出ている。Adobe のブログ記事には  while continuing to support the creation of Flash content  とあり、サポートは続けるとしているものの、Flash はそろそろ「過去の技術」となりつつある。Flash Player をインストールしておく利益（Flash サイトを閲覧できる）とリスク（Flash Player の脆弱性を利用したウィルス・マルウェアに感染する）を比較した時に、リスクが上回ると判断して、Flash Player はアンインストールすることとした。PCでニコニコ動画の閲覧ができなくなるが、どうしても閲覧したい動画があるときには iPad のアプリを使うことにする。Ｆｌａｓｈ脆弱性、対策しにくい「ゼロデイ攻撃」とは (読売新聞, 2015/10/16)Adobe Flashの新たなゼロデイ脆弱性を確認、不正広告に利用 (トレンドマイクロ, 2015/2/2)閲覧しただけで感染する不正ネット広告が急増、トレンドマイクロが注意喚起 (PC Online, 2015/12/4)Flash Player アンインストールの方法以下のサイトにしたがって、Flash Player をアンインストールすることができる。Flash Player をアンインストールする方法ただし、これだけでは Google Chrome の Adobe Flash Player プラグインは削除されない。Chrome のプラグインを無効にするためには、Chrome でプラグインを追加、削除、管理するに書かれている通り、このようにする。パソコンで Chrome を開きます。上部のアドレスバーに「chrome://plugins/」と入力し、Enter キーを押します。有効または無効にするプラグインの横にある [有効にする] または [無効にする] をクリックします。"},
{file:"/2015/12/08/joho-d-link/",title:"「情報処理実習D」参考サイト",mtime:1449524057,ctime:1449524057,body:"「情報処理実習D」参考サイト 「情報処理実習D」の授業で参考にするサイトへのリンクです。講義全般情報処理実習D: 講義情報受講者専用ページ (東洋大学外からはアクセス不可)ToyoNet 情報関連ポータルJava 言語の基礎Java SE Downloads初心者のためのJava講座JDKのダウンロードとインストールWikipedia - ボディマス指数アルゴリズムフローチャートの書き方  (三日市康博, 丸山博)Wikipedia - ソートQuick-sort with Hungarian (Küküllőmenti legényes) folk dance (YouTube)ハノイの塔 (JavaScript)ハノイの塔 (Flash)高精度計算サイト"},
{file:"/2015/12/15/search-with-javascript/",title:"JavaScript による記事の全文検索",mtime:1450160543,ctime:1450160543,body:"JavaScript による記事の全文検索 malaさんのJavaScript による全文検索を「検索」メニューに入れてみた。速い！おおまかな手順は検索ページのスクリプトを検索ページに入れる。search.md, _layouts/search.html, _includes/head-search.htm (css と js ファイルの指定), _includes/search.html, css/search.css といった感じで分割しておく。index.js を作成する。roma.js を入れる。ということになる。index.js の作成には、python スクリプトindexを書いた。最終更新日の表示によってdate: 2015-11-12 03:01:50 +0000update: 2015-11-17 06:38:29 +0000のような形で作成日と更新日が記録されている（されていない場合もある）という前提となっている。下書きの公開スクリプトの中で index を実行させている。"}];
