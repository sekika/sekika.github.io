var start = new Date().getTime();
var data = [{file:"/2020/01/02/popular/",title:"よく読まれている記事 (2019年)",mtime:1577935504,ctime:1577935504,body:"よく読まれている記事 (2019年) 当サイトの記事で、どの記事がよく読まれているのかを調べてみました。Google Analytics によるアクセス統計で、2019年のページビュー数のトップ20を並べます。ターミナルからファイルを開くExcel の計算における空白セルの処理Google 認証システムの仕組みWord の校閲者名を統一する方法Excel でデータの間引きEPSファイルの作成方法GitHub リポジトリに大量のファイルを一括登録する方法Mac で zip 圧縮・展開するときの文字化け対処法LaTeX の数式を Word に貼り付ける方法Mac のターミナルで日本語入力Uploading many files to GitHub repositoryVirtualBox への Windows 10 のアップグレードインストール複数の Google カレンダーを iPhone に同期Excel と回帰分析KaTeX による数式の表示積と商の微分公式指数と対数関数の微分ファイルの拡張子について株価時系列データからの線形回帰トレンド作成macOS 起動オプション2019年の1年間で、総ページビュー数 75106、そのうちでトップ3の割合が60%でした。以下は過去のアクセス集計記事です。2017年4月2017年9月"},
{file:"/2015/10/20/word-author/",title:"Word の校閲者名を統一する方法",mtime:1445319229,ctime:1445319229,body:"Word の校閲者名を統一する方法 論文の閲読結果を修正するときに、修正箇所を Word の編集履歴で表示することがある。そのときに、２台以上のPCで作業をすると、Word の校閲者名が統一されていないと（片方は日本語名で片方は英語名だったり）、別人として表示されるので、校閲者名はそろえておく方が良い。けれど、それを忘れてしまい、作成者名を一括で変更しようとして調べたところ、どうもこれまでに編集した履歴を別の校閲者名に変更することは、できないようだ。ただし、すべての校閲者名を「作成者」という校閲者名に一括して変更することはできるとのこと。これは、チームで編集したファイルを、一括して個人名を取り除くときにも使えるだろう。方法としては、Word 2010 for Windows だと「ドキュメント検査」「ドキュメントのプロパティと個人情報」の「すべて削除」にあるらしい。Word2010： 文書内の校閲者名（変更履歴）を統一することは可能？Office 2010で社外には出したくないプロパティ情報などを削除するWord for Mac 2016では、「プライバシー」オプションの「保存するときに個人情報をファイルから削除する」にチェック。Office 2016 for Mac: 保存するときに個人情報をファイルから削除するには手元の Word for Mac 2011 では、「Word」「環境設定」「セキュリティ」の下に「プライバシー オプション」「保存するときに個人情報をファイルから削除する」があった。"},
{file:"/2016/04/07/iPhoneOCR/",title:"iPhone で文字認識",mtime:1459997324,ctime:1459997324,body:"iPhone で文字認識 iPhone のカメラで撮影した画像をそのまま文字認識してテキスト化するアプリについて。私は、日本語は「もじかめ」、英語、フランス語等では「Pixter」を使っている。日本語株式会社メディアドライブのスマートフォン向け文字認識アプリ「もじかめ」は、2011年にリリースされ、2016年に無料アプリとしてリニューアル公開された。実際に使ってみたところ、日本語の文字認識精度は英語圏で開発されたアプリよりもかなり良い。Internet Watch の記事　(2016/4/7)メディアドライブのプレスリリース (2016/3/29)App Store: iOS 版ダウンロードGoogle Play: Android 版ダウンロード文字認識テスト：近くにあったマスクの使用方法を読み込み。この例では認識ミスなし。使用方法●上下表裏を確認してノーズフィッターを鼻の形に合わせます。(耳ひもが取り付けてある面が顔側です)●顔にフィットさせながら耳ひもを掛けます。●顔の大きさに合わせてプリーツを上下に広げます。英語等のアルファベットを使う言語The Best iPhone OCR Apps Tested では、3つの iPhone アプリがレビューされている。その中で、2つ目の PDFpen Scan+ は、他の2つと比べて文字認識精度が良くないとレビューされているので、残りの2つを紹介する。以下には、App Store 日本語版へのリンクを示す。価格はこの記事を投稿した時点のもの。CamScanner: 結果を共有するためには App 内課金で高級アカウント（月間600円、年間6000円）を購入する必要あり。日本語もそれなりの精度で認識できるが、Xcode Ghost 感染騒ぎがあった。現在は、対策されている。INTSIG Information 開発。Pixter: 480円。日本語の文字認識精度は悪いので日本語のレビューは良くないが、英語、フランス語の文字認識精度は良い。他にもいろいろな言語に対応し、アルファベット系言語の読み込みには便利。「ソース言語」と「ターゲット言語」を設定して使う。Quanticapps 開発。文字認識テストの例として、Céréalというお菓子に表示されていたフランス語の原材料名の Pixter による読み込み結果を記す。正確。Biscuit avec soja et orange, avec vitamines ajoutés. INGRÉDIENTS: Farine de blé, sucre de canne, huile de colza, flocons de scia 7%, germe de blé 5,3%, flocons d'orange 2,5% (orange, sucre, amidon de maïs), émulsifiant: lécithine de colza, minéraux (sels de magnésium de l'acide orthophosphorique et carbonate de calcium), poudres à lever: carbonates de sodium, diphosphates et carbonates d'ammonium, fibre d'avoine, sel marin, arôme naturel d'orange, protéines de lait, amidon de blé, vitamines (E., 83, B5, B6, B1, acide folique), lactose. Peut contenir des traces de fruits à coque (amandes, noisettes, noix et noix de pécan), oeuf et lupin.その他の言語日本語でもなく、アルファベットを使わない言語については、テストをしていないのでよく分からない。その言語専用のアプリがあれば、それを使うのがベストであろう。"},
{file:"/2022/08/16/discord-bot/",title:"Discord 簡易ボット",mtime:1660592986,ctime:1660592986,body:"Discord 簡易ボット Discord のボットはサーバーに常駐させて使うものがほとんどである。常駐させずに、自分宛に特定のメッセージを送る、あるいは自分が管理するサーバー内のチャンネルに投稿する、といった動作をして、終わったらログアウトする簡易ボットを作成した。定期的に crontab で実行するプログラム内で、実行結果を送信するような場合に便利である。準備通常のボットと同様に、以下の準備が必要となる。ボットアカウントを作成し、トークンを取得する。トークンを他者と共有してはならない。サーバーのチャンネルに投稿する場合には、サーバーに招待する。python3 -m pip install -U discord.py によって discord.py を読み込む。次のモジュールを espresso.py という名前で保存する。{% gist aff133b238bdfb8ebc1e67ec89bf7f44 %}実行方法以下の Python コードで、ユーザー宛に「やっほー」というメッセージを送信し、チャンネルに「こんにちは！」という投稿をする。パラメータはあらかじめ以下のように設定する。path（str 型）はespresso.py が保存されているディレクトリである。同じディレクトリに入れる場合には最初の2行は不要である。user_id（int 型）には「やっほー」と送信するユーザーのID（ユーザー名とは無関係の整数）を入れる。ユーザー設定の「詳細設定」で「開発者モード」をオンにすると、ユーザーを右クリックすることで「IDをコピー」することができるようになる。channel_id（int 型）には「こんにちは！」と投稿するチャンネルのID（整数）を入れる。開発者モードにすると、チャンネルを右クリックしてIDをコピーできる。token（str 型）にはボットのトークンを入れる。プログラムを共有する場合にはトークンを共有しないように別ファイルで管理するなどの注意をする。```pythonimport syssys.path.append(path)import discordimport espressoclient = espresso.Client(intents=discord.Intents.default())client.send_dm(user_id, 'やっほー')client.send_channel(channel_id, 'こんにちは！')client.run(token)```補足client.send_dm と client.send_channel はそれぞれ何回実行しても良いが、client.run(token) で投稿をした後は同じプログラム内では投稿できなくなる。特定のユーザーID宛にメッセージを送る send_dm_me(message) というメソッドや、特定のトークンでボットを走らせる run_bot() というメソッドを Client クラスに作っておくことで、より手軽に呼び出すことができる。参考discord.py ドキュメントHow to create a non-interactive Discord bot (Honza Javorek, Feb 6, 2021)"},
{file:"/2017/04/01/Taipei/",title:"台北滞在メモ",mtime:1672829599,ctime:1491042710,body:"台北滞在メモ 台北滞在時のメモです。全般台北ナビ旅々台北.com天気予報公益財団法人日本台湾交流協会 台北事務所 / map / ナビ交通悠遊卡 (EasyCard) : Easy Wallet台北ナビマップ台湾路線図（ひまわりデザイン）MRT路線図 / 英語台北バス: 路線検索 / 路線図検索チェーン店頂好 wellcome: 店舗検索Jasons Market Place春水堂: 店舗一覧龍涎居: 店舗一覧 / 歩く台北地域西門 (Ximen)駅情報: 周辺地図台北ナビ・MRT西門駅遠東百貨 臺北寶慶店: map / 西門3番出口出てすぐ / 営業時間 / 1F 亞尼克菓子工房 (Yannick) 黒森林 / B1 JasonsCarrefour 家樂福 桂林店: mapWellcome台灣甘蔗頭健康鍋: map / ブログ三媽臭臭鍋: map / 伝票天天利美食坊: map / ナビ / メニュー / 日本語365台灣小吃: mapは場所がおかしい。天天利美食坊の隣。三媽臭臭鍋: map / 伝票西門金鋒魯肉飯: map / ブログ 2 3馬辣: map / ブログ楽田麺包屋 (衡陽店): map吉宏米粉湯: map桶好呷 現滷滷味: map / 欲しいものを取って鍋をつくってもらう西門町芒菓冰: map / ナビ台北牛乳大王 成都店: mapIkari Coffee 衡陽店: map樂法 Le Phare 西門店: map門卡迪餐廳: map足強足體養生館 / map / ナビ金帥商務旅店 King Shi Hotel: map / booking高絲旅館 - 西門町漢口館: map / bookingMRT は南港線（板南線、青）は混んでいるので松山線（緑）が使えればその方が良い台北車站 (Taipei Main Station)駅情報: 周辺地図台北ナビ・MRT台北駅新光三越台北站前店: map / フロアマップ老蔡水煎包: map1 / map2 / ナビ誠品生活 誠品站前店: map / K區地下街忠孝復興 (Zhongxiao Fuxing)駅情報: 周辺地図台北ナビ・MRT忠孝復興駅太平洋 SOGO 復興館: map / 2番出口/ B3のスーパーにPilsner Urquell あり太平洋 SOGO 忠孝館: map / 4番出口同心圓水晶紅豆餅 / 5番出口老蔡水煎包阿宗麵線Wellcome 忠孝店天仁茗茶中山 (Zhongshan)駅情報: 周辺地図台北ナビ・MRT中山駅新光三越百貨（台北南西店一館）: map / 2番出口 / B2 鼎泰豐、超市、天仁 / B1 春水堂 / 9F 免税カウンター 2000元以上天津街米苔目: map / 月曜〜金曜、9:00-19:00臺北松山機場 TSAMRT 内湖線から文山線へ直通。あわせて文湖線、茶色(BR)飲食サービス: 春水堂 (第1ターミナル2階)桃園國際機場 TPE桃園機場捷運: 路線図 / Wikipedia / 記事 / 台北車站まで160元 / 北門駅も近い・歩く動画その他国立故宮博物院: map / ナビ台北市立動物園: MRT文湖線「動物園」駅出口1 / 猫空ロープウェイ松山機場近く SunnyHills 微熱山丘: map中正紀念堂 金峰魯肉飯: map / ブログ徐匯中學 茂林羊肉爐: map / ブログ市政府 呉寶春麥方店 台北店: map / 食べログ通信中華電信プリペイドカード: 空港カウンター / テザリング可国際電話: +886 / 台湾から日本 002-81-(国内番号) / 日本から香港 010-886-(国内番号)両替レート比較: 現鈔手續費 = 両替手数料大眾銀行 : レート / map / ホテルの名刺を持参TWD / JPY レート変動台湾語台湾語注音符號"},
{file:"/2017/05/07/git-command/",title:"Git コマンドチートシート",mtime:1494095092,ctime:1494095092,body:"Git コマンドチートシート 個人的にたまに使うけれど忘れてしまいがちな Git コマンドをまとめておく。参考サイトまずは Git 全般に関する参考サイトからPro Git book 日本語Git ユーザマニュアルgit(1) Manual PageGit User ManualReferenceGit コマンド全般のチートシートGit Cheat Sheat (PDF)Visual Git Cheat Sheetコンフリクトの解消とりあえずのGitメモ コンフリクトした時git checkout で error: Your local changes to the following files would be overwritten by checkoutと言われる解決方法git stash save -ugit stash listgit pullgit stash pop<file> を直前のコミットの状態に戻すにはget checkout -- 手元の修正を破棄するにはgit reset --hard HEAD; git push -fコミットの整理rebase -i でコミットをまとめるGit のさまざまなツール - 歴史の書き換え直近の4個を表示する場合git rebase -i HEAD~4コミットをまとめるgit push -fコミットをまとめるときに、vi コマンドで2行目から10行目までの pick を s に一括置換するには、:2,10s/pick/s/コミット取り消しワーキングツリー、インデックス、HEADを使いこなす方法直前のコミットを取り消しgit reset --hard HEAD^コミット後の変更を全部取り消しgit reset --hard HEAD任意の場所に戻るgit log戻りたい場所のハッシュをコピーgit reset --hard ハッシュ値リモートに反映git push -f直前のコミット変更だけならgit commit --amend削除したファイルの復元gitで削除してしまったファイルの復元ファイルの完全削除Git リポジトリに上がっているファイルを履歴ごと消すには？リモートリポジトリリモートの表示git remote -vURL を変えるgit remote set-url origin <リポジトリのURL>もろもろgit clean -ngit grep初期設定git config --global user.name  Katsutoshi Seki git config --global user.email sekika@users.noreply.github.com他の記事Office Open XML の git ファイル管理GitHub リポジトリに大量のファイルを一括登録する方法"},
{file:"/2017/05/01/katex-equation/",title:"KaTeX による数式の表示",mtime:1583090573,ctime:1493601474,body:"KaTeX による数式の表示 Jekyll 上での数式の表示では、MathJax による数式表示の設定を記した。最近はKaTeXという数式組版ライブラリが表示が速くて良いという話を聞くので、ためしてみることとした。生の KaTeX では、数式表示のためにkatex.render( c = \pm\sqrt{a^2 + b^2} , element);のような記法が必要となり、少し面倒。そこで、はてなブログで KaTeX を使うを参考に、jQueryを使って（もともと Bootstrap の JavaScript プラグインのために jQuery を読み込んでいる）[[ と ]] で囲まれた部分は display モード（独立した行で中央揃え）、$で囲まれた部分は非displayモード（行内の数式）で表示をするように設定することとする（$$だとうまく動かないので変えた）。やるべきことは、ヘッダ内に{% highlight html %}$(document).ready(function(){renderMathInElement(document.body,{delimiters: [{left:  [[ , right:  ]] , display: true},{left:  $ , right:  $ , display: false}]})});{% endhighlight %}を記述すれば良い。KaTeX 用のヘッダーを記述して、それを読み込ませるためのレイアウト katexを用意した。数式を使う記事には layout: katex と指定することで、必要な時にだけ KaTeX を読み込ませることができる。また、KaTeX のバージョンは katex-version というパラメータとして _config.yml で指定することとした。これで、GitHub Pages 上で KaTeX で数式を表示することができるようになったため、数式を多用する記事を書いても高速に表示されるはずである。LaTeX 書式の数式が KaTeX でどのように表示されるかをリアルタイムで確認するためには KaTeX プレビュアー を使うと便利である。リチャーズ式を表示してみる。[[ \frac{\partial \theta}{\partial t}= \frac{\partial}{\partial z}\left[ K(\theta) \left (\frac{\partial \psi}{\partial z} + 1 \right) \right] ]]この数式のソースコードは{% highlight tex %}[[ \frac{\partial \theta}{\partial t}= \frac{\partial}{\partial z}\left[ K(\theta) \left (\frac{\partial \psi}{\partial z} + 1 \right) \right] ]]{% endhighlight %}となっている。インラインでの表示は $ と $ で囲む。たとえば、半径 $ r $ の円の面積は $ \pi r^2 $ であり、球の体積は $ \frac{4}{3}\pi r^3 $ である。と表示するためには、半径 $ r $ の円の面積は $ \pi r^2 $ であり、球の体積は $ \frac{4}{3}\pi r^3 $ である。と書く。ついでにこのページの数式を MathJax から KaTeX に変えたところ、表示が若干軽くなった。（追記）KaTeX のテストがてら積と商の微分公式という記事を書いてみた。たしかに高速に表示される。[[ \begin{array}{rl} \biggl\{ \frac{1}{g(x)} \biggr\}^{\prime} &=& \lim_{h \to 0}\frac{\frac{1}{g(x+h)}-\frac{1}{g(x)}}{h} \cr\cr &=& \lim_{h \to 0}\frac{g(x)-g(x+h)}{g(x) g(x+h) h} \cr\cr  &=& -\frac{1}{ \bigl\{ g(x) \bigr\}^2} \lim_{h \to 0}\frac{g(x+h)-g(x)}{h} \cr\cr &=& -\frac{g^{\prime}(x)}{ \bigl\{g(x) \bigr\}^2} \end{array} ]]この数式のソースコードは{% highlight tex %}[[ \begin{array}{rl} \biggl\{ \frac{1}{g(x)} \biggr\}^{\prime} &=& \lim_{h \to 0}\frac{\frac{1}{g(x+h)}-\frac{1}{g(x)}}{h} \cr\cr &=& \lim_{h \to 0}\frac{g(x)-g(x+h)}{g(x) g(x+h) h} \cr\cr  &=& -\frac{1}{ \bigl\{ g(x) \bigr\}^2} \lim_{h \to 0}\frac{g(x+h)-g(x)}{h} \cr\cr &=& -\frac{g^{\prime}(x)}{ \bigl\{g(x) \bigr\}^2} \end{array} ]]{% endhighlight %}となっている。バックスラッシュは2個重ねる。重ねないでもうまくいくときもあれば、重ねないとだめなときもある。array 環境の上下間隔が標準ではつまりすぎるので、\\cr を2個重ねる。"},
{file:"/2016/03/26/GoogleAuthenticator/",title:"Google 認証システムの仕組み",mtime:1672442493,ctime:1458951965,body:"Google 認証システムの仕組み Google アカウントの2段階認証プロセスでは、Google 認証システムをモバイル端末にインストールして、QRコード（バーコード）を読み込ませることで、30秒ごとに変化する6桁の確認コードを生成することができる。通常のパスワード認証に加え、確認コードによる認証をすることで、セキュリティを高めている。Amazon, Microsoft, Facebook, Dropbox, GitHub 等多くのサービスで同じシステムが採用されている。この仕組みについて記す。概要Google 認証システムで採用されているRFC 6238の時間ベースのワンタイムパスワード (TOTP)は、サーバーとクライアントで共有する秘密鍵と現在時刻から、確認コードを計算するアルゴリズムである。Google  のサーバーがランダムに生成した80ビットの秘密鍵（シークレットキー）をQR コードあるいは16文字のBase32文字列（A-Z, 2-7）としてウェブブラウザに表示し、クライアント（モバイル端末にインストールしたGoogle 認証システムのアプリ）で読み取ることで、サーバーとクライアントに同じ秘密鍵が保存される。現在時刻は30秒ごとに値が変わるカウンターに変換されてから確認コードの6桁の数字が計算されてアプリに表示されるため、30秒間は同じ確認コードが表示される仕組みとなっている。なお、確認コードの計算アルゴリズムについては最後に記す。秘密鍵と確認コードある時刻においてカウンターがサーバーとクライアントで等しければ、サーバーとクライアントで秘密鍵を共有しているため同じ確認コードが計算されるはずであるから、サーバーとクライアントで確認コードの計算結果が一致するかどうかで認証ができるとするのが TOTP アルゴリズムである。ここで、サーバーとクライアントではそれぞれNTPのような仕組みによってある程度正確に現在時刻を得ることができるという前提であり、RFC 6238では通信のタイムラグと時刻のずれを調整するための仕組みを実装することが推奨されている。秘密鍵をモバイルアプリで読み込ませた端末を持っていなければ認証が成功しないことから、持っているものでアカウントを保護する仕組みであると説明される。端末を持っていなければ、漏洩した確認コードを知り得たとしても、30秒後にはその確認コードは無効となって認証が成功しなくなるためである。しかし、たとえば中間者攻撃によって素早く漏洩した確認コードが使われれば認証に成功してしまう。30秒間は何度でも同じ確認コードを使えるという意味ではワンタイムではない。サーバー側で最後に認証に成功した時のカウンターを記憶しておき、一致した時にはそのカウンターでは2回目は認証に成功させないようにすれば、真の意味でワンタイムになると考えられるが、RFC 6238ではそのような仕組みは提案されていないようである。秘密鍵が漏洩すれば任意の時刻における確認コードを生成できるため、秘密鍵は適切なアクセス権限を設定して保存する必要があり、できれば耐タンパー性のあるデバイスに保存することが望ましいとされている。TOTP に対応するサービスGoogle 認証システムを使ってTOTPの確認コードを生成できるサービスには、例えば次のようなサービスがある。このように多くのサービスで同じモバイルアプリを使用できることが、このシステムの利便性であろう。GoogleAmazonMicrosoftTwitterInstagramFacebookDropboxEvernoteGitHubWordPressSlackDiscordYahoo! Japan - 秘密鍵の読み込み方法に注意TOTP を計算するモバイルアプリTOTPをサポートするモバイルアプリには、例えば次のようなものがある。Gooogle 認証システム (Android, iPhone, BlackBerry) - ソースコードMicrosoft Authenticator (Android, iPhone)IIJ Smartkey (Android, iPhone)Duo Mobile (Android, iPhone)Token2 (Android, iPhone, Windows Phone)複数端末への秘密鍵の登録サーバーがQRコードを生成した時に、複数の端末でアプリから同じQRコードを読み込ませれば、同じ秘密鍵が登録されるため、どの端末からも同じ確認コードを生成できる。端末の紛失や故障、ソフトウェアの不具合によってモバイルアプリが起動できなくなった時のことを考えると、可能であれば2つ以上の端末に同じ秘密鍵を登録するのが望ましい。SMSや音声通話による2段階認証を設定する手段も有効である（端末を紛失しても電話番号の契約が継続していれば新しい端末で復活可能なため）。Google 認証システムのアプリでは、アプリに登録されている秘密鍵をQRコードによってエクスポートできる。Microsoft Authenticator では、秘密鍵を一括してクラウドにバックアップすることができる。IIJ SmartKey は、2016年の時点でアプリに登録されている秘密鍵をQRコードでエクスポートできるほぼ唯一のアプリとして重宝して使っていたが、2020年現在、著者が所有している iPad の中の1つで IIJ SmartKey が起動しなくなったため、これからは Google と Microsoft のアプリを使うこととした。確認コードの計算アルゴリズムRFC 6238 のTOTPアルゴリズムは、サーバーとクライアントで共有する秘密鍵と、現在時刻から計算されるカウンターから、一意にトークン TOTP すなわち確認コードを計算するアルゴリズムであり、RFC 4226 のHOTP（HMAC ベースのワンタイムパスワード）に基づいている。具体的には次のように計算する。Kを秘密鍵、TCを現在時刻（UNIX時間）、Xを時間ステップ（秒）、T0をカウント開始時刻（UNIX時間）、Nをトークンの長さとする。また、ハッシュアルゴリズムを決める。デフォルトでは X=30, T0=0, N=6, ハッシュアルゴリズムは SHA-1 であり、Google 認証システムではこのデフォルトを使って計算をする。なお、HOTPでは秘密鍵は128ビット以上が必要で160ビットを推奨としているが、Google 認証システムでは80ビットである。T = floor((TC - T0) / X) により、時刻T0からの経過時間に応じたカウンター T を64ビットの符号なし整数型で得る。ここで、floor は床関数であり、Tを整数型としておけば通常は自動的にfloor関数が適用される。H = HMAC-SHA-1(K, T) により20バイトのハッシュ H を計算する。すなわち、HMAC-SHA-1 アルゴリズム (RFC 2104) によって秘密鍵KとメッセージTからハッシュHを計算する。下記の Truncate 関数を使い、TOTP = Truncate(H) として10進数N桁のトークン TOTP を計算する。ここで Truncate 関数は RFC 4226 に定められている20バイト文字列から10進数N桁のトークンを得る次のような関数である。20バイト、すなわち160ビット文字列 String = String[0]...String[19] から31ビット文字列を得るDT関数 DT(String) を次のように定義する。String[19] の下位4ビットを符号なし整数に変換して Offset を得る(0 <= OffSet <= 15)。次に、P = String[OffSet]...String[OffSet+3] とする。Pは32ビットとなり、最上位ビットを除いた31ビットを DT(String) とする。DT(String) を符号なし整数に変換した数字を Snum として、D = Snum mod 10^N を計算する。DはN桁以内の正の整数となる。DがN桁よりも少ない時には先頭に0を埋めて10進数N桁のトークンとしたものが、Truncate(String) である。"},
{file:"/2015/12/05/upgrade-el-capitan/",title:"El Capitan へのアップグレード",mtime:1449272272,ctime:1449272272,body:"El Capitan へのアップグレード Mac OS X を Yosemite から El Capitan へアップグレードインストールした時の手順を記録する。App Store のアップデートから、El Capitan へのアップグレードを開始する。ダウンロード、再起動してインストール。待つ。途中、Command-Lでインストールログを確認できる。App Store で、Xcode 最新版のインストールとソフトウェアのアップデート。Xcode のライセンスに合意。sudo xcodebuild -license/usr/local ディレクトリの所有者を一般ユーザーに変更。sudo chown -R $(whoami):admin /usr/local諸々のソフトをアップデートxcode-select --installsudo chown -R $(whoami):admin /Library/Rubybrew doctor（brew doctor になにか言われたら直す）brew updatebrew upgradebrew install rubyGemfile がある場合には、そのディレクトリに入ってからgem install bundlebundle installTeX のヒラギノフォント埋め込み設定El Capitan を使いながら気がついたこと拡張子の関連付けは再設定する必要あり。joinPDF が動かなくなった。公開も止まっているようだ。poppler の pdfunite を使う。"},
{file:"/2015/12/01/mac-tex/",title:"Mac で TeX / LaTeX",mtime:1670463786,ctime:1448919727,body:"Mac で TeX / LaTeX macOS で TeX / LaTeX を使えるようにするための手順を記す。MacTeX はあえて使わずに、TeX Live を直接入れる。独自のディレクトリ構成にならないので便利。詳しくは参考サイト参照。インストールヒラギノフォントの埋め込み設定確認メンテナンス参考サイト インストール/usr/local ディレクトリが存在しない場合には、あらかじめ作成しておく必要がある。 TeX Live から install-tl-unx.tar.gz をダウンロード、展開して install-tl-yyyymmdd ディレクトリ内で sudo ./install-tl を実行。TeX Live 2022 をインストールするときには、次のコマンドを実行して /usr/local/texlive/current で現在使用中の TeX Live の年次を指定できるようにする（2022 のところは年次にあわせて変える）。年次をアップデートするときにも、同様のコマンドでリンクを更新する。cd /usr/local/texlive; sudo ln -s 2022 currentパスを通すために、~/.bash_profile にこの行を追記。export PATH=$PATH:/usr/local/texlive/current/bin/universal-darwintlmgr の設定sudo tlmgr option repository http://mirror.ctan.org/systems/texlive/tlnetHomebrew で gs と poppler をインストール。poppler は pdffonts を使えるようにするため。brew install gs poppler ヒラギノフォントの埋め込み設定フォントとして頒布しない限り、macOSに付属するすべてのフォントが改変を加えないなら商用利用可能である。ヒラギノフォントを埋め込むためには、ヒラギノフォントパッチをインストールする。確認サンプル TeX ファイルのコンパイル、生成されたPDFファイルの確認とフォントのチェック。curl -sO https://gist.githubusercontent.com/sekika/34cad1547e92a62a4a1b/raw/sample.texplatex sample.texdvipdfmx sample.dviopen sample.pdf &pdffonts sample.pdfこのように emb の欄がすべて yes になっていれば、フォント埋め込みOK。確認後、rm sample.*  でファイルを消せる。 メンテナンスパッケージの更新sudo tlmgr update --self --allTeX Live のバージョン（年次）のメジャーアップグレードについては、2015から2016へのアップグレードは、TeX Live のページによれば、インフラが変わったので最初からやり直す必要がある。インストールの2番目（install-tl-unx.tar.gz のダウンロード、展開と sudo ./install-tl）と3番目（current リンクの更新）を実行すれば良い。2016から2017には、何もしなくても自動的にアップデートされる。ディレクトリ名は2016のままであるが、2017のリポジトリから最新バージョンにアップデートされる。2017から2018へのアップグレードは、新規インストールをするか、Tex Live のページに書かれている通りに sh update-tlmgr-latest.sh -- --upgrade を実行する。そして、商用フォントの設定方法が変わったため、ヒラギノフォントの埋め込み設定をする。2018から2019へのアップグレードは、新規インストールをするか、Tex Live のページに書かれている通りにsh update-tlmgr-latest.sh -- --upgrade を実行する。ちなみに、私の場合は次のような update というスクリプトを書いて、TeX Live, Homebrew, pip のアップデートをまとめてしている。ここで、pip-review の実行には pip install pip-review が必要。!/bin/shsudo tlmgr update --self --allbrew updatebrew upgradepip-review --auto 参考サイトTeX Live を使おう──Linux ユーザと Mac OS X ユーザのために── (Tamotsu Thomas UEDA)TeX Wiki (日本語TeX開発コミュニティ) - TeX Live/Mac, TeXとフォントTeX Alchemist Online (Yusuke Terada) - MacTeX 2019 のインストール＆日本語環境構築法"},
{file:"/2023/03/06/EventCanvas/",title:"Show mouse and touch events in the HTML canvas element",mtime:1678060796,ctime:1678060796,body:"Show mouse and touch events in the HTML canvas element For showing the handling of mouse and touch events in the HTML canvas element, I created a JavaScript program that draws a line while displaying the name and position of the event that occurred.<canvas id= canvas  width= 400  height= 250 style= border:1px solid #000000; background: #ffffe8; max-width: 100%; height: auto; max-height: 100% >This browser does not support Canvas element of HTML5Disable swipe in the canvasClear(mousemove)(touchmove)mousedown, mouseup, click, touchstart, touchend, touchcancel, touchmoveExplanationI will briefly describe the main points because the details are written in the reference site at the end of this document. In the HTML of this page, a canvas is set up in the following location```htmlThis browser does not support Canvas element of HTML5```to load this JavaScript. In the following part of the JavaScript```javascriptvar c = document.getElementById('canvas');var ctx = c.getContext('2d');```the canvas and context are read by the global variables c and ctx. For example, the mousedown event is read as follows.```javascriptc.addEventListener('mousedown', function(e) {    showMessage('mousedown' + strPair(pos(e)));    down(pos(e));});```Here, pos(e) is a function that returns the coordinates on the canvas of the mouse from the event e as a list, and is calculated like this.```javascriptfunction pos(e) {var x, y;x = e.clientX - c.getBoundingClientRect().left;y = e.clientY - c.getBoundingClientRect().top;return [x, y];}```This means that the x-coordinate on the canvas can be obtained by subtracting the position c.getBoundingClientRect().left of the left edge of the canvas from the x-coordinate e.clientX of the mouse position. The same is true for the y-coordinate. strPair is a function that converts a list of coordinates into a string, and strPair(pos(e)) can obtain the mouse position of the event e as a string of the form (x, y).The same is true for the mouse events mouseup, click and mousemove.Touch events are handled differently because, unlike a mouse, multiple finger touches occur. For example touchstart handles like this.```javascriptc.addEventListener('touchstart', function(e) {    message = 'touchstart';    for (i = 0; i < e.changedTouches.length; i++) {        message += strPair(pos(e.changedTouches[i]));    }    showMessage(message);    if (e.changedTouches.length == 1) {        down(pos(e.changedTouches[0]));    }});```In this way, touch events are stored as a list in e.changedTouches, the length of which can be obtained by e.changedTouches.length. The coordinates of the first finger can be obtained by pos(e.changedTouches[0]) using the pos function described earlier. The same applies to touchcancel, touchend, and touchmove.For the process of drawing lines, the down function is called from the mousedown and touchdown events, the up function from the mouseup and touchup events, and the move function from the mousemove and touchmove events, so that the same process can be performed for mouse and touch. Each of these functions is called with the coordinates on the canvas as arguments. The global variable  dragging  is set to true for down and false for up, and lines are drawn only when  dragging  is true.The lines are drawn as follows.```javascriptfunction move(pos) {if (dragging) {    ctx.moveTo(lastPos[0], lastPos[1]);    ctx.lineTo(pos[0], pos[1]);    ctx.stroke();    lastPos = pos;}}```When a finger is moved by touch, it is difficult to draw because the screen moves with the swipe. Therefore, by checking the  Disable swiping in the canvas  checkbox, the default touch operation is disabled by e.preventDefault() when a touchmove event occurs in the Canvas (Normally, we always disable it, but here we did it this way to see the difference between disabling it and not disabling it.). It is in the following place.```javascript    if (document.formOption.noSwipe.checked) {        e.preventDefault();    }```In addition, drawing of lines by touch events occurs only when one finger is used.I tried drawing with a stylus and found it to be a good drawing experience. If we add functions to change the color and line thickness, dot, draw a straight line, and fill, it will be a practical simple drawing software. Since it seems that c.toDataURL() can be used to obtain image data, the software can also be used to store the created images in the browser's local storage. I may eventually create such software and release it to the public.When writing a JavaScript program that involves mouse and touch operations on the canvas, it would be efficient to copy this program first and then write the program while checking the events. Finally, you can delete the process of displaying the events before publishing the program.Example15 Puzzle (source)ReferenceUsing Touch Events with the HTML5 Canvas (Ben Centra, 2014/12/5)Touch events (MDN web docs)"},
{file:"/2017/05/02/derivative/",title:"積と商の微分公式",mtime:1493667676,ctime:1493667676,body:"積と商の微分公式 積と商の微分公式を証明する。微分の定義[[ f^{\prime}(x) = \lim_{h \to 0}\frac{f(x+h)-f(x)}{h}  ]]を使う。積の微分公式[[ \bigl{ f(x)g(x) \bigr}^{\prime} = f^{\prime}(x)g(x)+f(x)g^{\prime}(x) ]]この公式を証明する。この式の左辺は[[ \bigl\{ f(x)g(x) \bigr\}^{\prime} =  \lim_{h \to 0}\frac{f(x+h)g(x+h)-f(x)g(x)}{h} ]]一方、右辺は[[ \begin{array}{rl} f^{\prime}(x)g(x)+f(x)g^{\prime}(x) &=& \lim_{h \to 0}\frac{ \bigl\{ f(x+h)-f(x) \bigr\} g(x+h)}{h} + \lim_{h \to 0}\frac{f(x) \bigr\{ g(x+h)-g(x) \bigr\} }{h} \cr\cr &=& \lim_{h \to 0}\frac{f(x+h)g(x+h)-f(x)g(x+h)+f(x)g(x+h)-f(x)g(x)}{h} \cr\cr &=& \lim_{h \to 0}\frac{f(x+h)g(x+h)-f(x)g(x)}{h} \end{array} ]]すなわち、左辺と右辺が一致するため、積の微分公式が証明された。商の微分公式(1)[[ \biggl{ \frac{1}{g(x)} \biggr}^{\prime} = -\frac{g^{\prime}(x)}{ \bigl{ g(x) \bigr}^2} ]]この式を証明する。[[ \begin{array}{rl} \biggl\{ \frac{1}{g(x)} \biggr\}^{\prime} &=& \lim_{h \to 0}\frac{\frac{1}{g(x+h)}-\frac{1}{g(x)}}{h} \cr\cr &=& \lim_{h \to 0}\frac{g(x)-g(x+h)}{g(x) g(x+h) h} \cr\cr  &=& -\frac{1}{ \bigl\{ g(x) \bigr\}^2} \lim_{h \to 0}\frac{g(x+h)-g(x)}{h} \cr\cr &=& -\frac{g^{\prime}(x)}{ \bigl\{g(x) \bigr\}^2} \end{array} ]]以上で証明された。商の微分公式(2)[[ \biggl{ \frac{f(x)}{g(x)} \biggr}^{\prime} = \frac{f^{\prime}(x)g(x)-f(x)g^{\prime}(x)}{ \bigl{ g(x) \bigr}^2} ]]$ \frac{f(x)}{g(x)} = f(x) \cdot \frac{1}{g(x)} $より、積の微分公式を適用する。[[ \begin{array}{rl} \biggl\{\frac{f(x)}{g(x)} \biggr\}^{\prime} &=&  f^{\prime}(x) \biggl\{ \frac{1}{g(x)} \biggr\} + f(x)\biggl\{ \frac{1}{g(x)} \biggr\}^{\prime} \cr\cr &=& \frac{f^{\prime}(x)}{g(x)} + f(x)\biggl[ -\frac{g^{\prime}(x)}{ \bigl\{ g(x) \bigr\}^2} \biggr]  \cr\cr &=& \frac{f^{\prime}(x)g(x)-f(x)g^{\prime}(x)}{ \bigl\{ g(x) \bigr\}^2} \end{array} ]]以上で証明された。"},
{file:"/2017/09/30/popular/",title:"よく読まれている記事 (2017年9月)",mtime:1506758209,ctime:1506758209,body:"よく読まれている記事 (2017年9月) 当サイトの記事で、どの記事がよく読まれているのかを調べてみました。Google Analytics によるアクセス統計で、2017年9月のページビュー数のトップ10を並べます。4月にはランクインしていなかった記事を (new) で示しています。ターミナルからファイルを開くMac で zip 圧縮するときの文字化け対処法Excel でデータの間引きWord の校閲者名を統一する方法Google 認証システムの仕組みExcel の計算における空白セルの処理 (new)EPSファイルの作成方法オフィスソフトの比較Mac のターミナルで日本語入力LaTeX の数式を Word に貼り付ける方法 (new)2017年9月の1ヶ月間で、総ページビュー数 7992、そのうちでトップ3の割合が48%でした。"},
{file:"/2022/12/27/popular2022/",title:"よく読まれている記事 (2022年)",mtime:1672107939,ctime:1672107939,body:"よく読まれている記事 (2022年) 当サイトの記事で、どの記事がよく読まれているのかを調べてみました。Google アナリティクス によるアクセス統計で、2022年のページビュー数のトップ20を並べます。ターミナルからファイルを開く15パズルCanvas のマウスとタッチのイベントを表示するプログラムExcel の計算における空白セルの処理Google 認証システムの仕組みExcel でデータの間引きEPSファイルの作成方法ポアソン分布の正規分布による近似GitHub リポジトリに大量のファイルを一括登録する方法Word の校閲者名を統一する方法FFmpegによる動画のアスペクト比変換LaTeX の数式を Word に貼り付ける方法Mac で zip 圧縮・展開するときの文字化け対処法Mac のターミナルで日本語入力macOS 起動オプション (New)関数のグラフを描画するプログラムエコロジカル・フットプリント (New)ブラウザで Python が動くよ (New)「ファイナンス数学」参考サイト (New)How to open a file from a terminal emulator (New)2022年の1年間（12/21まで、それ以降はGoogle アナリティクス 4に移行）で、総ページビュー数 76413、そのうちでトップ3の割合が44%、トップ5の割合が58%でした。2021年のトップ20に入っていなかった記事には (New) が付されています。これまでのアクセス集計記事。"},
{file:"/2015/11/19/special-lecture/",title:"「環境の科学」特別授業",mtime:1672830967,ctime:1447911277,body:"「環境の科学」特別授業 環境の科学の授業では、時々外部講師を招いて環境に関する話題の講演をしていただいています。これは、東洋大学経営学部産学共同推進特別教育講座として、社会で活躍するエキスパートを講師として招き、日頃の授業では聞けない社会経験談などを聞こうという企画です。このページでは、これまでの外部講師による授業についてまとめます。私の専門である土壌に関わる話が多くなっていますが、せっかくの機会なので、環境に関する話題についていろいろな分野の方の話を聞こうとしています。なお、開催場所はすべて東洋大学の白山キャンパスです。|日時 |講師所属 |講師氏名 |講演タイトル ||-----+---------+----------+---------------||2017年11月30日 |竹中工務店 | 小島倫直氏 | 建設業における緑化への取り組み ||2016年12月17日 |株式会社office 3.11 |井出留美氏 |食品ロスと食のキャリア形成（受講者239名のアンケートが公開された記事）||2015年11月14日 |株式会社ダイヤコンサルタント |前村庸之氏 |放射性廃棄物の処分に関する研究と調査 ||2014年11月15日 |EAインターナショナル |亀元宏宣氏 |ばく露しないで！身近にある危険なアスベスト||2012年11月6日 |EAインターナショナル |亀元宏宣氏 |土壌・地下水汚染の調査と対策ー 環境コンサルタントの役割 ー||2011年11月14日 | 一般財団法人日本気象協会 |叶木律子氏 |天気予報を活用した環境問題への取り組み||2009年11月24日 |いであ株式会社 |島田克也氏 |資源リサイクルと地球温暖化対策を目指して－製鋼スラグを利用した藻場造成によるCO2固定の取組み－|"},
{file:"/2015/11/04/energy-policy/",title:"エネルギー政策と原子力発電",mtime:1541307376,ctime:1446608346,body:"エネルギー政策と原子力発電 エネルギー政策と原子力発電について、特に福島第一原子力発電事故の前後でどのように変わってきたかを中心に年表をまとめる。|---|年次 | できごと |説明|---|2002年 |「エネルギー政策基本法」制定 | 第十二条 　政府は、エネルギーの需給に関する施策の長期的、総合的かつ計画的な推進を図るため、エネルギーの需給に関する基本的な計画（以下「エネルギー基本計画」という。）を定めなければならない。|2003年 |第1次エネルギー基本計画閣議決定 |原子力発電については、安全確保を大前提として、今後とも基幹電源と位置付け推進する。核燃料サイクルを推進する。|2007年 |第2次エネルギー基本計画閣議決定 | 2003年と同様の方針をより詳しく。|2010年 |第3次エネルギー基本計画閣議決定 | ゼロエミッション電源（原子力発電＋再生可能エネルギー）の電源比率を、2010年の34%から、2020年50%、2030年70%へと引き上げる。その中で、再生可能エネルギーは2020年に10%とする（つまり、原子力を40%に上げる）。原子力発電は、2008年の時点で54基稼働し、設備利用率60%であった。これを、2020年までに9基増設して、設備利用率を85%とし、2030年までに14基増設して設備利用率90%とする。|2011年 | 福島第一原子力発電事故 | 3月11日。「原子力発電では炉心溶融のような苛酷事故は決して起きない」という原子力安全神話が崩壊した。|2011年 | エネルギー白書2011 (概要) | 10月28日。これまでのエネルギー政策を反省し、聖域なく見直す。エネルギー基本計画もゼロベースで見直す必要。原子力発電については、中長期的に依存度を可能な限り引き下げていくという方向性を目指すとともに、省エネルギーの徹底的な推進、再生可能エネルギーの開発・普及の強力な推進が重要。|2012年| 国内の原発がすべて停止。 | 5月5日。北海道電力泊原発3号機を定期点検のため停止したことによる。|2013年| 原子力発電所の新規制基準施行 | 7月8日。原子力規制委員会による。シビアアクシデントやテロを防止するための基準を新しく策定。|2014年|第4次エネルギー基本計画閣議決定 | 原子力発電は重要なベースロード電源。ただし、原子力発電への依存度は省エネルギー・再生可能エネルギーの導入や火力発電所の効率化などにより、可能な限り低減させる。電源構成のベストミックスの目標を出来る限り早く決定する。|2015年|電源構成の経済産業省案 | 6月1日。総合資源エネルギー調査会（経済産業相の諮問機関）の小委員会。2030年に原子力20〜22%、再生可能エネルギー22～24％とする。参考意見は下記。|2015年|川内原発１号機再稼働 | 8月11日。2013年に新規制基準が導入されてから、原発の再稼働は初めて。|2018年|第5次エネルギー基本計画閣議決定 | 2030年に温室効果ガス26%削減、2050年に80%削減を目指す。2030年度には再生可能エネルギーと原子力の合計のゼロエミッション比率を44％程度とすることを見込む。資源確保の推進、徹底した省エネルギー社会の実現、再生可能エネルギーの主力電源化に向けた取組、原子力政策の再構築等を進める。2015年6月1日の電源構成の経済産業省案に対する参考意見：視点・論点　「電源構成割合の問題点」 (橘川武郎, NHK, 2015/5/22)によると、2012年の原子炉等規制法の改正による「40年運転停止原則」が効力を発揮すると、2030年における原発依存度は15％前後となる。政府案の「20～22％」という数値は、原子力発電所の「60年運転」への例外的な運転期間延長か新増設かを前提としていることになる。2030 年の日本の電源構成見通し：より多くのガスと太陽光発電の導入は可能 (PDF) (Bloomberg Finance, 2015/6/2) によると、原子力発電の占める割合を20%から22%とするためには、少なくとも13基の原子炉の運転期間制限年数40年を延長しなければならないこととなる。"},
{file:"/2023/03/11/pyplot-japanese/",title:"Matplotlib で日本語のグラフを作成する",mtime:1678493251,ctime:1678493251,body:"Matplotlib で日本語のグラフを作成する Python の matplotlib でグラフを描くと、日本語が文字化けをする。これは、日本語のフォントが設定されていないためである。この記事では FontProperties によって日本語フォントを設定する方法と、macOS で TTC 形式のフォントファイルを扱う方法をまとめる。FontProperties による日本語フォントの設定【matplotlib】日本語の文字化けをFontPropertiesで解決で解説されているように、FontProperties を使って日本語のフォントを設定することで、matplotlib のグラフで凡例やタイトルの文字化けを防ぐことができる。また、フォントの使い分けをすることができるようになる。まずはimport matplotlib.pyplot as pltfrom matplotlib.font_manager import FontPropertiesfp = FontProperties(fname=font_path)によってmatplotlib.font_manager から FontProperties を import して、font_path の場所にあるフォントファイルの内容のフォントを fp という変数に FotProperties インスタンスとして格納する。その後は、たとえばplt.xticks(fontproperties=fp)plt.title('グラフのタイトル', fontproperties=fp)plt.xlabel('X軸のラベル', fontproperties=fp)plt.ylabel('Y軸のラベル', fontproperties=fp)plt.legend(loc='center right', prop=fp)のように fontproperties として fp を渡すことで、グラフのタイトル、ラベルにそのフォントが使われる。凡例の場合には legend に prop として渡す。matplotlib.font_manager.FontProperties に記されているように、FontProperties では family, style, size などを指定できる。たとえば、斜体でフォントサイズを9とするにはfp = FontProperties(fname=font_path, style='italic', size=9)とする。TTC ファイルの変換方法macOS では複数のフォントファイルがまとめられた TTC (TrueType Collection) 形式のファイルによってフォントが保存されていることがあり、直接 matplotlib で TTC ファイルを読み込むことができなかった。MacでTTC形式のフォントをTTF形式に分解するに書かれているようにフォントファイルを分解することで読み込むことができた。まずはbrew install fontforgeで fontforge をインストールし、ttc2ttf.pe をダウンロードしてから、たとえばfontforge -script ttc2ttf.pe '/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc'とする。ヒラギノ角ゴシック W4.ttc を分解したところ、HiraKakuProN-W4-AlphaNum-01.otf と HiraKakuProN-W4-AlphaNum-02.otf という2つの otf ファイルが得られ、HiraKakuProN-W4-AlphaNum-02.otf をフォントファイルとして FontProperties を設定することで、無事 matplotlib で日本語の凡例が入ったグラフを作成することができた。"},
{file:"/2015/10/09/tag-jekyll/",title:"GitHub Pages の Jekyll でカテゴリ / タグの作成",mtime:1444316400,ctime:1444316400,body:"GitHub Pages の Jekyll でカテゴリ / タグの作成 Jekyll には様々なプラグインがあり、プラグインを使うとカテゴリやタグを管理できる。しかし、GitHub Pages では、プラグインを使えないので、ローカルで jekyll を動かしてアップする、というちょっと面倒なことをする必要があるとのこと。ところが、このページ によれば、プラグインを使わなくてもカテゴリやタグを使うことができるらしい。というわけで、タグが使えるか試してみる。タグが使えるようになったようだ。タグを入れる前に、Bootstrap と Flatly のテーマを入れてみた。それから、_layouts/tagpage.html, tags/jekyll/index.htmlを上記のページの通りに書いて、tags/index.htmlを書いたら動いた。"},
{file:"/2015/11/20/powerpoint-link/",title:"PowerPoint 参考サイト",mtime:1455148342,ctime:1447952658,body:"PowerPoint 参考サイト Microsoft PowerPoint の使い方について解説しているサイトへのリンクです。Windows 版PowerPoint 2013の使い方まとめ (できるネット)Office 2013 トレーニングビデオ (Microsoft)パワーポイントの使い方 2010入門基本PowerPoint 動画マニュアルMac 版PowerPoint for Mac 2011 の学習ロードマップ関連記事Word 参考サイトExcel 参考サイトオフィスソフトの比較見やすいプレゼン資料の作り方 - リニューアル増量版 (森重 湧太)"},
{file:"/2020/01/17/15Puzzle/",title:"15パズル",mtime:1579235088,ctime:1579235088,body:"15パズル このブラウザはCanvasに対応していません。jaNew駒をクリックまたはタップしてスライドさせます。目的の配置を目指します。New ボタンで新しいゲームが始まります。同じ初期配置からやり直すことができます。駒の大きさと色を変えることができます。24パズル、35パズルのように大きくすることができます。8パズルのように小さくすることもできます。設定はブラウザのローカルストレージに保存されます。一度読み込めばオフラインでも遊べます。"},
{file:"/2024/01/02/apt/",title:"Seki's APT Repository",mtime:1704129756,ctime:1704129756,body:"Seki's APT Repository Seki's APT repository contains Debian packages for Python packages produced by Katsutoshi Seki. List of packages:python3-kaidokupython3-passmepython3-unsatfitTo add this repository, append the following line to /etc/apt/sources.list or a file with .sources extention under /etc/apt/sources.list.d:```deb https://seki.webmasters.gr.jp/apt stable main```or in deb822-style format```Types: debURIs: https://seki.webmasters.gr.jp/aptSuites: stableComponents: mainSigned-By: /etc/apt/trusted.gpg.d/seki-apt-stable.asc```To add the GPG key for this repository, execute the following commands:```wget -qO ~/seki-apt-stable.asc https://seki.webmasters.gr.jp/public.keysudo mv ~/seki-apt-stable.asc /etc/apt/trusted.gpg.d/```For verification, the GPG key ID is:6A59117FE8298E69B62F935F13DBE2778EBBF181For more information about Seki's Python packages, visit the following pages:PyPI - sekiGitHub - sekika"},
{file:"/2015/12/08/joho-d-link/",title:"「情報処理実習D」参考サイト",mtime:1672830967,ctime:1449524057,body:"「情報処理実習D」参考サイト 「情報処理実習D」の授業で参考にするサイトへのリンクです。講義全般情報処理実習D: 講義情報ToyoNet 情報関連ポータルプログラミング教育プログラミング教育 (文部科学省)坂村健の目 プログラミング教育急げ (毎日新聞, 2016年1月21日)プログラミング言語プログラミング言語の比較 (Wikipedia)2017年の人気プログラム言語１０選を徹底比較！気になる年収や求人、学習難易度まで (トイロハ)2017年、人気のプログラミング言語トップはPython。C、Javaが続く。 (Publickey, 2017年7月23日)オンライン実行環境paiza.ioideone.comJava 言語の基礎Java SE Downloads初心者のためのJava講座JDKのダウンロードとインストールOracle Java SE サポート・ロードマップJava 11正式版がリリース、本バージョンからOracle JDKのサポートは有償に。OpenJDKで無償の長期サポート提供は現時点で期待薄 (Publickey, 2018年9月26日)オラクルによるOpenJDKのビルドWikipedia - ボディマス指数アルゴリズムフローチャートの書き方  (三日市康博, 丸山博)Wikipedia - ソートQuick-sort with Hungarian (Küküllőmenti legényes) folk dance (YouTube)ハノイの塔 (JavaScript)ハノイの塔 (Flash)高精度計算サイト"},
{file:"/2020/04/12/johoA-media/",title:"オンライン学習環境について",mtime:1586655478,ctime:1586655478,body:"オンライン学習環境について 東洋大学経営学部の情報処理実習Aは、例年はPC教室で実施していますが、今学期は自宅からのオンライン学習となります。授業の内容は、PCを使って Microsoft Office (Word, Excel, PowerPoint) の使い方を学ぶというものです。そのため、受講には自宅で Microsoft Office を使うことができる環境が必須です。私が実施する他の授業では、スマホのみでも履修可能となるように工夫をする予定ですが、以下の環境を整えておく方がはるかに学習効率は高いものと思います。そのことは、本来であればシラバス（ToyoNet-G）を書き換えて対応するべきところですが、現状ではそれができないため、ToyoNet-ACEに以下の情報を書き込みました。ToyoNet-Gで履修登録をした翌日には ToyoNet-ACE で確認できるようになりますが、学生は履修登録する前に読むことができないため、このページにも公開情報として記しておきます。なお、オンライン授業の準備に関しては、近いうちに大学から ToyoNet-G などを通して公式に案内があると思いますが、全体的に学生への情報提供が遅いように感じるため、あえてこのように教員個人から情報提供をするものです。ToyoNet-Gからの案内を見落とさないようにお願いします。情報処理実習Aの履修に必要な環境パソコン (Windows または Mac)：授業は Windows のPCを使って実施するので、Windows のPCがある方が便利ですが、Mac でも Mac 版の Office をインストールすれば受講可能です。その場合は、授業動画で解説する操作手順とは異なります。Microsoft Office: 東洋大学の学生は、パソコン（Windows または Mac）およびタブレットとスマホに、Office365 education をインストールして使うことができます。これからPCを購入する人は、プレインストールモデルを買う必要はありません。詳しくは、https://www.toyo.ac.jp/ja-JP/toyonet/information/software/ を参照してください。インターネット回線: 授業動画の視聴はスマホの画面では小さすぎるので、パソコンからネットに接続することが必要です。課題ファイルを提出するときにも、パソコンがネットに接続されている必要があります。自宅に固定回線がない場合には、モバイルWifiを契約することで、パソコンからインターネットに接続することができます。スマホからのテザリングで接続できる場合もありますが、通信量には注意してください。大学ではレポート作成、プレゼンテーションなどパソコンを使うことが多く、また授業で配信される資料や提供される動画を閲覧するときには、スマホの小さな画面では不自由です。この授業を履修するためだけではなく、パソコンを所持することは大学生の学習環境にとって必須です。この機会に、ぜひ学習環境を整えてください。情報処理実習Aの授業の進め方授業の進め方については、ToyoNet-ACEでこれから案内する予定ですが、次のような流れを考えています。テキストは例年通りのPDFファイルを使う。授業は動画で提供する。期限内に動画を視聴し、ToyoNet-ACEに課題を提出する。課題の提出をもって出席とする。例年通りに課題の提出をもって成績評価する。質問は、ToyoNet-ACE の掲示板および授業中の質問時間に Webex Meetings を使ってチャット（テキスト）または音声によって受け付ける。"},
{file:"/2019/07/01/derivative-chain/",title:"合成関数の微分",mtime:1561927785,ctime:1561927785,body:"合成関数の微分 合成関数の微分の簡略化された説明と正確な証明についてまとめる。y が u の関数 $f(u)$ であらわされ u が x の関数 $g(x)$ であらわされるとき、合成関数 $ f \circ g $ を[[ y=(f \circ g)(x)=f(g(x)) ]]と書くことができる。たとえば、$y=\log(u)$ で $u=x+2$ のとき、$f(u)=\log(u), g(x)=x+2$ であるから[[ y=f(g(x))=f(x+2)=\log(x+2) ]]となる。f と g が微分可能であれば[[ (f \circ g)^{\prime}(x) = f'(g(x)) g^{\prime}(x) ]]が成り立つ。すなわち[[ \frac {dy}{dx} = \frac {dy} {du} \cdot \frac {du}{dx} ]]となる。これが「合成関数の微分公式」すなわち微分法における連鎖律である。この式は、dx, du, dy がそれぞれ「ある数」であるとみなせば、成り立つのが当然であるように見える。そして、実際にそのように簡略化して説明されることも多いだろう。簡略化された説明$y=f(x)$ について、xとyの有限微小変化量をそれぞれ Δx と Δy として、Δx → 0 の極限としての無限小変化量を dx と dy とすることで、[[ \frac{dy}{dx}  = \lim_{\Delta x\rightarrow 0}\frac{\Delta y}{\Delta x} ]]のように導関数が定義される。ここで、Δx に対する $u=g(x)$ の変化量を Δu として、Δu に対する $y=f(u)$ の変化量を Δy とすれば、Δx を定めれば Δu と Δy が順次定まる。そして、$ \Delta x \ne 0, \Delta u \ne 0 $ のとき[[ \frac{\Delta y}{\Delta x}  = \frac{\Delta y}{\Delta u} \cdot \frac{\Delta u}{\Delta x} ]]が成立する。これは、Δx, Δu, Δy がそれぞれ「ある数」であることから明らかである。$u=g(x)$ が微分可能、つまり連続関数であることから、Δx → 0 とすると Δu → 0 となる。したがって、上式で Δx → 0 の極限を取ると[[ \lim_{\Delta x\rightarrow 0}\frac{\Delta y}{\Delta x}  = \lim_{\Delta x\rightarrow 0}\left( \frac{\Delta y}{\Delta u} \cdot \frac{\Delta u}{\Delta x} \right) = \lim_{\Delta u\rightarrow 0}\frac{\Delta y}{\Delta u} \cdot \lim_{\Delta x\rightarrow 0} \frac{\Delta u}{\Delta x} ]]となることから、[[ \frac {dy}{dx} = \frac {dy} {du} \cdot \frac {du}{dx} ]]が導かれる。以上の説明は Wikipedia の連鎖律では「間違った証明」であるとされている。なぜ間違っているとされているのかといえば、上記の説明の中で$ \Delta x \ne 0, \Delta u \ne 0 $としているが、$ \Delta x \ne 0 $ であっても $ \Delta u \ne 0 $ であるとは限らないためである。実際に $g(x)$ が定数関数であればそうなるし、定数関数ではなくても、微分可能な関数 $g(x)$ のある x において、任意の $\epsilon>0$ に対して $ 0 < \| \Delta x \| < \epsilon, \Delta u = 0 $ となるような Δx が存在するようなものを考えることは可能である。ただし、高校の数学の授業でそのような関数を扱うことはまずないであろう。とはいえ、高校の数学では連続関数や微分可能性のε-δ 論法による厳密な定義までは学習しないことから、高校生に教えるときにそこまでの厳密性がないことをもって「間違った証明である」とするのも、かえって混乱させてしまう可能性もある。正確な説明は無理だから「dx, du, dy はそれぞれが数であるかのごとく分数のように計算できるけど、なぜそうなのかは考えなくてもいいよ」としてしまうのも一つの方法ではあるが、そこまでブラックボックスにしてしまうのも味気ない。やはり「理由があってそうなっている」ということは伝えたいとすれば、このような簡略化された説明は認められても良いと考える。実際になかけんの数学ノートには、合成関数の微分がなぜ成り立つかは、上のように、定義の式から出発し、2つの積に分解して考える、という方法で示すのが一般的で、教科書にも上のような説明が書かれています。ただ、細かな話をすると、途中の式の分母に出てくる「$f(x+h)-f(x)$」は0になってしまう可能性があり、上の説明は、厳密には正しくありません。と書かれていて、高校の教科書でも簡略化された説明がなされているようである。正確さを期すのであれば「これはあまり正確な証明ではないけれど、正確な証明は大学で勉強してね」とするのが妥協点であろうか。ここでは「証明」とまでは言えないことから「簡略化された説明」とした。正確な証明上記の簡略化された説明を修正して正しい証明とする方法として、Wikipedia の連鎖律では関数 Q を導入している。この証明方法よりは、合成関数の微分の証明（怜悧玲瓏）に書かれているように、Δuによる割り算を避けて証明する方が簡明であると感じる（やっていることは本質的に同じではあるが）。少しだけ書き直す。$ u=g(x) $ において、x の増分 Δx に対する u の増分を Δu$ y=f(x) $ において、x の増分 Δu に対する y の増分を Δyとする。ある x における $ \Delta x \ne 0$ に対する $\epsilon_1$ を[[ \Delta u = [g^{\prime}(x) + \epsilon_1] \Delta x]]によって定めると、[[ \epsilon_1 = \frac{\Delta u}{\Delta x} - g^{\prime}(x) ]]であり、$ g^{\prime}(x) = \lim_{\Delta x\rightarrow 0}\frac{\Delta u}{\Delta x} $ より Δx → 0 のとき $ \epsilon_1 \rightarrow 0$ かつ Δu → 0 である。次に、ある u における Δu に対する $\epsilon_2$ を[[ \begin{array}{rl} \Delta y &=& [ f^{\prime}(u) + \epsilon_2 ] \Delta u ~ (\text{ただし、} \Delta u＝0 \text{のとき} \epsilon_2 = 0 ) \cr\cr &=& [ f^{\prime}(u) + \epsilon_2 ] [g^{\prime}(x) + \epsilon_1] \Delta x ~ (\text{上の式を代入}) \end{array} ]]によって定めると、Δu → 0 のとき $ \epsilon_2 \rightarrow 0$ である。そして、 Δx → 0 のとき Δu → 0 であるから $ \epsilon_2 \rightarrow 0$ である。したがって、[[ \begin{array}{rl} \frac {dy}{dx} &=& \lim_{\Delta x\rightarrow 0}\frac{\Delta y}{\Delta x} \cr\cr &=& \lim_{\Delta x\rightarrow 0} [ f^{\prime}(u) + \epsilon_2 ] [g^{\prime}(x) + \epsilon_1] \cr\cr &=& f^{\prime}(u)g^{\prime}(x) \cr\cr &=& \frac {dy} {du} \cdot \frac {du}{dx} \end{array} ]]となり、合成関数の微分公式が導かれた。Δy の式において「$\Delta u＝0$ のとき $\epsilon_2 = 0$」としているところがミソである。"},
{file:"/2023/08/09/concatepdf/",title:"PDFの図を1ページにまとめる",mtime:1691560239,ctime:1691560239,body:"PDFの図を1ページにまとめる 複数のPDF画像ファイルを1ページの画像にまとめるPythonスクリプトを作成した。論文で複数のグラフを1枚の図としてまとめるときに便利である。たとえばこの論文のFig. 6ではこのように複数のグラフが1枚の図としてまとめられている。この図は、4つのPDFファイルを縦横2個ずつ並べたものである（それぞれのPDFファイルに2つのグラフがあるため、合計8個のグラフがある）。元のPDFファイルは20個あり、4個ずつを1つの図としてまとめて、合計5個の図を作成している。このような作業を簡単に実行することを目的としてスクリプトを作成した。複数のPDFファイルを1つのファイルにまとめるコマンドには pdfunite のようなものがあるが、通常はページが連結されるだけであり、同じページ内に複数のPDFをまとめて配置することができない。そこで作成したのがこのスクリプトである。インストールPyPDF3ライブラリを次のコマンドによってインストールする。```shellpython3 -m pip install PyPDF3```その後、 以下のコマンドによりこのスクリプトをダウンロードして concatpdf という名前に変更し、実行可能にする。```shellcurl -o concatepdf https://gist.githubusercontent.com/sekika/1e8811868cebeca6c3443c69849929db/raw/8ae6aa7abeab13dac7a62d50458a16a22a2ec011/concatepdf.pychmod +x concatepdf```必要に応じて、1行目のシバン```shell!/usr/bin/env python3```を書き換える。これで./concatepdfで実行可能となり、システムのPATHに配置すると、concatepdfで実行可能となる。以下の例ではconcatepdfで実行する。実行方法例えば、カレントディレクトリに複数のPDF画像ファイルがある場合、次のコマンドを実行する。```shellconcatpdf -i *.pdf -o output/output.pdf -c 2 -r 3```この例では、画像ファイルが output/output.pdf に連結され、各ページに横に2つ、縦に3つの画像が配置され、ページごとに6つの画像が生成される。利用可能なコマンドラインオプションを表示するには、次のコマンドを実行する。```shellconcatpdf -h```すると、次のように表示される。usage: concatepdf [-h] -i INPUT [INPUT ...] -o OUTPUT [-c COLUMNS] [-r ROWS]Arrange multiple PDF images both horizontally and vertically within a singlepage, resulting in multiple pagesoptions:-h, --help            show this help message and exit-i INPUT [INPUT ...], --input INPUT [INPUT ...]                    Input files-o OUTPUT, --output OUTPUT                    Output file-c COLUMNS, --columns COLUMNS                    Numbers of columns in a page-r ROWS, --rows ROWS  Numbers of rows in a page別のPythonスクリプト内でこのスクリプトを使用したい場合は、スクリプト内のconcat_pdf_pages 関数を利用することができる。"},
{file:"/2016/03/25/MacZip/",title:"macOS で zip 圧縮・展開するときの文字化け対処法",mtime:1692840227,ctime:1458874000,body:"macOS で zip 圧縮・展開するときの文字化け対処法 macOS の標準機能で zip ファイルを作成すると、ファイル名が UTF-8 でエンコードされる。一方、Windows では日本語のファイル名を Shift-JIS でエンコードする。そのため、日本語を含むzipファイルをやりとりするときに文字化けのトラブルが生じることがある。その対処方法を記す。macOS で Shift-JIS の zip ファイルを作成する以下が、Mac で Shift-JIS ファイル名で圧縮するソフトである。.DS_StoreをはじめとするMac特有のファイルを自動的に除外する機能が付いている。WinArchiver Lite （無料版） / WinArchiver  （有料版）MacZip4Win macOS で Shift-JIS の zip ファイルを展開するmacOS では標準のアーカイバで文字コードを自動的に判別して展開するので、対策不要である。ところが、Shift-JIS のファイル名を含むファイルを展開するときに、標準のアーカイバでエラーが生じることがあった（macOS 10.15.2 Catalina）。何種類かのソフトを試したところ、ファイル名の文字コードを変換してくれない場合が多かったが、次のソフトで問題なく文字コードを変換して展開できた。The Unarchiverなお、zip ファイルに関連づけられているアプリケーションを変更するには、zipファイルを右クリックして「情報を見る」を選び「このアプリケーションで開く」から目的とするアプリケーションを選択して、「すべてを変更」ボタンをクリックする。The Unarchiver は unar というコマンドとしてターミナルから実行することもできる。Homebrew をインストールしてから brew install unar で unar をインストールすることができる。ファイル名の文字コードは自動的に判別されるが、自動判別でうまくいかない場合には、unar -e cp932 filename.zip として、Microsoft による Shift JIS の拡張を指定する。文字コードの一覧は unar -e help で表示できる。Windows で UTF-8 の zip ファイルを展開するWindows 7 では修正プログラムを適用する。Windows 8 からは UTF-8 の圧縮ファイルをそのまま展開できるようになっているようである。その他の環境の場合Explzh等のフリーソフトを使う。今後、Windows 8 以降のシェアが増えるにつれて、ファイル名文字化けのトラブルは減少するであろうと考えられる。参考サイト日本語を含むZIPファイルを文字化けせず解凍する方法 (Qiita, 2014/3/9)MacでWindows向けに作成したZIPファイルの文字化けを解消するアプリWinArchiver (HepHep!, 2015/4/25)MacWinZipper (WinArchiver) (Tida)MacでWindowsと互換性のあるzipファイルを作る方法【文字化けなし】 (Naver まとめ, 2012/9/7)"},
{file:"/2015/11/22/strasbourg/",title:"ストラスブールの写真",mtime:1448157376,ctime:1448157376,body:"ストラスブールの写真 2013年度に、1年間フランスのストラスブールに滞在しました。その前後にも、何度かストラスブールを訪問しています。ストラスブールで撮影した写真は1万枚を越えますが、その中から選んだ写真をこちらにまとめました。ストラスブールの写真アルバムその中で、いくつかの写真を以下に貼ります。写真をクリックすると、拡大写真と撮影時間、撮影場所の地図が表示されます。写真：クリスマースマーケット写真：グーテンベルク広場のカルーセルとグーテンベルク像写真：プティットフランス写真：大聖堂のイルミネーション（動画）写真：大聖堂の上から眺めるストラスブールの景色写真：欧州議会会議場写真：Auchan というスーパの近くで撮影した虹と、Auchan の裏にあるバガゼー池、その近くでストラスブール号に載るくじゃく写真：ストラスブール大学の Geology 棟と1年間研究をした机写真：アルザスワイン写真：タルト・フランベとシュークルートとベッコフ写真：広場でペタンクをする人達写真：現代美術館にある像"},
{file:"/2019/09/13/pc-trouble/",title:"東洋大学PC教室におけるトラブル解消法",mtime:1568304114,ctime:1568304114,body:"東洋大学PC教室におけるトラブル解消法 東洋大学PC教室におけるトラブル解消法です。前の人がログオフしていなかったため、画面がパスワードロックされている本体の電源を長押しして電源を切ってから、電源を入れて起動する。なお、PC教室から離れるときには必ずログオフすること。パスワードが分からない「情報システム利用通知書」で確認可能。通知書は学生証があれば証明書発行機で再発行可能。パスワードは統合ID・パスワードについてに記されている通り各自責任を持って利用、管理すること。パスワードはあっているはずだけれどログインできないログオン先が「EDU」になっていることを確認する。Caps Lock （アルファベットの入力をすべて大文字に固定する機能）機能がオンオンになっていたら、[Shift]キーを押しながら「Caps Lock」キーを押してオフにする。日本語入力が使えないときどき、日本語入力(MS-IME)が使えなくなっていることがある。そのときには、次のように設定をする。スタートコントロールパネル地域と言語「キーボードと言語」タブの「キーボードの変更」ボタン「全般」タブの「インストールされているサービス」で「追加」ボタン日本語（キーボード）で Microsoft IME をチェックしてOKOKボタン右下に Microsoft IME のツールバーが出てくる「かな入力」になってしまった予期せずに「ローマ字入力」が「かな入力」に切り替わってしまった場合には［Alt］+［カタカナ/ひらがな］で切り替える。（参考：「ローマ字入力」と「かな入力」の切替方法）その他東洋大学情報サービスのよくある質問一覧を参照。"},
{file:"/2015/10/28/win10-virtualbox/",title:"VirtualBox への Windows 10 のアップグレードインストール",mtime:1446007687,ctime:1446007687,body:"VirtualBox への Windows 10 のアップグレードインストール VirtualBox 上で、Windows 7 から Windows 10 へアップグレードした。ホストOSは、Mac OS X。OSバージョンの設定まずは、OS タイプのバージョンを Windows 10 に設定した。VirtualBox での新規仮想マシンの作成 より図 6.6 に示すように、VM 名および OS タイプの手順で、仮想マシンのわかりやすい名前を「名前」フィールドに入力し、インストールしようとしているオペレーティングシステムとバージョンをドロップダウンリストから選択します。これによって VirtualBox が仮想マシンに使用するデフォルト設定が決まるため、正しいオペレーティングシステムとバージョンを選択することが重要です。最初は、仮想マシンの OS タイプのバージョンに、Windows 10 が表示されなかったので、VirtualBox を最新版 (5.0.8) にアップデートしてから設定した。ディスク容量の拡張Windows 7 で確保していたディスク容量が、Windows 10 をインストールするには少なかったので、仮想ディスク容量を拡張した。可変サイズの VDI 形式で仮装ディスクを作成していたので、次の手順で拡張できた。VirtualBoxにおける仮想マシンの仮想ディスク容量を拡張するための手順まず、ホストOSで VBoxManage コマンドを実行して、ディスク容量を拡張する。~VBoxManage modifyhd 拡張したい仮想マシンの仮想ディスクのパス —-resize 拡張後のディスク容量~これだけでは、仮想マシンで拡張された分のディスクを使用できる状態にないので、仮想マシン側でディスクを拡張する。Windows 7 を起動して C ドライブの拡張を試みたが（システムとセキュリティー > 管理ツール > コンピューターの管理 > ディスクの管理 > Cドライブを右クリックして「ボリュームの拡張」[参考](http://tech.ewdev.info/2014/10/2140/)）、Cドライブは起動ディスクなので、拡張できなかった。そこで、上記サイトに書かれているように、Linux で起動して、gparted でパーティションを編集した。LiveCD から起動しても良いが、すでに Debian をインストールした仮想ディスク環境があったので、そこから起動した。Debian 環境の SATA ドライブに Windows のディスクを追加して起動gparted で Cドライブに相当する /dev/sdb2 を拡大して、シャットダウンDebian 環境からは Windows のディスクを削除Windows 7 を起動チェックディスクが立ち上がる再起動、無事にCドライブが拡張されたWindows 10 へのアップグレード「Windows 10 を入手する」アプリからのアップグレードを試みた。「Windows 10を入手する」アプリは表示されましたかしかし、「Windows 10 を入手する」アプリを起動すると、VirtualBox Graphics Adapter が Windows 10 に対応していないから Windows 10 を入手できないと言われてしまう。その件について、いくつかのサイトを検索した。VirtualBoxでWindows 10アップデートHow to get VirtualBox video driver working in Windows 10 build 10041Windows 10 inside VirtualBox not scaling after upgrade from 8.1VirtualBox Graphics Adapter を削除する方法はうまくいかなかったので、手動インストールすることとし、Windows 10 のディスクイメージをダウンロードした。Windows 10 のディスク イメージ (ISO ファイル) のダウンロードファイルサイズは、32 bit 版は 2.9 GB、64 bit 版は 3.9 GB とけっこう大きく、時間がかかった。ダウンロードが終わり、Windows 7 を起動して、DVDドライブに Windows 10 のディスクイメージをマウントして、setup.exe を実行したら、アップグレードできた。Windows 10 にアップグレードした直後の使用ディスク容量は 33.7 GBだった。Microsoft Office Professional 2013 がインストールされ、他にもいくつかのプログラムとデータが入っている状態で、ルートディレクトリの下は、ユーザー 1.55 GB、Program Files 2.79 GB、cygwin 1.33 GB、Windows 9.40 GB、Windows.old 14.5 GB。"},
{file:"/2015/10/19/office-open-xml-git/",title:"Office Open XML の git ファイル管理",mtime:1445227273,ctime:1445227273,body:"Office Open XML の git ファイル管理 git diff で Office ファイルの差分を見る に書かれている Apache Tika を使う方法で、docx, xmlx, pptx ファイルを差分管理できる。やってみたところ、たしかに git log -p で差分が表示された。これは便利。Mac の場合の手順について、上記サイトに書かれている通りのことをこちらにもメモ。~brew install tika~以下のようなスクリプト unopnexml を置く。~!/bin/shtika -t  $1 ~~/.gitconfig を編集~[diff  openxml ]textconv = unopenxml # フルパスで書く~レポジトリに .gitattributes を追加。~*.pptx diff=openxml*.docx diff=openxml*.xlsx diff=openxml~"},
{file:"/2021/04/22/aspect/",title:"FFmpegによる動画のアスペクト比変換",mtime:1619061017,ctime:1619061017,body:"FFmpegによる動画のアスペクト比変換 オンライン授業などで動画を作成する機会が増えた。動画は短めに作成してMacのQuickTimeで結合している。異なるアスペクト比（縦横比）の動画を結合する際に、まずは FFmpeg によってアスペクト比を変換する方法についてまとめる。FFmpeg のインストール動画の変換にはFFmpegが便利であり、Homebrewをインストールしてから``brew install ffmpeg``でインストールできる。ffmpeg を使えば、さまざまなファイル形式の動画ファイル INPUT_FILE を``ffmpeg -i INPUT_FILE -pix_fmt yuv420p output.mp4``のように、INPUT_FILE をQuickTimeで再生できるYUV420 形式のmp4 に変換することができる。アスペクト比の変換アスペクト比 4:3 で収録された動画と 16:9 で収録された動画が混在しているときに、QuickTime で結合する前に、すべての動画を 16:9 のアスペクト比に変換するという作業を考える。``ffmpeg -i INPUT_FILE -pix_fmt yuv420p -aspect  16:9  output.mp4``とすればアスペクト比を変換できるが、この方法だと画像が横長に拡大されてしまい、資料を提示している場合は読みにくくなってしまう。そこで、画像は4:3のままで、左右に黒いボックスを付け加えて動画の画面サイズだけ16:9にするにはどうすれば良いのだろうか。そのための方法について、ネットを調べ回った結果、Redditの回答より``ffmpeg -i INPUT_FILE -pix_fmt yuv420p -vf  pad=width=max(iw\,ih*(16/9)):height=ow/(16/9):x=(ow-iw)/2:y=(oh-ih)/2  output.mp4``とすればうまくいくことが分かった。"},
{file:"/2015/11/02/blank-cell/",title:"Excel の計算における空白セルの処理",mtime:1446436885,ctime:1446436885,body:"Excel の計算における空白セルの処理 Excel で計算式を書く時に、空白セルがある時の処理のしかたについて。空白セルがあるときに計算結果を表示しない、という場合には、IF関数を使って =IF(A2=  ,  ,計算式) のように書く（A2 セルが空白セルかどうかを判定する場合）。詳しい解説はこちら。第三回　「IF関数」の空白処理を知らないとExcelの便利さ半減！？次に、空白セルを 0 であるとして計算したい場合について。空白セルを参照した計算式を書けば、空白セルの値が0であるとして計算がされる。VALUE関数を使えば、文字列は数値に変換され、空白セルは0に変換される。空白文字が入っている時や、計算式の途中でNULL値が返ってきたときなど、1の方法でうまくいかなかった時に使える。データ内の空白セルを一括で選択して「0」を入れる方法と、その逆については、ここで解説されている。Excelワザ　空白セル　⇔　「０」"}