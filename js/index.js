var start = new Date().getTime();
var data = [{file:"/2020/01/02/popular/",title:"よく読まれている記事 (2019年)",mtime:1577935504,ctime:1577935504,body:"よく読まれている記事 (2019年) 当サイトの記事で、どの記事がよく読まれているのかを調べてみました。Google Analytics によるアクセス統計で、2019年のページビュー数のトップ20を並べます。ターミナルからファイルを開くExcel の計算における空白セルの処理Google 認証システムの仕組みWord の校閲者名を統一する方法Excel でデータの間引きEPSファイルの作成方法GitHub リポジトリに大量のファイルを一括登録する方法Mac で zip 圧縮・展開するときの文字化け対処法LaTeX の数式を Word に貼り付ける方法Mac のターミナルで日本語入力Uploading many files to GitHub repositoryVirtualBox への Windows 10 のアップグレードインストール複数の Google カレンダーを iPhone に同期Excel と回帰分析KaTeX による数式の表示積と商の微分公式指数と対数関数の微分ファイルの拡張子について株価時系列データからの線形回帰トレンド作成macOS 起動オプション2019年の1年間で、総ページビュー数 75106、そのうちでトップ3の割合が60%でした。以下は過去のアクセス集計記事です。2017年4月2017年9月"},
{file:"/2015/10/20/word-author/",title:"Word の校閲者名を統一する方法",mtime:1445319229,ctime:1445319229,body:"Word の校閲者名を統一する方法 論文の閲読結果を修正するときに、修正箇所を Word の編集履歴で表示することがある。そのときに、２台以上のPCで作業をすると、Word の校閲者名が統一されていないと（片方は日本語名で片方は英語名だったり）、別人として表示されるので、校閲者名はそろえておく方が良い。けれど、それを忘れてしまい、作成者名を一括で変更しようとして調べたところ、どうもこれまでに編集した履歴を別の校閲者名に変更することは、できないようだ。ただし、すべての校閲者名を「作成者」という校閲者名に一括して変更することはできるとのこと。これは、チームで編集したファイルを、一括して個人名を取り除くときにも使えるだろう。方法としては、Word 2010 for Windows だと「ドキュメント検査」「ドキュメントのプロパティと個人情報」の「すべて削除」にあるらしい。Word2010： 文書内の校閲者名（変更履歴）を統一することは可能？Office 2010で社外には出したくないプロパティ情報などを削除するWord for Mac 2016では、「プライバシー」オプションの「保存するときに個人情報をファイルから削除する」にチェック。Office 2016 for Mac: 保存するときに個人情報をファイルから削除するには手元の Word for Mac 2011 では、「Word」「環境設定」「セキュリティ」の下に「プライバシー オプション」「保存するときに個人情報をファイルから削除する」があった。"},
{file:"/2016/04/07/iPhoneOCR/",title:"iPhone で文字認識",mtime:1459997324,ctime:1459997324,body:"iPhone で文字認識 iPhone のカメラで撮影した画像をそのまま文字認識してテキスト化するアプリについて。私は、日本語は「もじかめ」、英語、フランス語等では「Pixter」を使っている。日本語株式会社メディアドライブのスマートフォン向け文字認識アプリ「もじかめ」は、2011年にリリースされ、2016年に無料アプリとしてリニューアル公開された。実際に使ってみたところ、日本語の文字認識精度は英語圏で開発されたアプリよりもかなり良い。Internet Watch の記事　(2016/4/7)メディアドライブのプレスリリース (2016/3/29)App Store: iOS 版ダウンロードGoogle Play: Android 版ダウンロード文字認識テスト：近くにあったマスクの使用方法を読み込み。この例では認識ミスなし。使用方法●上下表裏を確認してノーズフィッターを鼻の形に合わせます。(耳ひもが取り付けてある面が顔側です)●顔にフィットさせながら耳ひもを掛けます。●顔の大きさに合わせてプリーツを上下に広げます。英語等のアルファベットを使う言語The Best iPhone OCR Apps Tested では、3つの iPhone アプリがレビューされている。その中で、2つ目の PDFpen Scan+ は、他の2つと比べて文字認識精度が良くないとレビューされているので、残りの2つを紹介する。以下には、App Store 日本語版へのリンクを示す。価格はこの記事を投稿した時点のもの。CamScanner: 結果を共有するためには App 内課金で高級アカウント（月間600円、年間6000円）を購入する必要あり。日本語もそれなりの精度で認識できるが、Xcode Ghost 感染騒ぎがあった。現在は、対策されている。INTSIG Information 開発。Pixter: 480円。日本語の文字認識精度は悪いので日本語のレビューは良くないが、英語、フランス語の文字認識精度は良い。他にもいろいろな言語に対応し、アルファベット系言語の読み込みには便利。「ソース言語」と「ターゲット言語」を設定して使う。Quanticapps 開発。文字認識テストの例として、Céréalというお菓子に表示されていたフランス語の原材料名の Pixter による読み込み結果を記す。正確。Biscuit avec soja et orange, avec vitamines ajoutés. INGRÉDIENTS: Farine de blé, sucre de canne, huile de colza, flocons de scia 7%, germe de blé 5,3%, flocons d'orange 2,5% (orange, sucre, amidon de maïs), émulsifiant: lécithine de colza, minéraux (sels de magnésium de l'acide orthophosphorique et carbonate de calcium), poudres à lever: carbonates de sodium, diphosphates et carbonates d'ammonium, fibre d'avoine, sel marin, arôme naturel d'orange, protéines de lait, amidon de blé, vitamines (E., 83, B5, B6, B1, acide folique), lactose. Peut contenir des traces de fruits à coque (amandes, noisettes, noix et noix de pécan), oeuf et lupin.その他の言語日本語でもなく、アルファベットを使わない言語については、テストをしていないのでよく分からない。その言語専用のアプリがあれば、それを使うのがベストであろう。"},
{file:"/2017/04/01/Taipei/",title:"台北滞在メモ",mtime:1517720873,ctime:1491042710,body:"台北滞在メモ 台北滞在時のメモです。全般台北ナビ旅々台北.com天気予報公益財団法人日本台湾交流協会 台北事務所 / map / ナビ交通悠遊卡 (EasyCard) : Easy Wallet台北ナビマップ台湾路線図（ひまわりデザイン）MRT路線図 / 英語台北バス: 路線検索 / 路線図検索チェーン店頂好 wellcome: 店舗検索Jasons Market Place春水堂: 店舗一覧龍涎居: 店舗一覧 / 歩く台北地域西門 (Ximen)駅情報: 周辺地図台北ナビ・MRT西門駅遠東百貨 臺北寶慶店: map / 西門3番出口出てすぐ / 営業時間 / 1F 亞尼克菓子工房 (Yannick) 黒森林 / B1 JasonsCarrefour 家樂福 桂林店: mapWellcome台灣甘蔗頭健康鍋: map / ブログ三媽臭臭鍋: map / 伝票天天利美食坊: map / ナビ / メニュー / 日本語365台灣小吃: mapは場所がおかしい。天天利美食坊の隣。三媽臭臭鍋: map / 伝票西門金鋒魯肉飯: map / ブログ 2 3馬辣: map / ブログ楽田麺包屋 (衡陽店): map吉宏米粉湯: map桶好呷 現滷滷味: map / 欲しいものを取って鍋をつくってもらう西門町芒菓冰: map / ナビ台北牛乳大王 成都店: mapIkari Coffee 衡陽店: map樂法 Le Phare 西門店: map門卡迪餐廳: map足強足體養生館 / map / ナビ金帥商務旅店 King Shi Hotel: map / booking高絲旅館 - 西門町漢口館: map / bookingMRT は南港線（板南線、青）は混んでいるので松山線（緑）が使えればその方が良い台北車站 (Taipei Main Station)駅情報: 周辺地図台北ナビ・MRT台北駅新光三越台北站前店: map / フロアマップ老蔡水煎包: map1 / map2 / ナビ誠品生活 誠品站前店: map / K區地下街忠孝復興 (Zhongxiao Fuxing)駅情報: 周辺地図台北ナビ・MRT忠孝復興駅太平洋 SOGO 復興館: map / 2番出口/ B3のスーパーにPilsner Urquell あり太平洋 SOGO 忠孝館: map / 4番出口同心圓水晶紅豆餅 / 5番出口老蔡水煎包阿宗麵線Wellcome 忠孝店天仁茗茶中山 (Zhongshan)駅情報: 周辺地図台北ナビ・MRT中山駅新光三越百貨（台北南西店一館）: map / 2番出口 / B2 鼎泰豐、超市、天仁 / B1 春水堂 / 9F 免税カウンター 2000元以上天津街米苔目: map / 月曜〜金曜、9:00-19:00臺北松山機場 TSAMRT 内湖線から文山線へ直通。あわせて文湖線、茶色(BR)飲食サービス: 春水堂 (第1ターミナル2階)桃園國際機場 TPE桃園機場捷運: 路線図 / Wikipedia / 記事 / 台北車站まで160元 / 北門駅も近い・歩く動画その他国立故宮博物院: map / ナビ台北市立動物園: MRT文湖線「動物園」駅出口1 / 猫空ロープウェイ松山機場近く SunnyHills 微熱山丘: map中正紀念堂 金峰魯肉飯: map / ブログ徐匯中學 茂林羊肉爐: map / ブログ市政府 呉寶春麥方店 台北店: map / 食べログ通信中華電信プリペイドカード: 空港カウンター / テザリング可国際電話: +886 / 台湾から日本 002-81-(国内番号) / 日本から香港 010-886-(国内番号)両替レート比較: 現鈔手續費 = 両替手数料大眾銀行 : レート / map / ホテルの名刺を持参TWD / JPY レート変動台湾語台湾語注音符號"},
{file:"/2017/05/07/git-command/",title:"Git コマンドチートシート",mtime:1494095092,ctime:1494095092,body:"Git コマンドチートシート 個人的にたまに使うけれど忘れてしまいがちな Git コマンドをまとめておく。参考サイトまずは Git 全般に関する参考サイトからPro Git book 日本語Git ユーザマニュアルgit(1) Manual PageGit User ManualReferenceGit コマンド全般のチートシートGit Cheat Sheat (PDF)Visual Git Cheat Sheetコンフリクトの解消とりあえずのGitメモ コンフリクトした時git checkout で error: Your local changes to the following files would be overwritten by checkoutと言われる解決方法git stash save -ugit stash listgit pullgit stash pop<file> を直前のコミットの状態に戻すにはget checkout -- 手元の修正を破棄するにはgit reset --hard HEAD; git push -fコミットの整理rebase -i でコミットをまとめるGit のさまざまなツール - 歴史の書き換え直近の4個を表示する場合git rebase -i HEAD~4コミットをまとめるgit push -fコミットをまとめるときに、vi コマンドで2行目から10行目までの pick を s に一括置換するには、:2,10s/pick/s/コミット取り消しワーキングツリー、インデックス、HEADを使いこなす方法直前のコミットを取り消しgit reset --hard HEAD^コミット後の変更を全部取り消しgit reset --hard HEAD任意の場所に戻るgit log戻りたい場所のハッシュをコピーgit reset --hard ハッシュ値リモートに反映git push -f直前のコミット変更だけならgit commit --amend削除したファイルの復元gitで削除してしまったファイルの復元ファイルの完全削除Git リポジトリに上がっているファイルを履歴ごと消すには？リモートリポジトリリモートの表示git remote -vURL を変えるgit remote set-url origin <リポジトリのURL>もろもろgit clean -ngit grep初期設定git config --global user.name  Katsutoshi Seki git config --global user.email sekika@users.noreply.github.com他の記事Office Open XML の git ファイル管理GitHub リポジトリに大量のファイルを一括登録する方法"},
{file:"/2017/05/01/katex-equation/",title:"KaTeX による数式の表示",mtime:1583090573,ctime:1493601474,body:"KaTeX による数式の表示 Jekyll 上での数式の表示では、MathJax による数式表示の設定を記した。最近はKaTeXという数式組版ライブラリが表示が速くて良いという話を聞くので、ためしてみることとした。生の KaTeX では、数式表示のためにkatex.render( c = \pm\sqrt{a^2 + b^2} , element);のような記法が必要となり、少し面倒。そこで、はてなブログで KaTeX を使うを参考に、jQueryを使って（もともと Bootstrap の JavaScript プラグインのために jQuery を読み込んでいる）[[ と ]] で囲まれた部分は display モード（独立した行で中央揃え）、$で囲まれた部分は非displayモード（行内の数式）で表示をするように設定することとする（$$だとうまく動かないので変えた）。やるべきことは、ヘッダ内に{% highlight html %}$(document).ready(function(){renderMathInElement(document.body,{delimiters: [{left:  [[ , right:  ]] , display: true},{left:  $ , right:  $ , display: false}]})});{% endhighlight %}を記述すれば良い。KaTeX 用のヘッダーを記述して、それを読み込ませるためのレイアウト katexを用意した。数式を使う記事には layout: katex と指定することで、必要な時にだけ KaTeX を読み込ませることができる。また、KaTeX のバージョンは katex-version というパラメータとして _config.yml で指定することとした。これで、GitHub Pages 上で KaTeX で数式を表示することができるようになったため、数式を多用する記事を書いても高速に表示されるはずである。LaTeX 書式の数式が KaTeX でどのように表示されるかをリアルタイムで確認するためには KaTeX プレビュアー を使うと便利である。リチャーズ式を表示してみる。[[ \frac{\partial \theta}{\partial t}= \frac{\partial}{\partial z}\left[ K(\theta) \left (\frac{\partial \psi}{\partial z} + 1 \right) \right] ]]この数式のソースコードは{% highlight tex %}[[ \frac{\partial \theta}{\partial t}= \frac{\partial}{\partial z}\left[ K(\theta) \left (\frac{\partial \psi}{\partial z} + 1 \right) \right] ]]{% endhighlight %}となっている。インラインでの表示は $ と $ で囲む。たとえば、半径 $ r $ の円の面積は $ \pi r^2 $ であり、球の体積は $ \frac{4}{3}\pi r^3 $ である。と表示するためには、半径 $ r $ の円の面積は $ \pi r^2 $ であり、球の体積は $ \frac{4}{3}\pi r^3 $ である。と書く。ついでにこのページの数式を MathJax から KaTeX に変えたところ、表示が若干軽くなった。（追記）KaTeX のテストがてら積と商の微分公式という記事を書いてみた。たしかに高速に表示される。[[ \begin{array}{rl} \biggl\{ \frac{1}{g(x)} \biggr\}^{\prime} &=& \lim_{h \to 0}\frac{\frac{1}{g(x+h)}-\frac{1}{g(x)}}{h} \cr\cr &=& \lim_{h \to 0}\frac{g(x)-g(x+h)}{g(x) g(x+h) h} \cr\cr  &=& -\frac{1}{ \bigl\{ g(x) \bigr\}^2} \lim_{h \to 0}\frac{g(x+h)-g(x)}{h} \cr\cr &=& -\frac{g^{\prime}(x)}{ \bigl\{g(x) \bigr\}^2} \end{array} ]]この数式のソースコードは{% highlight tex %}[[ \begin{array}{rl} \biggl\{ \frac{1}{g(x)} \biggr\}^{\prime} &=& \lim_{h \to 0}\frac{\frac{1}{g(x+h)}-\frac{1}{g(x)}}{h} \cr\cr &=& \lim_{h \to 0}\frac{g(x)-g(x+h)}{g(x) g(x+h) h} \cr\cr  &=& -\frac{1}{ \bigl\{ g(x) \bigr\}^2} \lim_{h \to 0}\frac{g(x+h)-g(x)}{h} \cr\cr &=& -\frac{g^{\prime}(x)}{ \bigl\{g(x) \bigr\}^2} \end{array} ]]{% endhighlight %}となっている。バックスラッシュは2個重ねる。重ねないでもうまくいくときもあれば、重ねないとだめなときもある。array 環境の上下間隔が標準ではつまりすぎるので、\\cr を2個重ねる。"},
{file:"/2016/03/26/GoogleAuthenticator/",title:"Google 認証システムの仕組み",mtime:1493848904,ctime:1458951965,body:"Google 認証システムの仕組み Google アカウントの2段階認証プロセスでは、Google 認証システムをモバイル端末にインストールして、QRコード（バーコード）を読み込ませることで、30秒ごとに変化する6桁の確認コードを生成することができる。通常のパスワード認証に加え、確認コードによる認証をすることで、セキュリティを高めている。Amazon, Microsoft, Facebook, Dropbox, GitHub 等多くのサービスで同じシステムが採用されている。この仕組みについて記す。概要Google 認証システムで採用されているRFC 6238の時間ベースのワンタイムパスワード (TOTP)は、サーバーとクライアントで共有する秘密鍵と現在時刻から、確認コードを計算するアルゴリズムである。Google  のサーバーがランダムに生成した80ビットの秘密鍵（シークレットキー）をQR コードあるいは16文字のBase32文字列（A-Z, 2-7）としてウェブブラウザに表示し、クライアント（モバイル端末にインストールしたGoogle 認証システムのアプリ）で読み取ることで、サーバーとクライアントに同じ秘密鍵が保存される。現在時刻は30秒ごとに値が変わるカウンターに変換されてから確認コードの6桁の数字が計算されてアプリに表示されるため、30秒間は同じ確認コードが表示される仕組みとなっている。なお、確認コードの計算アルゴリズムについては最後に記す。秘密鍵と確認コードある時刻においてカウンターがサーバーとクライアントで等しければ、サーバーとクライアントで秘密鍵を共有しているため同じ確認コードが計算されるはずであるから、サーバーとクライアントで確認コードの計算結果が一致するかどうかで認証ができるとするのが TOTP アルゴリズムである。ここで、サーバーとクライアントではそれぞれNTPのような仕組みによってある程度正確に現在時刻を得ることができるという前提であり、RFC 6238では通信のタイムラグと時刻のずれを調整するための仕組みを実装することが推奨されている。秘密鍵をモバイルアプリで読み込ませた端末を持っていなければ認証が成功しないことから、持っているものでアカウントを保護する仕組みであると説明される。端末を持っていなければ、漏洩した確認コードを知り得たとしても、30秒後にはその確認コードは無効となって認証が成功しなくなるためである。しかし、たとえば中間者攻撃によって素早く漏洩した確認コードが使われれば認証に成功してしまう。30秒間は何度でも同じ確認コードを使えるという意味ではワンタイムではない。サーバー側で最後に認証に成功した時のカウンターを記憶しておき、一致した時にはそのカウンターでは2回目は認証に成功させないようにすれば、真の意味でワンタイムになると考えられるが、RFC 6238ではそのような仕組みは提案されていないようである。秘密鍵が漏洩すれば任意の時刻における確認コードを生成できるため、秘密鍵は適切なアクセス権限を設定して保存する必要があり、できれば耐タンパー性のあるデバイスに保存することが望ましいとされている。TOTP に対応するサービスGoogle 認証システムを使ってTOTPの確認コードを生成できるサービスには、例えば次のようなサービスがある。このように多くのサービスで同じモバイルアプリを使用できることが、このシステムの利便性であろう。GoogleAmazonMicrosoftFacebookDropboxEvernoteGitHubWordPressSlackYahoo! Japan - 秘密鍵の読み込み方法に注意TOTP を計算するモバイルアプリTOTPをサポートするモバイルアプリには、例えば次のようなものがある。Gooogle 認証システム (Android, iPhone, BlackBerry) - ソースコードIIJ Smartkey (Android, iPhone)Duo Mobile (Android, iPhone)Token2 (Android, iPhone, Windows Phone)複数端末への秘密鍵の登録サーバーがQRコードを生成した時に、複数の端末でアプリから同じQRコードを読み込ませれば、同じ秘密鍵が登録されるため、どの端末からも同じ確認コードを生成できる。端末の紛失や故障、ソフトウェアの不具合によってモバイルアプリが起動できなくなった時のことを考えると、可能であれば2つ以上の端末に同じ秘密鍵を登録するのが望ましい。SMSや音声通話による2段階認証を設定する手段も有効である（端末を紛失しても電話番号の契約が継続していれば新しい端末で復活可能なため）。なお、すでにある端末に秘密鍵が登録されている時に、他の端末に同じ秘密鍵を登録することはできないため、すでに登録されている秘密鍵を無効にしてから、すべての端末に同じQRコードを新しく読み込み直す必要がある。IIJ SmartKey では、アプリに登録されている秘密鍵をQRコードでエクスポートできるので、設定をコピーすることができる。確認コードの計算アルゴリズムRFC 6238 のTOTPアルゴリズムは、サーバーとクライアントで共有する秘密鍵と、現在時刻から計算されるカウンターから、一意にトークン TOTP すなわち確認コードを計算するアルゴリズムであり、RFC 4226 のHOTP（HMAC ベースのワンタイムパスワード）に基づいている。具体的には次のように計算する。Kを秘密鍵、TCを現在時刻（UNIX時間）、Xを時間ステップ（秒）、T0をカウント開始時刻（UNIX時間）、Nをトークンの長さとする。また、ハッシュアルゴリズムを決める。デフォルトでは X=30, T0=0, N=6, ハッシュアルゴリズムは SHA-1 であり、Google 認証システムではこのデフォルトを使って計算をする。なお、HOTPでは秘密鍵は128ビット以上が必要で160ビットを推奨としているが、Google 認証システムでは80ビットである。T = floor((TC - T0) / X) により、時刻T0からの経過時間に応じたカウンター T を64ビットの符号なし整数型で得る。ここで、floor は床関数であり、Tを整数型としておけば通常は自動的にfloor関数が適用される。H = HMAC-SHA-1(K, T) により20バイトのハッシュ H を計算する。すなわち、HMAC-SHA-1 アルゴリズム (RFC 2104) によって秘密鍵KとメッセージTからハッシュHを計算する。下記の Truncate 関数を使い、TOTP = Truncate(H) として10進数N桁のトークン TOTP を計算する。ここで Truncate 関数は RFC 4226 に定められている20バイト文字列から10進数N桁のトークンを得る次のような関数である。20バイト、すなわち160ビット文字列 String = String[0]...String[19] から31ビット文字列を得るDT関数 DT(String) を次のように定義する。String[19] の下位4ビットを符号なし整数に変換して Offset を得る(0 <= OffSet <= 15)。次に、P = String[OffSet]...String[OffSet+3] とする。Pは32ビットとなり、最上位ビットを除いた31ビットを DT(String) とする。DT(String) を符号なし整数に変換した数字を Snum として、D = Snum mod 10^N を計算する。DはN桁以内の正の整数となる。DがN桁よりも少ない時には先頭に0を埋めて10進数N桁のトークンとしたものが、Truncate(String) である。"},
{file:"/2015/12/05/upgrade-el-capitan/",title:"El Capitan へのアップグレード",mtime:1449272272,ctime:1449272272,body:"El Capitan へのアップグレード Mac OS X を Yosemite から El Capitan へアップグレードインストールした時の手順を記録する。App Store のアップデートから、El Capitan へのアップグレードを開始する。ダウンロード、再起動してインストール。待つ。途中、Command-Lでインストールログを確認できる。App Store で、Xcode 最新版のインストールとソフトウェアのアップデート。Xcode のライセンスに合意。sudo xcodebuild -license/usr/local ディレクトリの所有者を一般ユーザーに変更。sudo chown -R $(whoami):admin /usr/local諸々のソフトをアップデートxcode-select --installsudo chown -R $(whoami):admin /Library/Rubybrew doctor（brew doctor になにか言われたら直す）brew updatebrew upgradebrew install rubyGemfile がある場合には、そのディレクトリに入ってからgem install bundlebundle installTeX のヒラギノフォント埋め込み設定El Capitan を使いながら気がついたこと拡張子の関連付けは再設定する必要あり。joinPDF が動かなくなった。公開も止まっているようだ。poppler の pdfunite を使う。"},
{file:"/2015/12/01/mac-tex/",title:"Mac で TeX / LaTeX",mtime:1564339589,ctime:1448919727,body:"Mac で TeX / LaTeX macOS で TeX / LaTeX を使えるようにするための手順を記す。MacTeX はあえて使わずに、TeX Live を直接入れる。独自のディレクトリ構成にならないので便利。詳しくは参考サイト参照。インストールヒラギノフォントの埋め込み設定確認メンテナンス参考サイト インストール/usr/local ディレクトリが存在しない場合には、あらかじめ作成しておく必要がある。 TeX Live から install-tl-unx.tar.gz をダウンロード、展開して install-tl-yyyymmdd ディレクトリ内で sudo ./install-tl を実行。TeX Live 2019 をインストールするときには、次のコマンドを実行して /usr/local/texlive/current で現在使用中の TeX Live の年次を指定できるようにする（2019 のところは年次にあわせて変える）。年次をアップデートするときにも、同様のコマンドでリンクを更新する。cd /usr/local/texlive; sudo ln -s 2019 currentパスを通すために、~/.bash_profile にこの行を追記。export PATH=$PATH:/usr/local/texlive/current/bin/x86_64-darwintlmgr の設定sudo tlmgr option repository http://mirror.ctan.org/systems/texlive/tlnetHomebrew で gs と poppler をインストール。poppler は pdffonts を使えるようにするため。brew install gs poppler ヒラギノフォントの埋め込み設定フォントとして頒布しない限り、macOSに付属するすべてのフォントが改変を加えないなら商用利用可能である。ヒラギノフォントを埋め込むためには、ヒラギノフォントパッチをインストールする。確認サンプル TeX ファイルのコンパイル、生成されたPDFファイルの確認とフォントのチェック。curl -sO https://gist.githubusercontent.com/sekika/34cad1547e92a62a4a1b/raw/sample.texplatex sample.texdvipdfmx sample.dviopen sample.pdf &pdffonts sample.pdfこのように emb の欄がすべて yes になっていれば、フォント埋め込みOK。確認後、rm sample.*  でファイルを消せる。 メンテナンスパッケージの更新sudo tlmgr update --self --allTeX Live のバージョン（年次）のメジャーアップグレードについては、2015から2016へのアップグレードは、TeX Live のページによれば、インフラが変わったので最初からやり直す必要がある。インストールの2番目（install-tl-unx.tar.gz のダウンロード、展開と sudo ./install-tl）と3番目（current リンクの更新）を実行すれば良い。2016から2017には、何もしなくても自動的にアップデートされる。ディレクトリ名は2016のままであるが、2017のリポジトリから最新バージョンにアップデートされる。2017から2018へのアップグレードは、新規インストールをするか、Tex Live のページに書かれている通りに sh update-tlmgr-latest.sh -- --upgrade を実行する。そして、商用フォントの設定方法が変わったため、ヒラギノフォントの埋め込み設定をする。2018から2019へのアップグレードは、新規インストールをするか、Tex Live のページに書かれている通りにsh update-tlmgr-latest.sh -- --upgrade を実行する。ちなみに、私の場合は次のような update というスクリプトを書いて、TeX Live, Homebrew, pip のアップデートをまとめてしている。ここで、pip-review の実行には pip install pip-review が必要。!/bin/shsudo tlmgr update --self --allbrew updatebrew upgradepip-review --auto 参考サイトTeX Live を使おう──Linux ユーザと Mac OS X ユーザのために── (Tamotsu Thomas UEDA)TeX Wiki (日本語TeX開発コミュニティ) - TeX Live/Mac, TeXとフォントTeX Alchemist Online (Yusuke Terada) - MacTeX 2019 のインストール＆日本語環境構築法"},
{file:"/2017/05/02/derivative/",title:"積と商の微分公式",mtime:1493667676,ctime:1493667676,body:"積と商の微分公式 積と商の微分公式を証明する。微分の定義[[ f^{\prime}(x) = \lim_{h \to 0}\frac{f(x+h)-f(x)}{h}  ]]を使う。積の微分公式[[ \bigl{ f(x)g(x) \bigr}^{\prime} = f^{\prime}(x)g(x)+f(x)g^{\prime}(x) ]]この公式を証明する。この式の左辺は[[ \bigl\{ f(x)g(x) \bigr\}^{\prime} =  \lim_{h \to 0}\frac{f(x+h)g(x+h)-f(x)g(x)}{h} ]]一方、右辺は[[ \begin{array}{rl} f^{\prime}(x)g(x)+f(x)g^{\prime}(x) &=& \lim_{h \to 0}\frac{ \bigl\{ f(x+h)-f(x) \bigr\} g(x+h)}{h} + \lim_{h \to 0}\frac{f(x) \bigr\{ g(x+h)-g(x) \bigr\} }{h} \cr\cr &=& \lim_{h \to 0}\frac{f(x+h)g(x+h)-f(x)g(x+h)+f(x)g(x+h)-f(x)g(x)}{h} \cr\cr &=& \lim_{h \to 0}\frac{f(x+h)g(x+h)-f(x)g(x)}{h} \end{array} ]]すなわち、左辺と右辺が一致するため、積の微分公式が証明された。商の微分公式(1)[[ \biggl{ \frac{1}{g(x)} \biggr}^{\prime} = -\frac{g^{\prime}(x)}{ \bigl{ g(x) \bigr}^2} ]]この式を証明する。[[ \begin{array}{rl} \biggl\{ \frac{1}{g(x)} \biggr\}^{\prime} &=& \lim_{h \to 0}\frac{\frac{1}{g(x+h)}-\frac{1}{g(x)}}{h} \cr\cr &=& \lim_{h \to 0}\frac{g(x)-g(x+h)}{g(x) g(x+h) h} \cr\cr  &=& -\frac{1}{ \bigl\{ g(x) \bigr\}^2} \lim_{h \to 0}\frac{g(x+h)-g(x)}{h} \cr\cr &=& -\frac{g^{\prime}(x)}{ \bigl\{g(x) \bigr\}^2} \end{array} ]]以上で証明された。商の微分公式(2)[[ \biggl{ \frac{f(x)}{g(x)} \biggr}^{\prime} = \frac{f^{\prime}(x)g(x)-f(x)g^{\prime}(x)}{ \bigl{ g(x) \bigr}^2} ]]$ \frac{f(x)}{g(x)} = f(x) \cdot \frac{1}{g(x)} $より、積の微分公式を適用する。[[ \begin{array}{rl} \biggl\{\frac{f(x)}{g(x)} \biggr\}^{\prime} &=&  f^{\prime}(x) \biggl\{ \frac{1}{g(x)} \biggr\} + f(x)\biggl\{ \frac{1}{g(x)} \biggr\}^{\prime} \cr\cr &=& \frac{f^{\prime}(x)}{g(x)} + f(x)\biggl[ -\frac{g^{\prime}(x)}{ \bigl\{ g(x) \bigr\}^2} \biggr]  \cr\cr &=& \frac{f^{\prime}(x)g(x)-f(x)g^{\prime}(x)}{ \bigl\{ g(x) \bigr\}^2} \end{array} ]]以上で証明された。"},
{file:"/2017/09/30/popular/",title:"よく読まれている記事 (2017年9月)",mtime:1506758209,ctime:1506758209,body:"よく読まれている記事 (2017年9月) 当サイトの記事で、どの記事がよく読まれているのかを調べてみました。Google Analytics によるアクセス統計で、2017年9月のページビュー数のトップ10を並べます。4月にはランクインしていなかった記事を (new) で示しています。ターミナルからファイルを開くMac で zip 圧縮するときの文字化け対処法Excel でデータの間引きWord の校閲者名を統一する方法Google 認証システムの仕組みExcel の計算における空白セルの処理 (new)EPSファイルの作成方法オフィスソフトの比較Mac のターミナルで日本語入力LaTeX の数式を Word に貼り付ける方法 (new)2017年9月の1ヶ月間で、総ページビュー数 7992、そのうちでトップ3の割合が48%でした。"},
{file:"/2015/11/19/special-lecture/",title:"「環境の科学」特別授業",mtime:1569554994,ctime:1447911277,body:"「環境の科学」特別授業 環境の科学の授業では、時々外部講師を招いて環境に関する話題の講演をしていただいています。これは、東洋大学経営学部産学共同推進特別教育講座として、社会で活躍するエキスパートを講師として招き、日頃の授業では聞けない社会経験談などを聞こうという企画です。このページでは、これまでの外部講師による授業についてまとめます。私の専門である土壌に関わる話が多くなっていますが、せっかくの機会なので、環境に関する話題についていろいろな分野の方の話を聞こうとしています。なお、開催場所はすべて東洋大学の白山キャンパスです。|日時 |講師所属 |講師氏名 |講演タイトル ||-----+---------+----------+---------------||2017年11月30日 |竹中工務店 | 小島倫直氏 | 建設業における緑化への取り組み ||2016年12月17日 |株式会社office 3.11 |井出留美氏 |食品ロスと食のキャリア形成（受講者239名のアンケートが公開された記事）||2015年11月14日 |株式会社ダイヤコンサルタント |前村庸之氏 |放射性廃棄物の処分に関する研究と調査 ||2014年11月15日 |EAインターナショナル |亀元宏宣氏 |ばく露しないで！身近にある危険なアスベスト||2012年11月6日 |EAインターナショナル |亀元宏宣氏 |土壌・地下水汚染の調査と対策ー 環境コンサルタントの役割 ー||2011年11月14日 | 一般財団法人日本気象協会 |叶木律子氏 |天気予報を活用した環境問題への取り組み||2009年11月24日 |いであ株式会社 |島田克也氏 |資源リサイクルと地球温暖化対策を目指して－製鋼スラグを利用した藻場造成によるCO2固定の取組み－|"},
{file:"/2015/11/04/energy-policy/",title:"エネルギー政策と原子力発電",mtime:1541307376,ctime:1446608346,body:"エネルギー政策と原子力発電 エネルギー政策と原子力発電について、特に福島第一原子力発電事故の前後でどのように変わってきたかを中心に年表をまとめる。|---|年次 | できごと |説明|---|2002年 |「エネルギー政策基本法」制定 | 第十二条 　政府は、エネルギーの需給に関する施策の長期的、総合的かつ計画的な推進を図るため、エネルギーの需給に関する基本的な計画（以下「エネルギー基本計画」という。）を定めなければならない。|2003年 |第1次エネルギー基本計画閣議決定 |原子力発電については、安全確保を大前提として、今後とも基幹電源と位置付け推進する。核燃料サイクルを推進する。|2007年 |第2次エネルギー基本計画閣議決定 | 2003年と同様の方針をより詳しく。|2010年 |第3次エネルギー基本計画閣議決定 | ゼロエミッション電源（原子力発電＋再生可能エネルギー）の電源比率を、2010年の34%から、2020年50%、2030年70%へと引き上げる。その中で、再生可能エネルギーは2020年に10%とする（つまり、原子力を40%に上げる）。原子力発電は、2008年の時点で54基稼働し、設備利用率60%であった。これを、2020年までに9基増設して、設備利用率を85%とし、2030年までに14基増設して設備利用率90%とする。|2011年 | 福島第一原子力発電事故 | 3月11日。「原子力発電では炉心溶融のような苛酷事故は決して起きない」という原子力安全神話が崩壊した。|2011年 | エネルギー白書2011 (概要) | 10月28日。これまでのエネルギー政策を反省し、聖域なく見直す。エネルギー基本計画もゼロベースで見直す必要。原子力発電については、中長期的に依存度を可能な限り引き下げていくという方向性を目指すとともに、省エネルギーの徹底的な推進、再生可能エネルギーの開発・普及の強力な推進が重要。|2012年| 国内の原発がすべて停止。 | 5月5日。北海道電力泊原発3号機を定期点検のため停止したことによる。|2013年| 原子力発電所の新規制基準施行 | 7月8日。原子力規制委員会による。シビアアクシデントやテロを防止するための基準を新しく策定。|2014年|第4次エネルギー基本計画閣議決定 | 原子力発電は重要なベースロード電源。ただし、原子力発電への依存度は省エネルギー・再生可能エネルギーの導入や火力発電所の効率化などにより、可能な限り低減させる。電源構成のベストミックスの目標を出来る限り早く決定する。|2015年|電源構成の経済産業省案 | 6月1日。総合資源エネルギー調査会（経済産業相の諮問機関）の小委員会。2030年に原子力20〜22%、再生可能エネルギー22～24％とする。参考意見は下記。|2015年|川内原発１号機再稼働 | 8月11日。2013年に新規制基準が導入されてから、原発の再稼働は初めて。|2018年|第5次エネルギー基本計画閣議決定 | 2030年に温室効果ガス26%削減、2050年に80%削減を目指す。2030年度には再生可能エネルギーと原子力の合計のゼロエミッション比率を44％程度とすることを見込む。資源確保の推進、徹底した省エネルギー社会の実現、再生可能エネルギーの主力電源化に向けた取組、原子力政策の再構築等を進める。2015年6月1日の電源構成の経済産業省案に対する参考意見：視点・論点　「電源構成割合の問題点」 (橘川武郎, NHK, 2015/5/22)によると、2012年の原子炉等規制法の改正による「40年運転停止原則」が効力を発揮すると、2030年における原発依存度は15％前後となる。政府案の「20～22％」という数値は、原子力発電所の「60年運転」への例外的な運転期間延長か新増設かを前提としていることになる。2030 年の日本の電源構成見通し：より多くのガスと太陽光発電の導入は可能 (PDF) (Bloomberg Finance, 2015/6/2) によると、原子力発電の占める割合を20%から22%とするためには、少なくとも13基の原子炉の運転期間制限年数40年を延長しなければならないこととなる。"},
{file:"/2015/10/09/tag-jekyll/",title:"GitHub Pages の Jekyll でカテゴリ / タグの作成",mtime:1444316400,ctime:1444316400,body:"GitHub Pages の Jekyll でカテゴリ / タグの作成 Jekyll には様々なプラグインがあり、プラグインを使うとカテゴリやタグを管理できる。しかし、GitHub Pages では、プラグインを使えないので、ローカルで jekyll を動かしてアップする、というちょっと面倒なことをする必要があるとのこと。ところが、このページ によれば、プラグインを使わなくてもカテゴリやタグを使うことができるらしい。というわけで、タグが使えるか試してみる。タグが使えるようになったようだ。タグを入れる前に、Bootstrap と Flatly のテーマを入れてみた。それから、_layouts/tagpage.html, tags/jekyll/index.htmlを上記のページの通りに書いて、tags/index.htmlを書いたら動いた。"},
{file:"/2015/11/20/powerpoint-link/",title:"PowerPoint 参考サイト",mtime:1455148342,ctime:1447952658,body:"PowerPoint 参考サイト Microsoft PowerPoint の使い方について解説しているサイトへのリンクです。Windows 版PowerPoint 2013の使い方まとめ (できるネット)Office 2013 トレーニングビデオ (Microsoft)パワーポイントの使い方 2010入門基本PowerPoint 動画マニュアルMac 版PowerPoint for Mac 2011 の学習ロードマップ関連記事Word 参考サイトExcel 参考サイトオフィスソフトの比較見やすいプレゼン資料の作り方 - リニューアル増量版 (森重 湧太)"},
{file:"/2020/01/17/15Puzzle/",title:"15パズル",mtime:1579235088,ctime:1579235088,body:"15パズル このブラウザはCanvasに対応していません。jaNew駒をクリックまたはタップしてスライドさせます。目的の配置を目指します。New ボタンで新しいゲームが始まります。同じ初期配置からやり直すことができます。駒の大きさと色を変えることができます。24パズル、35パズルのように大きくすることができます。8パズルのように小さくすることもできます。設定はブラウザのローカルストレージに保存されます。一度読み込めばオフラインでも遊べます。English version is available."},
{file:"/2015/12/08/joho-d-link/",title:"「情報処理実習D」参考サイト",mtime:1537983433,ctime:1449524057,body:"「情報処理実習D」参考サイト 「情報処理実習D」の授業で参考にするサイトへのリンクです。講義全般情報処理実習D: 講義情報受講者専用ページ (東洋大学外からはアクセス不可)ToyoNet 情報関連ポータルプログラミング教育プログラミング教育 (文部科学省)坂村健の目 プログラミング教育急げ (毎日新聞, 2016年1月21日)プログラミング言語プログラミング言語の比較 (Wikipedia)2017年の人気プログラム言語１０選を徹底比較！気になる年収や求人、学習難易度まで (トイロハ)2017年、人気のプログラミング言語トップはPython。C、Javaが続く。 (Publickey, 2017年7月23日)オンライン実行環境paiza.ioideone.comJava 言語の基礎Java SE Downloads初心者のためのJava講座JDKのダウンロードとインストールOracle Java SE サポート・ロードマップJava 11正式版がリリース、本バージョンからOracle JDKのサポートは有償に。OpenJDKで無償の長期サポート提供は現時点で期待薄 (Publickey, 2018年9月26日)オラクルによるOpenJDKのビルドWikipedia - ボディマス指数アルゴリズムフローチャートの書き方  (三日市康博, 丸山博)Wikipedia - ソートQuick-sort with Hungarian (Küküllőmenti legényes) folk dance (YouTube)ハノイの塔 (JavaScript)ハノイの塔 (Flash)高精度計算サイト"},
{file:"/2020/04/12/johoA-media/",title:"オンライン学習環境について",mtime:1586655478,ctime:1586655478,body:"オンライン学習環境について 東洋大学経営学部の情報処理実習Aは、例年はPC教室で実施していますが、今学期は自宅からのオンライン学習となります。授業の内容は、PCを使って Microsoft Office (Word, Excel, PowerPoint) の使い方を学ぶというものです。そのため、受講には自宅で Microsoft Office を使うことができる環境が必須です。私が実施する他の授業では、スマホのみでも履修可能となるように工夫をする予定ですが、以下の環境を整えておく方がはるかに学習効率は高いものと思います。そのことは、本来であればシラバス（ToyoNet-G）を書き換えて対応するべきところですが、現状ではそれができないため、ToyoNet-ACEに以下の情報を書き込みました。ToyoNet-Gで履修登録をした翌日には ToyoNet-ACE で確認できるようになりますが、学生は履修登録する前に読むことができないため、このページにも公開情報として記しておきます。なお、オンライン授業の準備に関しては、近いうちに大学から ToyoNet-G などを通して公式に案内があると思いますが、全体的に学生への情報提供が遅いように感じるため、あえてこのように教員個人から情報提供をするものです。ToyoNet-Gからの案内を見落とさないようにお願いします。情報処理実習Aの履修に必要な環境パソコン (Windows または Mac)：授業は Windows のPCを使って実施するので、Windows のPCがある方が便利ですが、Mac でも Mac 版の Office をインストールすれば受講可能です。その場合は、授業動画で解説する操作手順とは異なります。Microsoft Office: 東洋大学の学生は、パソコン（Windows または Mac）およびタブレットとスマホに、Office365 education をインストールして使うことができます。これからPCを購入する人は、プレインストールモデルを買う必要はありません。詳しくは、https://www.toyo.ac.jp/ja-JP/toyonet/information/software/ を参照してください。インターネット回線: 授業動画の視聴はスマホの画面では小さすぎるので、パソコンからネットに接続することが必要です。課題ファイルを提出するときにも、パソコンがネットに接続されている必要があります。自宅に固定回線がない場合には、モバイルWifiを契約することで、パソコンからインターネットに接続することができます。スマホからのテザリングで接続できる場合もありますが、通信量には注意してください。大学ではレポート作成、プレゼンテーションなどパソコンを使うことが多く、また授業で配信される資料や提供される動画を閲覧するときには、スマホの小さな画面では不自由です。この授業を履修するためだけではなく、パソコンを所持することは大学生の学習環境にとって必須です。この機会に、ぜひ学習環境を整えてください。情報処理実習Aの授業の進め方授業の進め方については、ToyoNet-ACEでこれから案内する予定ですが、次のような流れを考えています。テキストは例年通りのPDFファイルを使う。授業は動画で提供する。期限内に動画を視聴し、ToyoNet-ACEに課題を提出する。課題の提出をもって出席とする。例年通りに課題の提出をもって成績評価する。質問は、ToyoNet-ACE の掲示板および授業中の質問時間に Webex Meetings を使ってチャット（テキスト）または音声によって受け付ける。"},
{file:"/2019/07/01/derivative-chain/",title:"合成関数の微分",mtime:1561927785,ctime:1561927785,body:"合成関数の微分 合成関数の微分の簡略化された説明と正確な証明についてまとめる。y が u の関数 $f(u)$ であらわされ u が x の関数 $g(x)$ であらわされるとき、合成関数 $ f \circ g $ を[[ y=(f \circ g)(x)=f(g(x)) ]]と書くことができる。たとえば、$y=\log(u)$ で $u=x+2$ のとき、$f(u)=\log(u), g(x)=x+2$ であるから[[ y=f(g(x))=f(x+2)=\log(x+2) ]]となる。f と g が微分可能であれば[[ (f \circ g)^{\prime}(x) = f'(g(x)) g^{\prime}(x) ]]が成り立つ。すなわち[[ \frac {dy}{dx} = \frac {dy} {du} \cdot \frac {du}{dx} ]]となる。これが「合成関数の微分公式」すなわち微分法における連鎖律である。この式は、dx, du, dy がそれぞれ「ある数」であるとみなせば、成り立つのが当然であるように見える。そして、実際にそのように簡略化して説明されることも多いだろう。簡略化された説明$y=f(x)$ について、xとyの有限微小変化量をそれぞれ Δx と Δy として、Δx → 0 の極限としての無限小変化量を dx と dy とすることで、[[ \frac{dy}{dx}  = \lim_{\Delta x\rightarrow 0}\frac{\Delta y}{\Delta x} ]]のように導関数が定義される。ここで、Δx に対する $u=g(x)$ の変化量を Δu として、Δu に対する $y=f(u)$ の変化量を Δy とすれば、Δx を定めれば Δu と Δy が順次定まる。そして、$ \Delta x \ne 0, \Delta u \ne 0 $ のとき[[ \frac{\Delta y}{\Delta x}  = \frac{\Delta y}{\Delta u} \cdot \frac{\Delta u}{\Delta x} ]]が成立する。これは、Δx, Δu, Δy がそれぞれ「ある数」であることから明らかである。$u=g(x)$ が微分可能、つまり連続関数であることから、Δx → 0 とすると Δu → 0 となる。したがって、上式で Δx → 0 の極限を取ると[[ \lim_{\Delta x\rightarrow 0}\frac{\Delta y}{\Delta x}  = \lim_{\Delta x\rightarrow 0}\left( \frac{\Delta y}{\Delta u} \cdot \frac{\Delta u}{\Delta x} \right) = \lim_{\Delta u\rightarrow 0}\frac{\Delta y}{\Delta u} \cdot \lim_{\Delta x\rightarrow 0} \frac{\Delta u}{\Delta x} ]]となることから、[[ \frac {dy}{dx} = \frac {dy} {du} \cdot \frac {du}{dx} ]]が導かれる。以上の説明は Wikipedia の連鎖律では「間違った証明」であるとされている。なぜ間違っているとされているのかといえば、上記の説明の中で$ \Delta x \ne 0, \Delta u \ne 0 $としているが、$ \Delta x \ne 0 $ であっても $ \Delta u \ne 0 $ であるとは限らないためである。実際に $g(x)$ が定数関数であればそうなるし、定数関数ではなくても、微分可能な関数 $g(x)$ のある x において、任意の $\epsilon>0$ に対して $ 0 < \| \Delta x \| < \epsilon, \Delta u = 0 $ となるような Δx が存在するようなものを考えることは可能である。ただし、高校の数学の授業でそのような関数を扱うことはまずないであろう。とはいえ、高校の数学では連続関数や微分可能性のε-δ 論法による厳密な定義までは学習しないことから、高校生に教えるときにそこまでの厳密性がないことをもって「間違った証明である」とするのも、かえって混乱させてしまう可能性もある。正確な説明は無理だから「dx, du, dy はそれぞれが数であるかのごとく分数のように計算できるけど、なぜそうなのかは考えなくてもいいよ」としてしまうのも一つの方法ではあるが、そこまでブラックボックスにしてしまうのも味気ない。やはり「理由があってそうなっている」ということは伝えたいとすれば、このような簡略化された説明は認められても良いと考える。実際になかけんの数学ノートには、合成関数の微分がなぜ成り立つかは、上のように、定義の式から出発し、2つの積に分解して考える、という方法で示すのが一般的で、教科書にも上のような説明が書かれています。ただ、細かな話をすると、途中の式の分母に出てくる「$f(x+h)-f(x)$」は0になってしまう可能性があり、上の説明は、厳密には正しくありません。と書かれていて、高校の教科書でも簡略化された説明がなされているようである。正確さを期すのであれば「これはあまり正確な証明ではないけれど、正確な証明は大学で勉強してね」とするのが妥協点であろうか。ここでは「証明」とまでは言えないことから「簡略化された説明」とした。正確な証明上記の簡略化された説明を修正して正しい証明とする方法として、Wikipedia の連鎖律では関数 Q を導入している。この証明方法よりは、合成関数の微分の証明（怜悧玲瓏）に書かれているように、Δuによる割り算を避けて証明する方が簡明であると感じる（やっていることは本質的に同じではあるが）。少しだけ書き直す。$ u=g(x) $ において、x の増分 Δx に対する u の増分を Δu$ y=f(x) $ において、x の増分 Δu に対する y の増分を Δyとする。ある x における $ \Delta x \ne 0$ に対する $\epsilon_1$ を[[ \Delta u = [g^{\prime}(x) + \epsilon_1] \Delta x]]によって定めると、[[ \epsilon_1 = \frac{\Delta u}{\Delta x} - g^{\prime}(x) ]]であり、$ g^{\prime}(x) = \lim_{\Delta x\rightarrow 0}\frac{\Delta u}{\Delta x} $ より Δx → 0 のとき $ \epsilon_1 \rightarrow 0$ かつ Δu → 0 である。次に、ある u における Δu に対する $\epsilon_2$ を[[ \begin{array}{rl} \Delta y &=& [ f^{\prime}(u) + \epsilon_2 ] \Delta u ~ (\text{ただし、} \Delta u＝0 \text{のとき} \epsilon_2 = 0 ) \cr\cr &=& [ f^{\prime}(u) + \epsilon_2 ] [g^{\prime}(x) + \epsilon_1] \Delta x ~ (\text{上の式を代入}) \end{array} ]]によって定めると、Δu → 0 のとき $ \epsilon_2 \rightarrow 0$ である。そして、 Δx → 0 のとき Δu → 0 であるから $ \epsilon_2 \rightarrow 0$ である。したがって、[[ \begin{array}{rl} \frac {dy}{dx} &=& \lim_{\Delta x\rightarrow 0}\frac{\Delta y}{\Delta x} \cr\cr &=& \lim_{\Delta x\rightarrow 0} [ f^{\prime}(u) + \epsilon_2 ] [g^{\prime}(x) + \epsilon_1] \cr\cr &=& f^{\prime}(u)g^{\prime}(x) \cr\cr &=& \frac {dy} {du} \cdot \frac {du}{dx} \end{array} ]]となり、合成関数の微分公式が導かれた。Δy の式において「$\Delta u＝0$ のとき $\epsilon_2 = 0$」としているところがミソである。"},
{file:"/2016/03/25/MacZip/",title:"macOS で zip 圧縮・展開するときの文字化け対処法",mtime:1577419433,ctime:1458874000,body:"macOS で zip 圧縮・展開するときの文字化け対処法 macOS の標準機能で zip ファイルを作成すると、ファイル名が UTF-8 でエンコードされる。一方、Windows では日本語のファイル名を Shift-JIS でエンコードする。そのため、日本語を含むzipファイルをやりとりするときに文字化けのトラブルが生じることがある。その対処方法を記す。macOS で Shift-JIS の zip ファイルを作成する以下が、Mac で Shift-JIS ファイル名で圧縮するソフトである。.DS_StoreをはじめとするMac特有のファイルを自動的に除外する機能が付いている。WinArchiver Lite （無料版） / WinArchiver  （有料版）MacZip4Win macOS で Shift-JIS の zip ファイルを展開するmacOS では標準のアーカイバで文字コードを自動的に判別して展開するので、対策不要である。ところが、Shift-JIS のファイル名を含むファイルを展開するときに、標準のアーカイバでエラーが生じることがあった（macOS 10.15.2 Catalina）。何種類かのソフトを試したところ、ファイル名の文字コードを変換してくれない場合が多かったが、次のソフトで問題なく文字コードを変換して展開できた。The Unarchiverなお、zip ファイルに関連づけられているアプリケーションを変更するには、zipファイルを右クリックして「情報を見る」を選び「このアプリケーションで開く」から目的とするアプリケーションを選択して、「すべてを変更」ボタンをクリックする。The Unarchiver は unar というコマンドとしてターミナルから実行することもできる。Homebrew をインストールしてから brew install unar で unar をインストールすることができる。Windows で UTF-8 の zip ファイルを展開するWindows 7 では修正プログラムを適用する。Windows 8 からは UTF-8 の圧縮ファイルをそのまま展開できるようになっているようである。その他の環境の場合Explzh等のフリーソフトを使う。今後、Windows 8 以降のシェアが増えるにつれて、ファイル名文字化けのトラブルは減少するであろうと考えられる。参考サイト日本語を含むZIPファイルを文字化けせず解凍する方法 (Qiita, 2014/3/9)MacでWindows向けに作成したZIPファイルの文字化けを解消するアプリWinArchiver (HepHep!, 2015/4/25)MacWinZipper (WinArchiver) (Tida)MacでWindowsと互換性のあるzipファイルを作る方法【文字化けなし】 (Naver まとめ, 2012/9/7)"},
{file:"/2015/11/22/strasbourg/",title:"ストラスブールの写真",mtime:1448157376,ctime:1448157376,body:"ストラスブールの写真 2013年度に、1年間フランスのストラスブールに滞在しました。その前後にも、何度かストラスブールを訪問しています。ストラスブールで撮影した写真は1万枚を越えますが、その中から選んだ写真をこちらにまとめました。ストラスブールの写真アルバムその中で、いくつかの写真を以下に貼ります。写真をクリックすると、拡大写真と撮影時間、撮影場所の地図が表示されます。写真：クリスマースマーケット写真：グーテンベルク広場のカルーセルとグーテンベルク像写真：プティットフランス写真：大聖堂のイルミネーション（動画）写真：大聖堂の上から眺めるストラスブールの景色写真：欧州議会会議場写真：Auchan というスーパの近くで撮影した虹と、Auchan の裏にあるバガゼー池、その近くでストラスブール号に載るくじゃく写真：ストラスブール大学の Geology 棟と1年間研究をした机写真：アルザスワイン写真：タルト・フランベとシュークルートとベッコフ写真：広場でペタンクをする人達写真：現代美術館にある像"},
{file:"/2019/09/13/pc-trouble/",title:"東洋大学PC教室におけるトラブル解消法",mtime:1568304114,ctime:1568304114,body:"東洋大学PC教室におけるトラブル解消法 東洋大学PC教室におけるトラブル解消法です。前の人がログオフしていなかったため、画面がパスワードロックされている本体の電源を長押しして電源を切ってから、電源を入れて起動する。なお、PC教室から離れるときには必ずログオフすること。パスワードが分からない「情報システム利用通知書」で確認可能。通知書は学生証があれば証明書発行機で再発行可能。パスワードは統合ID・パスワードについてに記されている通り各自責任を持って利用、管理すること。パスワードはあっているはずだけれどログインできないログオン先が「EDU」になっていることを確認する。Caps Lock （アルファベットの入力をすべて大文字に固定する機能）機能がオンオンになっていたら、[Shift]キーを押しながら「Caps Lock」キーを押してオフにする。日本語入力が使えないときどき、日本語入力(MS-IME)が使えなくなっていることがある。そのときには、次のように設定をする。スタートコントロールパネル地域と言語「キーボードと言語」タブの「キーボードの変更」ボタン「全般」タブの「インストールされているサービス」で「追加」ボタン日本語（キーボード）で Microsoft IME をチェックしてOKOKボタン右下に Microsoft IME のツールバーが出てくる「かな入力」になってしまった予期せずに「ローマ字入力」が「かな入力」に切り替わってしまった場合には［Alt］+［カタカナ/ひらがな］で切り替える。（参考：「ローマ字入力」と「かな入力」の切替方法）その他東洋大学情報サービスのよくある質問一覧を参照。"},
{file:"/2015/10/28/win10-virtualbox/",title:"VirtualBox への Windows 10 のアップグレードインストール",mtime:1446007687,ctime:1446007687,body:"VirtualBox への Windows 10 のアップグレードインストール VirtualBox 上で、Windows 7 から Windows 10 へアップグレードした。ホストOSは、Mac OS X。OSバージョンの設定まずは、OS タイプのバージョンを Windows 10 に設定した。VirtualBox での新規仮想マシンの作成 より図 6.6 に示すように、VM 名および OS タイプの手順で、仮想マシンのわかりやすい名前を「名前」フィールドに入力し、インストールしようとしているオペレーティングシステムとバージョンをドロップダウンリストから選択します。これによって VirtualBox が仮想マシンに使用するデフォルト設定が決まるため、正しいオペレーティングシステムとバージョンを選択することが重要です。最初は、仮想マシンの OS タイプのバージョンに、Windows 10 が表示されなかったので、VirtualBox を最新版 (5.0.8) にアップデートしてから設定した。ディスク容量の拡張Windows 7 で確保していたディスク容量が、Windows 10 をインストールするには少なかったので、仮想ディスク容量を拡張した。可変サイズの VDI 形式で仮装ディスクを作成していたので、次の手順で拡張できた。VirtualBoxにおける仮想マシンの仮想ディスク容量を拡張するための手順まず、ホストOSで VBoxManage コマンドを実行して、ディスク容量を拡張する。~VBoxManage modifyhd 拡張したい仮想マシンの仮想ディスクのパス —-resize 拡張後のディスク容量~これだけでは、仮想マシンで拡張された分のディスクを使用できる状態にないので、仮想マシン側でディスクを拡張する。Windows 7 を起動して C ドライブの拡張を試みたが（システムとセキュリティー > 管理ツール > コンピューターの管理 > ディスクの管理 > Cドライブを右クリックして「ボリュームの拡張」[参考](http://tech.ewdev.info/2014/10/2140/)）、Cドライブは起動ディスクなので、拡張できなかった。そこで、上記サイトに書かれているように、Linux で起動して、gparted でパーティションを編集した。LiveCD から起動しても良いが、すでに Debian をインストールした仮想ディスク環境があったので、そこから起動した。Debian 環境の SATA ドライブに Windows のディスクを追加して起動gparted で Cドライブに相当する /dev/sdb2 を拡大して、シャットダウンDebian 環境からは Windows のディスクを削除Windows 7 を起動チェックディスクが立ち上がる再起動、無事にCドライブが拡張されたWindows 10 へのアップグレード「Windows 10 を入手する」アプリからのアップグレードを試みた。「Windows 10を入手する」アプリは表示されましたかしかし、「Windows 10 を入手する」アプリを起動すると、VirtualBox Graphics Adapter が Windows 10 に対応していないから Windows 10 を入手できないと言われてしまう。その件について、いくつかのサイトを検索した。VirtualBoxでWindows 10アップデートHow to get VirtualBox video driver working in Windows 10 build 10041Windows 10 inside VirtualBox not scaling after upgrade from 8.1VirtualBox Graphics Adapter を削除する方法はうまくいかなかったので、手動インストールすることとし、Windows 10 のディスクイメージをダウンロードした。Windows 10 のディスク イメージ (ISO ファイル) のダウンロードファイルサイズは、32 bit 版は 2.9 GB、64 bit 版は 3.9 GB とけっこう大きく、時間がかかった。ダウンロードが終わり、Windows 7 を起動して、DVDドライブに Windows 10 のディスクイメージをマウントして、setup.exe を実行したら、アップグレードできた。Windows 10 にアップグレードした直後の使用ディスク容量は 33.7 GBだった。Microsoft Office Professional 2013 がインストールされ、他にもいくつかのプログラムとデータが入っている状態で、ルートディレクトリの下は、ユーザー 1.55 GB、Program Files 2.79 GB、cygwin 1.33 GB、Windows 9.40 GB、Windows.old 14.5 GB。"},
{file:"/2015/10/19/office-open-xml-git/",title:"Office Open XML の git ファイル管理",mtime:1445227273,ctime:1445227273,body:"Office Open XML の git ファイル管理 git diff で Office ファイルの差分を見る に書かれている Apache Tika を使う方法で、docx, xmlx, pptx ファイルを差分管理できる。やってみたところ、たしかに git log -p で差分が表示された。これは便利。Mac の場合の手順について、上記サイトに書かれている通りのことをこちらにもメモ。~brew install tika~以下のようなスクリプト unopnexml を置く。~!/bin/shtika -t  $1 ~~/.gitconfig を編集~[diff  openxml ]textconv = unopenxml # フルパスで書く~レポジトリに .gitattributes を追加。~*.pptx diff=openxml*.docx diff=openxml*.xlsx diff=openxml~"},
{file:"/2015/11/02/blank-cell/",title:"Excel の計算における空白セルの処理",mtime:1446436885,ctime:1446436885,body:"Excel の計算における空白セルの処理 Excel で計算式を書く時に、空白セルがある時の処理のしかたについて。空白セルがあるときに計算結果を表示しない、という場合には、IF関数を使って =IF(A2=  ,  ,計算式) のように書く（A2 セルが空白セルかどうかを判定する場合）。詳しい解説はこちら。第三回　「IF関数」の空白処理を知らないとExcelの便利さ半減！？次に、空白セルを 0 であるとして計算したい場合について。空白セルを参照した計算式を書けば、空白セルの値が0であるとして計算がされる。VALUE関数を使えば、文字列は数値に変換され、空白セルは0に変換される。空白文字が入っている時や、計算式の途中でNULL値が返ってきたときなど、1の方法でうまくいかなかった時に使える。データ内の空白セルを一括で選択して「0」を入れる方法と、その逆については、ここで解説されている。Excelワザ　空白セル　⇔　「０」"},
{file:"/2015/10/23/excel-absolute-reference/",title:"相対参照と絶対参照",mtime:1445530960,ctime:1445530960,body:"相対参照と絶対参照 Excel の相対参照と絶対参照について、授業で使っている説明資料をこちらにコピーしておきます。計算式でセルを参照する方式には、セルの位置を入力セルとの相対的な位置関係で指定する相対参照と、セルの位置を絶対的な位置で指定する絶対参照の二種類がある。セルの位置をアルファベットと数字で指定すると、相対参照になる。つまり、D5セルでB5と入力した場合には、B5という位置を絶対的に指定したのではなく、D5から左へ２つ移動したセルを相対的に指定したものと考える。したがって、数式をコピーすると参照セルも一緒に移動する。参照セルを移動させずに固定したい場合は、絶対参照を用いる。絶対参照は、参照セルの、固定させたい行または列の前に$を指定する。たとえば、B5というセルの指定方法には、以下の4パターンがある。B5: B5セルを相対参照$B$5: B5セルを絶対参照B$5: B列を相対参照、5行を絶対参照$B5: B列を絶対参照、5行を相対参照ファンクションキーのF4で、相対参照と絶対参照（3パターン）を指定できる。たとえば、計算式で「=B5」と指定した状態で、F4キーを1回押すと$B$5に、もう1回押すとB$5に、と順番に変わる。理屈だけでは分かりにくいので、実例で学習する。このような九九の表を作ってみる。まずは、B1-J1, A2-A10のセルに数字を入力する。次に、B2のセルに、=B$1*$A2 と入力して、右にオートフィル機能で連続コピーする。その後、B2からJ2を選択した状態で、10列目まで連続コピーすることで完成する。このとき、以下の表のような式が入力されている。$がついている$1と$Aはコピーしても変化せず、$がついていないBと2はそれぞれの方向にコピーすることで変化することが分かる。このように、$をつけることによって絶対参照となり、つけないことで相対参照となる。"},
{file:"/2020/01/14/15Puzzle/",title:"15 Puzzle",mtime:1578989348,ctime:1578989348,body:"15 Puzzle This browzer does not support canvas.enNewClick or tap a tile to slide.The puzzle is completed when tiles are in this arrangement. New  button shuffles tiles and starts a new puzzle.You can restart the puzzle with the same arrangement.The size and<button onclick= board.changeMode() >color</button> of the tiles can be changed.You can increase the size of the puzzle to 24 Puzzle for example.You can also decrease the size of the puzzle to 8 Puzzles.The settings are saved at local storage of this browzer.Once loaded, the puzzle can be solved offline.日本語版もあります。"},
{file:"/2015/10/29/linear-trend-estimation/",title:"株価時系列データからの線形回帰トレンド作成",mtime:1446092188,ctime:1446092188,body:"株価時系列データからの線形回帰トレンド作成 株価の時系列データを分析し予測するテクニカル分析の手法の中で、過去の株価の時系列データだけを分析する手法には、いくつかの手法がある。その中で、ある一定期間の株価を線形で回帰分析する線形回帰トレンドを Excel で計算する。以下の資料の線形回帰トレンドに示されているExcelによる計算方法を利用して、株価時系列データから線形回帰トレンドの図を作成した。Excelによる経済・経営分野の情報処理IV」ー株価のテクニカル分析ー (和歌山大学経済学部　牧野真也)これが、その Excel ファイルである。株価分析 Excel ファイル使い方は、Yahoo! ファイナンス 株式 から、解析する銘柄の株価時系列データを取得する。株価時系列データをクリップボードにコピーして、水色のセルに貼り付ける。必要に応じて、縦軸の最小値と最大値を調整する。このようにすると、75日線形回帰と25日線形回帰が表示される。アップルインターナショナルの2015年10月28日までの株価データを使うと、このようなグラフが作成できる。実線が最小２乗法による線形回帰式の直線であり、上下の破線は回帰式±標準誤差と回帰式±２×標準誤差を示している。"},
{file:"/2017/05/04/popular/",title:"よく読まれている記事 (2017年4月)",mtime:1493839514,ctime:1493839514,body:"よく読まれている記事 (2017年4月) 当サイトの記事で、どの記事がよく読まれているのかを調べてみました。Google Analytics によるアクセス統計で、2017年4月のページビュー数のトップ10を並べます。ターミナルからファイルを開くMac で zip 圧縮するときの文字化け対処法Excel でデータの間引きWord の校閲者名を統一する方法Mac のターミナルで日本語入力Google 認証システムの仕組みオフィスソフトの比較EPSファイルの作成方法Uploading many files to GitHub repositoryGitHub リポジトリに大量のファイルを一括登録する方法2017年4月の1ヶ月間で、総ページビュー数 5974、そのうちでトップ3の割合が49%でした。時々同様のチェックをして、どのページがよく読まれているかを見ようと思います。自分用メモ：レポート、行動、サイトコンテンツ、すべてのページにある。"},
{file:"/2015/12/06/uninstall-flash-player/",title:"Flash Player のアンインストール",mtime:1449355018,ctime:1449355018,body:"Flash Player のアンインストール アドビ自らFlashに白旗宣言…。HTML5への移行を推奨という記事が出ている。Adobe のブログ記事には  while continuing to support the creation of Flash content  とあり、サポートは続けるとしているものの、Flash はそろそろ「過去の技術」となりつつある。Flash Player をインストールしておく利益（Flash サイトを閲覧できる）とリスク（Flash Player の脆弱性を利用したウィルス・マルウェアに感染する）を比較した時に、リスクが上回ると判断して、Flash Player はアンインストールすることとした。PCでニコニコ動画の閲覧ができなくなるが、どうしても閲覧したい動画があるときには iPad のアプリを使うことにする。Ｆｌａｓｈ脆弱性、対策しにくい「ゼロデイ攻撃」とは (読売新聞, 2015/10/16)Adobe Flashの新たなゼロデイ脆弱性を確認、不正広告に利用 (トレンドマイクロ, 2015/2/2)閲覧しただけで感染する不正ネット広告が急増、トレンドマイクロが注意喚起 (PC Online, 2015/12/4)Flash Player アンインストールの方法以下のサイトにしたがって、Flash Player をアンインストールすることができる。Flash Player をアンインストールする方法ただし、これだけでは Google Chrome の Adobe Flash Player プラグインは削除されない。Chrome のプラグインを無効にするためには、Chrome でプラグインを追加、削除、管理するに書かれている通り、このようにする。パソコンで Chrome を開きます。上部のアドレスバーに「chrome://plugins/」と入力し、Enter キーを押します。有効または無効にするプラグインの横にある [有効にする] または [無効にする] をクリックします。"},
{file:"/2017/08/17/factorization/",title:"2次式の因数分解の簡便計算法",mtime:1502944907,ctime:1502944907,body:"2次式の因数分解の簡便計算法 2次式の因数分解の簡便な計算方法について記す。$ ax^2 + bx + c $ を因数分解する方法について、このブログ記事で紹介されていた方法を記す。かけて $ac$、足して $b$ になる2数 $p, q$ を見出す。$ ax^2+px+qx+c $ と変形する。$ ax^2+px$ と $qx+c$ をそれぞれ共通因数でくくる。あとは簡単。証明は上記のブログ記事に書かれているが、簡単に言えば $pq=ac$ なので $ax^2+px = \frac{ax}{q}(qx+c)$ となり、$(qx+c)$ が $ ax^2 + bx + c $ の因数となる。計算例を示す。[[ \begin{array}{rl} 5 x^2 + 11x - 12 &=& 5 x^2 + 15x - 4x - 12 \cr\cr &=& 5x(x+3) - 4(x+3)  \cr\cr &=& (5x-4)(x+3)  \end{array} ]]つまり、最初に「かけて $5 \times (-12) = -60$、足して11」となる2数を見つける。それは15と-4である。そして、$11x$のところを$15x-4x$と書き換える。あとは簡単。高校の教科書に書かれている「たすき掛け」を使ってこの問題を解くためには、[[ \begin{array}{rl} 1 & & 3 \cr\cr 5 & & -4  \end{array} ]]の形に持っていくために、12を約数に分解した後に面倒なたすき掛けの計算を何度も試行錯誤する必要がある。その点、この方法であれば「かけていくつ、足していくつ」の数を見つければいいので、試行錯誤の計算が楽になる。特に $a$ や $c$ に約数が多い場合にはたすき掛けよりも楽である。$a$と$c$の約数が少ない場合にはたすき掛けの方がすぐに計算できる場合もあり、適宜使い分けても良い。この方法は、高校の先生に「教科書には書かれていない簡便法」として教えてもらったという学生もいた。ひそかに広まっているようである。"},
{file:"/2015/11/08/sieve/",title:"素因数分解プログラム msieve の結果表示を変換するスクリプト",mtime:1446946851,ctime:1446946851,body:"素因数分解プログラム msieve の結果表示を変換するスクリプト 素因数分解プログラム msieve の結果表示を変換するスクリプトを書いた。{% gist a31408f4061a943c85a0 %}これを sieve としてパスの通ったところに入れておけば、$ sieve 12345678902 * 3 ^ 2 * 5 * 3607 * 3803のように計算結果が表示される。msieve がインストールされている必要がある。"},
{file:"/2016/01/23/Seiseki/",title:"成績ファイル作成スクリプト",mtime:1453499289,ctime:1453499289,body:"成績ファイル作成スクリプト 東洋大学教員以外には関係のない記事です。東洋大学の成績登録システムでは、学籍番号を1行目、成績を2行目に入力したテキストファイルを登録することになっている。そのファイル形式は文字コードは UTF-16区切り文字は TABそれ以外の余計なスペース等の文字が入っているとダメ改行コードは CR/LFとなっていて、融通が利かないので作成するのが大変である。そこで「採点登録支援ツール」なるものが作られて、成績登録作業が「簡単にできる」ようになったとされているが、個人的にはどうも使いにくく、そもそも Mac ではうまく動かなかったりする。この支援ツールを使わない方法としてはExcel でデータをコピーしたあとに、テキストエディタに貼り付ける（TAB区切りテキストとして貼り付けられる）Excel から「UTF-16 Unicode テキスト」で保存するといった方法があるが、余計な文字（スペース等）が入っていると、これもうまくいかないことがある。というわけで、Python 3 で成績登録ファイル作成スクリプト seiseki.py を書いた。東洋大学教員用成績登録ファイル作成スクリプト使い方はseiseki.py 入力ファイル名 出力ファイル名とする。入力ファイルは成績のCSVファイルで、1行目は学籍番号（半角数字10桁）、2行目は成績（SABCDE のいずれか１文字）。成績は「/」を「」に自動的に変換する。"},
{file:"/2015/10/10/equation-on-jekyll/",title:"Jekyll 上での数式の表示",mtime:1583090573,ctime:1444402800,body:"Jekyll 上での数式の表示 Jekyll のドキュメントによれば、Kramdown はMathJaxによる数式表示をサポートしている、とのこと。MathJax を使うためには、HTML に<script type= text/javascript  src= http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML ></script>と記述して、MathJax を読み込ませる必要がある。MathJax を読み込ませるためのレイアウト mathを用意して、数式を使う記事には layout: math と指定することで、必要な時にだけ MathJax を読み込ませるようにした。設定はこれだけで、プラグインを使う必要はないので、GitHub Pages 上で数式の表示をすることができた。LaTeX 書式の数式が MathJax でどのように表示されるかをリアルタイムで確認するためには MathJax checker を使うと便利である。Kramdown のドキュメントに書かれている方法を使って、リチャーズ式を表示してみる。$$\begin{align*}\frac{\partial \theta}{\partial t}= \frac{\partial}{\partial z} \left[ K(\theta) \left (\frac{\partial \psi}{\partial z} + 1 \right) \right]\ \end{align*}$$この数式のソースコードは{% highlight tex %}$$\begin{align*}\frac{\partial \theta}{\partial t}= \frac{\partial}{\partial z}\left[ K(\theta) \left (\frac{\partial \psi}{\partial z} + 1 \right) \right]\\end{align*}$${% endhighlight %}となっている。すなわち、{% highlight tex %}$$\begin{align*}{% endhighlight %}と{% highlight tex %}\end{align*}$${% endhighlight %}の間に、LaTeX で数式を記述すれば良い。インラインでの表示は $$ と $$ で囲む。たとえば、半径 $$ r $$ の円の面積は $$ \pi r^2 $$ であり、球の体積は $$ \frac{4}{3}\pi r^3 $$ である。と表示するためには、半径 $$ r $$ の円の面積は $$ \pi r^2 $$ であり、球の体積は $$ \frac{4}{3}\pi r^3$$ である。と書く。2017年5月1日更新：KaTeX による数式の表示について記した。"},
{file:"/2020/01/07/CanvasEvent/",title:"Canvas のマウスとタッチのイベントを表示するプログラム",mtime:1578345136,ctime:1578345136,body:"Canvas のマウスとタッチのイベントを表示するプログラム HTMLのCanvas要素におけるマウスとタッチのイベントの取り扱いを理解するために、発生したイベントの名前と位置を表示ながら線を描画するJavaScriptのプログラムを作成した。style= border:1px solid #000000; background: #ffffe8; max-width: 100%; height: auto; max-height: 100% >このブラウザはHTML5のCanvas要素に対応していません。Canvas 内のスワイプを無効にするクリア(mousemove)(touchmove)mousedown, mouseup, click, touchstart, touchend, touchcancel, touchmove解説詳しくは文末の参考サイトに書かれているので、要点を簡潔に記す。このページのHTMLでは```htmlこのブラウザはHTML5のCanvas要素に対応していません。```の箇所でキャンバスが設置され、このJavaScriptを読み込む。JavaScript では、```javascriptvar c = document.getElementById('canvas');var ctx = c.getContext('2d');```と、キャンバスとコンテキストをグローバル変数 c, ctx で読み取る。たとえば mousedown のイベントは```javascriptc.addEventListener('mousedown', function(e) {    showMessage('mousedown' + strPair(pos(e)));    down(pos(e));});```と読み取っている。ここで、pos(e)はeというイベントからマウスのキャンバスにおける座標をリストとして返す関数で```javascriptfunction pos(e) {var x, y;x = e.clientX - c.getBoundingClientRect().left;y = e.clientY - c.getBoundingClientRect().top;return [x, y];}```のように計算している。すなわち、マウス位置のx座標 e.clientX からキャンバス左端の位置 c.getBoundingClientRect().left を引くことで、キャンバス上のx座標を得ることができる。y座標も同様である。strPair は座標のリストを文字列に変換する関数で strPair(pos(e)) によって e というイベントのマウスの位置を ” (x, y)” の形の文字列として得ることができる。マウスのイベント mouseup, click, mousemove についても同様である。タッチのイベントについては、マウスと違って複数の指によるタッチが生じるため、取り扱いが異なる。たとえば touchstart では```javascriptc.addEventListener('touchstart', function(e) {    message = 'touchstart';    for (i = 0; i < e.changedTouches.length; i++) {        message += strPair(pos(e.changedTouches[i]));    }    showMessage(message);    if (e.changedTouches.length == 1) {        down(pos(e.changedTouches[0]));    }});```としている。すなわち、タッチのイベントは e.changedTouches にリストとして格納されていて、その長さを e.changedTouches.length で取得できる。1つ目の指の座標は、先程の pos 関数を使って pos(e.changedTouches[0]) によって取得できる。touchcancel, touchend, touchmove も同様である。線を描画する処理については、マウスとタッチで同じ処理ができるように、mousedown と touchdown イベントからは down 関数を、mouseup と touchup イベントからは up 関数を、mousemove と touchmove イベントからは move 関数を、それぞれキャンバス上の座標を引数として呼び出している。グローバル変数 dragging を、down で true に、up で false にして、dragging が true のときだけ線を描画している。線の描画は、```javascriptfunction move(pos) {if (dragging) {    ctx.moveTo(lastPos[0], lastPos[1]);    ctx.lineTo(pos[0], pos[1]);    ctx.stroke();    lastPos = pos;}}```のようにしている。タッチで指を動かすと、スワイプによって画面が動くため描画しにくい。そこで「Canvas 内のスワイプを無効にする」をチェックすることで、Canvas 内で touchmove イベントが発生したときには e.preventDefault() によってデフォルトのタッチ操作が無効となるようにした（通常は常に無効にするが、ここでは無効にする場合としない場合の違いを見るためにこのようにした）。それは、次の箇所である。```javascript    if (document.formOption.noSwipe.checked) {        e.preventDefault();    }```また、タッチイベントによる線の描画は、1本指のときにだけ発生するようにしている。タッチペンで描画してみたところ、良い書き心地であった。色や線の太さを変える機能と点を打つ機能、直線を引く機能、塗りつぶす機能をつければ、十分に実用的な簡易お絵かきソフトになるであろう。c.toDataURL() で画像データを得ることができるようなので、作成した画像をブラウザの localStorage に保存するといった運用も可能である。いずれまた、そのようなソフトを作って公開するかもしれない。キャンバスのマウスとタッチによる操作をともなう JavaScript プログラムを書くときには、まずはこのプログラムをコピーしてからプログラムを書けば、イベントを確認しながらプログラムを書けるので効率的であろう。最後にイベントを表示する処理を消してから公開すれば良い。参考サイトUsing Touch Events with the HTML5 Canvas (Ben Centra, 2014/12/5)Touch events (MDN web docs)【連載】第二回HTML5でCanvasアプリを作る入門編 ~マウスクリックイベントについて~ (nigoblog, 2013/1/11)"},
{file:"/2015/10/30/excel-regression/",title:"Excel と回帰分析",mtime:1446179705,ctime:1446179705,body:"Excel と回帰分析 Excel で回帰分析をする方法についての参考ページです。散布図と近似式エクセル2013基本講座：散布図に近似曲線を表示する健康統計の基礎・健康統計学 - Excelで散布図と回帰直線を作成回帰直線を関数で計算回帰直線を求めるためのエクセル関数応用例：株価時系列データからの線形回帰トレンド作成より高度な分析（重回帰分析、非線形回帰)やってみよう分析！ 第5章：Excelの分析ツールとソルバーの活用(回帰、最小2乗法おまけ（Excel ではない)SWRC Fit - 土壌水分特性曲線の非線形回帰プログラム -"},
{file:"/2015/11/10/excel-link/",title:"Excel 参考サイト",mtime:1583090573,ctime:1447118857,body:"Excel 参考サイト Microsoft Excel の使い方について解説しているサイトへのリンクです。Windows 版Excelでお仕事！ (井上 治)100Excel (Yujiro Sakaki)なんだ！カンタン！Excel塾 (ExcelのWeb参考書)Excel 一般／関数の応用方法 (Chiquilin Site)エクセル2013基本講座 (よねさん)Office 2013 トレーニングビデオ (Microsoft)エクセル2010基本講座 (よねさん)動画マニュアル Excel 2010 使い方 (Webdemo Inc)エクセル2007基本講座 (よねさん)Mac 版Excel for Mac 2011 のトレーニング (Microsoft)マイクロソフト エクセル 使い方辞典 (Excel 2008 for Mac)関数Excel 関数 (機能別) (Microsoft)Excel(エクセル)関数一覧表  (よねさん)エクセル関数の技36 (日経PC21)ワンポイント相対参照と絶対参照関連記事Word 参考サイトPowerPoint 参考サイトオフィスソフトの比較"},
{file:"/2017/04/22/EcologicalFootprint/",title:"エコロジカル・フットプリント",mtime:1523771301,ctime:1492851281,body:"エコロジカル・フットプリント Global Footprint Networkが公開しているエコロジカル・フットプリントの国別データから、いくつかの国の1人当たりグローバルヘクタールのデータを抜粋して表にしています。グローバルヘクタール (gha) は、平均的な生物生産量をもつ土地1ヘクタール（1万平方メートル）に相当する生物生産量の単位です。炭素吸収は、二酸化炭素を吸収する森林面積です。年度: 2014年単位: gha / 人<tr>    <th>国</th>    <th>炭素吸収</th>    <th>耕作地</th>    <th>漁場</th>    <th>森林</th>    <th>牧草地</th>    <th>建物</th>    <th>計</th></tr><tr>    <th>カタール</th>    <td>14.414 </td>    <td>0.492 </td>    <td>0.191 </td>    <td>0.203 </td>    <td>0.302 </td>    <td>0.052 </td>    <td>15.65 </td></tr><tr>    <th>アメリカ</th>    <td>5.977 </td>    <td>1.039 </td>    <td>0.135 </td>    <td>0.832 </td>    <td>0.299 </td>    <td>0.083 </td>    <td>8.37 </td></tr><tr>    <th>ロシア</th>    <td>3.578 </td>    <td>0.925 </td>    <td>0.198 </td>    <td>0.684 </td>    <td>0.147 </td>    <td>0.037 </td>    <td>5.57 </td></tr><tr>    <th>日本</th>    <td>3.524 </td>    <td>0.463 </td>    <td>0.339 </td>    <td>0.251 </td>    <td>0.108 </td>    <td>0.059 </td>    <td>4.74 </td></tr><tr>    <th>中国</th>    <td>2.580 </td>    <td>0.582 </td>    <td>0.085 </td>    <td>0.202 </td>    <td>0.139 </td>    <td>0.122 </td>    <td>3.71 </td></tr><tr>    <th>ブラジル</th>    <td>0.929 </td>    <td>0.706 </td>    <td>0.047 </td>    <td>0.504 </td>    <td>0.798 </td>    <td>0.094 </td>    <td>3.08 </td></tr><tr>    <th>インドネシア</th>    <td>0.612 </td>    <td>0.465 </td>    <td>0.228 </td>    <td>0.210 </td>    <td>0.030 </td>    <td>0.063 </td>    <td>1.61 </td></tr><tr>    <th>インド</th>    <td>0.582 </td>    <td>0.334 </td>    <td>0.016 </td>    <td>0.129 </td>    <td>0.008 </td>    <td>0.050 </td>    <td>1.12 </td></tr><tr>    <th>パキスタン</th>    <td>0.336 </td>    <td>0.312 </td>    <td>0.014 </td>    <td>0.083 </td>    <td>0.001 </td>    <td>0.043 </td>    <td>0.79 </td></tr><tr>    <th>世界</th>    <td>1.707 </td>    <td>0.550 </td>    <td>0.093 </td>    <td>0.278 </td>    <td>0.144 </td>    <td>0.064 </td>    <td>2.84 </td></tr>参考世界の人口75億人で計算。場所面積（億 ha）1人当たり面積 (ha)地球5106.8海洋3634.8陸地1472.0作業用Excelファイル"},
{file:"/2017/05/09/Password/",title:"パスワードの管理について",mtime:1522925505,ctime:1494287730,body:"パスワードの管理について 複雑なパスワードをいくつも覚えることは難しいため、良くないと分かっていても、とても覚えやすい単純なパスワードを使っていたり、多くのサイトで同じパスワードを使いまわしたりしている人が多いであろう。この記事ではパスワード管理方法のヒントを記す。パスワード設定の原則パスワード設定方法には2つの原則がある。原則1: 複雑なパスワードを使う「複雑なパスワード」といってもいろいろなレベルがあり、特に多くの人が使っている「極めて単純なパスワード」は使うべきではない。使用してはいけないパスワード、トップ 50によれば、2010年のGawker 社の事件で盗まれたパスワードを解析したところ、トップ5はこのようなパスワードだった。123456pasword12345678lifehackqwertyその先にも、単純なパスワードが続いている。アカウントを盗もうとする攻撃者は、攻撃の成功率を高めるために、このような「よく使われるパスワード」を使ってサイトへの侵入を試みるため、単純なパスワードを使っていると破られる危険性が高まる。「単語や人の名前などを使った覚えやすいパスワード」は、「攻撃者にとっては推測して当てやすいパスワード」となるため、攻撃に対して弱いパスワードとなる。攻撃を成功しにくくするためには「複雑な覚えにくいパスワード」すなわち攻撃に対して「強い」パスワードを設定することとなる。なるべく文字数は長く、アルファベット（小文字、大文字）、数字、記号など、使う文字の種類は増やす方が攻撃は成功しにくいため、より強いパスワードとなる。「5万語の語彙の辞書（広辞苑など）をランダムに開いて3つの語を選んで繋げる」（オフライン攻撃想定の「暗号の鍵」の場合は5つの語を選んでつなぐ）というセキュリティ研究者の提案もある。原則2: 同じパスワードを使いまわさないこの原則の目的は、パスワードリスト攻撃を防ぐことにある。あるサイトに登録したパスワードがなんらかの理由で漏洩して、ユーザー名とパスワードのリストが出回ることがある。そのときに、複数のサイトに同じパスワードが設定されていると「あるサイトから漏えいしたパスワード」が、他のサイトでも使われることでログインに成功して被害が広がってしまう。パスワードの漏えいは必ずしも漏えいしたという事実がわかるとは限らないので、「漏えいしたことがわかってからパスワードを変えればいい」とするのは不十分である。パスワードの管理方法このように「強いパスワード」を「サイトごとにばらばらに」設定すると、人間の記憶力ではそのパスワードは覚えられないので、パスワードを管理するための補助手段が必要となる。そのための3つの方法を記す[^1]。記載する順番としては、誰でも簡単に実行できる方法から、よりITに詳しい人向けの方法へと進めていくため、適宜「自分にとって便利である」と思われる方法を選択し、さらに自分なりの工夫を加えると良いであろう。また、ここに書かれているような方法でパスワードを管理していても、たとえばフィッシングにかかればパスワードが盗まれてしまう。ここに書かれていることはセキュリティ対策の「すべて」ではない。(1) 紙のメモ「パスワードは紙に書いてはいけない」と、昔はよく言われていた。その紙を他の人から見えるところに置いておけば、簡単にパスワードを盗まれてしまうためである。一方で、紙に書いた情報は離れた場所にいる攻撃者からネットワーク経由で盗まれる心配はないという点においては、ファイルで保存する方法と比べて優れている。この方法の安全性を高めるためには、「他人から見られにくい場所に紙を保管する」だけでなく「もし見られてしまってもパスワードを容易に推測できないようにする」といった対策が望ましい。そのためには、紙に記載したパスワードから本物のパスワードへの変換規則を作り、それを記憶する。たとえば、 yaQ のような決められた文字を末尾に追加する、といったような変換規則が考えられる[^2]。すなわち、紙には○×銀行ID seki パスワード xTL2WLGz0Pのように書いておき、xTL2WLGz0P に決められた文字 yaQ を追加して xTL2WLGz0PyaQ というパスワードとする。この「yaQ」という文字は他のサイトにも共通のものとしておけば、この程度の長さであれば記憶可能である（ただし、長期的に使わないと忘れてしまうことがあるので、忘れにくいように自分なりの工夫をすると良い）。このようにすれば、たとえば家族がその紙を見てこっそりとログインを試みても[^3]成功しない。紙の保管で大変なのは紛失対策である。大きめのノートに記して決められた場所に保管する、持ち歩かない（持ち歩くと紛失の危険性が高くなる）、あるいはコピーして2箇所以上に保管する、といった対策が考えられる。(2) パスワード付き電子ファイルパスワードなどのアカウント情報をパソコンやスマホなどに電子的に記録することで、たとえばマルウェアに感染してその情報を盗み取られるという危険性が生じる。その対策をする必要があるという前提で、アカウント情報をどのように電子的に記録するのかを考える。アカウント情報が書かれているファイルを「そのまま読める状態で」保存しておくことはリスクが高く、ファイルを暗号化して、解読用のパスワードを入力しなければ読むことができないようにすることが望ましい。IPAが例示する方法の中にもこの方法が書かれている。「パスワード付き電子ファイル」を作るためには、パスワード付き圧縮ファイルを使う方法や、GPGのような暗号化のためのソフトウェアを使う方法、暗号化ディスクイメージファイルを作成する方法などがある。なお、暗号化したファイルを総当たり攻撃で解読されないためには、ファイル暗号化のパスワードには十分な強さのものを使用する必要がある。「パスワード」という言葉は「単語」の長さをイメージするので、もっと長い「パスフレーズ」を使うように推奨されることもある。(3) ハッシュ関数「記憶した共通のマスターパスワード」と「サイト固有の情報」から、決められたハッシュ関数でパスワードを生成する、という方法である。これは(2)と似て非なるものである[^4]。SuperGenPass は、「サイト固有の情報」を、公開された情報である「サイトのドメイン名」として[^5]、JavaScript やブックマークレットを使って使いやすくしたものである。Mobile 版を試してみると、使い方が分かる。また、シード文字列（マスターパスワード + サイト固有の情報）を強化するために自分だけがわかるなぞなぞを使う EpisoPass というシステムもある。この方法を実現する自作のパスワード生成プログラム を公開する。サイト固有の情報（パスワードの種）を1つのファイルとして管理し、パソコンに保存されたパスワードの種と、毎回打ち込むマスターパスワードからパスワードを生成する[^6]。モバイルからのアクセスのためにHTMLファイルを生成することもできる。[^6]:  このプログラムでは「サイト固有の情報（パスワードの種）」が書かれているファイルが漏えいしなければ、「あるサイトのパスワード」がわかっても総当たり攻撃が成立しない。総当たり攻撃をするためには「サイト固有の情報」が書かれているファイルと「あるサイトのパスワード」の両方を不正に入手する必要がある、という点で SuperGenPass よりは安全性が高まっているはずである。ただし、このファイルが失われたらこのプログラムで管理しているすべてのサイトのパスワードが失われるため、セキュリティを確保しつつファイルを失わない様に管理をしなければならない。二要素認証いずれの方法でパスワードを管理したとしても、さらに安全性を高めるためには、パスワード以外の認証方法を併用することが有効である。ここでは、多要素認証の1つである携帯・スマホなどによる二要素認証について記す。これは、本人しか知らない「パスワード」に加えて、本人しか持っていないもの（携帯・スマホなど）を持っているかどうかによって認証をする、というものである。たとえば、携帯の番号を登録しておいて、パスワードを入力すると、携帯・スマホにテキストメッセージ(SMS)で確認コード（ワンタイムパスワード）が送られてきて、その番号を入力してはじめてログインできる。その番号はそのとき1回限りのものなので、そのときに携帯・スマホを「持っている」人でないとログインできない、というしかけである。二要素認証には、主として携帯・スマホへの SMS や音声通話を使うもの確認コード（ワンタイムパスワード）表示専用の小型端末（トークン）を使うものモバイルアプリを使うもの（Google 認証システムの仕組み参照）がある。ここで、たとえばモバイルアプリで二要素認証を設定すると、そのモバイルアプリが使えなくなったとき（スマホの紛失など）にログインできなくなるので、SMSでも二要素認証ができるようにする、バックアップコードを印刷する、などといった対策が必要となる。スマホを紛失しても同じ電話番号で新しいスマホを取得すれば、登録しておいた電話番号宛の SMS を受け取ることは可能となる。なお、二要素認証で登録した電話番号を解約したり変更したりするとログインができなくなるので、注意が必要である。どのサービスにどの電話番号を登録したのかというリストを作っておくと良いであろう。注"},
{file:"/2015/11/08/msieve/",title:"素因数分解プログラム msieve",mtime:1446939564,ctime:1446939564,body:"素因数分解プログラム msieve 素因数分解をするプログラム msieve は相当に速いということなので、インストールした。Integer Factorization Source CodeSourceforge: MsieveMsieve の使い方Mac で Homebrew を使っている場合には、Homebrew Science に Formula を入れておいた ので、brew install homebrew/science/msieveで、インストールできる。これで、msieve -q 素因数分解したい数で、手軽に素因数分解ができるようになった。ためしに、レピュニット Rn = (10n - 1) / 9 について、R100 までの素因数分解をしてみた。python が入っていれば、python -c  for i in range(101): print ('1'*i)  | msieve -m -l rep100.txtで、rep100.txt に計算結果が保存される。計算は1時間半ほどで終了した。あまり細かいログがいらない時には、python -c  for i in range(101): print ('1'*i)  | msieve -m -q | grep -v next > rep100.txtとすれば、計算結果だけが保存される。たとえば、R97 の計算結果は1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111p8: 12004721prp36: 846035731396919233767211537899097169prp54: 109399846855370537540339266842070119107662296580348039となる。これはつまり、$$\begin{eqnarray*}R_{97} &=& \frac{10^{97}-1}{9} \&=& 12004721 \&\cdot& 846035731396919233767211537899097169 \&\cdot& 109399846855370537540339266842070119107662296580348039\end{eqnarray*}$$であることを示している。ここで、p8 は8桁の素数であることを、prp36 は36桁の「おそらく素数」であることを示している。素数判定には確率的手法を使っているため、prp (probably prime) はまだ素数であることが確定しているわけではないが、ほぼ確実に素数、というくらいの「おそらく」である。計算の確認は、calc を使うか$ calc  12004721 * 846035731396919233767211537899097169 * 109399846855370537540339266842070119107662296580348039 1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111Online Arbitrary Precision Calculator を使う。ここに、R100 までの計算結果を貼っておく。Factorization of repunit up to 100 with msieveレピュニットの素因数分解はこのサイトで計算結果がまとめられている。Factorizations of 11...11 (Repunit)"},
{file:"/2015/10/13/git-repository/",title:"自分専用 Git リポジトリの作成",mtime:1444729951,ctime:1444729951,body:"自分専用 Git リポジトリの作成 無料でGithubライクな共同開発環境を「さくらインターネット」で実現するを参考に、リポジトリを作成した。「共同開発」はしていないのだけど、自分専用の非公開リジポトリを持っておくのは便利。すでに、さくらには git がインストールされているので、インストールは不要。とても簡単にできた。ついでに、$HOME/git の下に CreateRepository.sh というシェルスクリプトを作成した。これで、cd git./CreateRepository.sh repositoryで簡単にリポジトリを作成して ssh でアクセスできるように設定できるようになった。これが CreateRepository.sh で、3行目の host=hostname.example.com をリポジトリを作成するホストのホスト名に変えて使う。{% gist 2206f77e1302c6e4f13c %}ついでに、.git を見えなくする .htaccess ファイルの書き方 についてメモしておく。~RedirectMatch 404 /.git~"},
{file:"/2020/01/03/DrawCartesianGraph/",title:"関数のグラフを描画するプログラム",mtime:1578272172,ctime:1578022397,body:"関数のグラフを描画するプログラム HTML5 の Canvas要素 で関数のグラフを描画するプログラム DrawCartesianGraph を JavaScript で作成した。style= max-width: 100%; height: auto; max-height: 100% >このブラウザはHTML5のCanvas要素に対応していないためグラフを表示できません。'use strict';// Initialize canvasvar c = document.getElementById('canvas');var ctx = c.getContext('2d');ctx.font =  20px serif ; // Font of the textctx.lineWidth = 1; // Line width// Set Cartesian coodinate system for the graph (GC)// Origin of GC with respect to canvas coordinate = (ctx.originX, ctx.originY)ctx.originX = 300;ctx.originY = 500;// Unit vector of GC with respect to canvas coordinate = (ctx.unitX, ctx.unitY)ctx.unitX = 50;ctx.unitY = -50;// Draw graphsdrawAxis(ctx); // Draw axis and labelsdrawScaleX(ctx); // Draw scale of x axisdrawScaleY(ctx); // Draw scale of y axisctx.strokeStyle =  blue ; // Color of the curvedraw(ctx, exp); // Draw y=exp(x) curvectx.fillStyle =  blue ; // Color of legendctx.fillText( y = exp(x) , 420, 80); // Write legendctx.strokeStyle =  green ; // Color of the curvedraw(ctx, plus, 1); // Draw y=x+1 curvectx.fillStyle =  green ; // Color of legendctx.fillText( y = x+1 , 480, 300); // Write legend// Define mathematical functionsfunction plus(x, a) {return x + a;}function exp(x) {return Math.pow(Math.E, x);}使い方以下のようにして、指定した関数のグラフを描画することができる。このページのソースを表示して、<canvas id= canvas  width= 600  height= 600 から</script>までをコピーしてHTML文書内に貼り付け、適宜書き換える。描画エリア canvas の大きさは <canvas id= canvas  width= 600  height= 600  の width と height で指定する。<script src= https://sekika.github.io/js/graph.js ></script> では、graph.js のURLを指定する。このサーバー上の graph.js が書き換えられる可能性があるため、コピーして使うことを推奨する。var ctx = c.getContext('2d'); で指定されたキャンバスのコンテキスト ctx に対してグラフを描画する。グラフを描画するためパラメータは ctx のプロパティとして設定する。// Set Cartesian coodinate system for the graph (GC)のブロックで、グラフの座標系を、ctx の座標系に対して原点 (ctx.originX, ctx.originY)、単位ベクトル (ctx.unitX, ctx.unitY) で定める。ここでは、原点 (300, 500)、単位ベクトル (50, -50) としている。// Draw graphs のブロックで、以下のようにグラフを描画している。drawAxis(ctx); で ctx のキャンバスに座標軸を描画する。drawScaleX(ctx); でx軸の目盛りを、drawScaleY(ctx); でy軸の目盛りを描画する。目盛りの間隔を変えるときには、ctx.scaleX と ctx.scaleY にその値を入れておく。draw(ctx, exp); で ctx のキャンバスに exp 関数を描画する。exp 関数はこの JavaScript 内の function exp(x) で定義されている。draw(ctx, plus, 1); で ctx のキャンバスに plus 関数を描画する。3つ目の引数である1は、plus 関数の2つ目の引数である。このように、draw 関数の3つ目の引数があるときは、draw 関数の2つ目の引数で指定されている関数の2つ目の引数として渡される。関数に複数の引数があるときには、1つの配列変数にまとめれば良い。このように、JavaScript で自由に関数を定義して、その関数を設定した座標系で表示することができる。ctx.fillText( y = exp(x) , 420,80); では、HTML canvas strokeText() Method で文字を直接描画している。パラメータの一覧は graph.js の頭の const で宣言されている定数を参照。たとえば、const labelX =  x ; // Label of the x axis はx軸のラベルにはxという文字が設定されていることを意味する。ctx の同じ名前のプロパティ、すなわち ctx.labelX を設定することで、このデフォルトとは異なる値を設定できる。使用例ポアソン分布の正規分布による近似: ポアソン分布に整数値だけを離散的にプロットする plotInt 関数を使用している。テキストボックスに入力された数からリアルタイムにパラメータを変化させてグラフを描画する。（ソース）指数と対数関数の微分: 小さめのグラフ。軸ラベルの文字を変えている。（ソース）Canvas の参考サイトCanvasリファレンス (HTMLクイックリファレンス)HTML Canvas 2D Context, Level 2 (W3C Working Group Note, 2015/9/29)HTML5 Canvas (w3schools.com)【連載】第一回HTML5でCanvasアプリを作る入門編 ~canvas関連メソッドリファレンス~ (nigoblog, 2013/1/4)HTML5 の Canvas を使って素晴らしいグラフィックスを作成する (Ken Bluttman, IBM, 2011/2/8)"},
{file:"/2015/10/23/ipcc-2013-fig/",title:"IPCCのAR5「気候変動2013」政策決定者向け要約の図表",mtime:1540450205,ctime:1445548753,body:"IPCCのAR5「気候変動2013」政策決定者向け要約の図表 IPCC (Intergovernmental Panel of Climate Change; 気候変動に関する政府間パネル) は、気候変動（地球温暖化）に関する科学的な研究成果を収集、整理して公表している国際的な学術機関である。1988年に世界気象機関 (WMO) と国連環境計画 (UNEP) により設立された。IPCC ホームページ次の３つの作業部会 (Working Group) に分かれている。第1作業部会| WG I |科学的知見第2作業部会| WG II| 脆弱性、影響、適応第3作業部会| WG III| 排出抑制と気候変動の緩和これまでに、以下の報告書が公表された。|---|年次 | 報告書 | 略称|---|1990年 |第1次評価報告書 |FAR|1995年 |第2次評価報告書 |SAR|2001年 |第3次評価報告書 |TAR|2007年 |第4次評価報告書 |AR4|2014年 |第5次評価報告書 |AR5第5次評価報告書 (AR5) の作業部会ごとの報告書と総合報告書の和訳と解説資料は環境省のページにまとめられている。このページでは、第1作業部会が作成した報告書「気候変動2013 - 自然科学的根拠」の「政策決定者向け要約 (SPM; Summary for policymakers)」に掲載されている図表をまとめる。なお、図表によく出てくる RCP については、以下の用語集和訳の 代表的濃度経路（Representative Concentration Pathways）を参照。IPCC第5次評価報告書　第1作業部会報告書　用語集（抜粋版）　気象庁訳（PDF 392KB）なお、第6次評価報告書(AR6)は2022年に出版される予定である。SPM に掲載されている図AR5のSPM(政策決定者向け要約)に掲載されている図は、Report Graphics: Summary for Policymakers にまとめられている。以下に、図のタイトルを和訳して図をリンクしたものを一覧にする。解説については、上記のSPMの和訳を参照。<p> <a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-1.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-1-thumb_155_276_70.jpg  style= width:155; height:276;   /></a></p><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-2.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-2-thumb_155_69_70.jpg  style= width:155; height:69;   /></a></td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-3.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-3-thumb_155_357_70.jpg  style= width:155; height:357;   /></a></td><strong>図 SPM.1</strong>: 1850年から2012年までの世界平均地上気温の偏差（年平均と10年平均）と1901年から2012年までの観測された地上気温の変化</td><strong>図 SPM.2</strong>: 1901年から2010年及び1951年から2010年までの降水量変化の分布図</td><strong>図 SPM.3</strong>: 世界的な気候変動に関する複数の観測指標</td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-4.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-4-thumb_155_180_70.jpg  style= width:155; height:180;   /></a></td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-5.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-5-thumb_155_132_70.jpg  style= width:155; height:132;   /></a></td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-6.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-6-thumb_155_155_70.jpg  style= width:155; height:155;   /></a></td><strong>図 SPM.4</strong>: 地球の炭素循環に関する複数の観測指標（大気中の二酸化炭素、海面の二酸化炭素とpH）</td><strong>図 SPM.5</strong>: 1750年を基準とした2011年における放射強制力の推定値と要因ごとに集計された不確実性</td><strong>図 SPM.6</strong>: 観測及びシミュレーションによって再現された気候変動の比較。すなわち、大陸の地上気温、極地の海氷面積、海洋貯熱量の変化</td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-7.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-7-thumb_155_234_70.jpg  style= width:155; height:234;   /></a></td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-8.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-8-thumb_155_218_70.jpg  style= width:155; height:218;   /></a></td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-9.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-9-thumb_155_124_70.jpg  style= width:155; height:124;   /></a></td><strong>図 SPM.7</strong>: 1950年から2100年までの世界平均地上気温、北半球の9月の海氷面積、世界平均の海面pH変化の複数のモデルによるシミュレーション</td><strong>図 SPM.8</strong>: 21世紀後半における年平均地上気温変化、年平均降水量変化、9月の北半球の海氷面積、海面のpH変化の2つのシナリオによるモデル予測分布図</td><strong>図 SPM.9</strong>: 21世紀中の世界平均海面水位の上昇予測(1986～2005年平均との比較)</td><a href= http://www.climatechange2013.org/images/figures/WGI_AR5_FigSPM-10.jpg ><img alt=   src= http://www.climatechange2013.org/images/made/images/figures/WGI_AR5_FigSPM-10-thumb_155_124_70.jpg  style= width:155; height:124;   /></a></td><strong>図 SPM.10</strong>: 世界全体の二酸化炭素の累積総排出量の関数として示した、モデルにより予測される世界平均地上気温の上昇量</td>SPM に掲載されている表AR5のSPMには以下の3枚の表が掲載されている。表 SPM.1: 気象及び気候の極端現象。気象庁による和訳の p.5 参照。表 SPM.2: 1986～2005年平均を基準とした、21世紀中頃と21世紀末における、世界平均地上気温と世界平均海面水位上昇の変化予測。注釈は省略。2046～2065年2081～2100年シナリオ平均可能性が高い予測幅平均可能性が高い予測幅世界平均地上気温の変化（℃）RCP2.61.00.4～1.61.00.3～1.7RCP4.51.40.9～2.01.81.1～2.6RCP6.01.30.8～1.82.21.4～3.1RCP8.52.01.4～2.63.72.6～4.8シナリオ平均可能性が高い予測幅平均可能性が高い予測幅世界平均海面水位の上昇（m）RCP2.60.240.17～0.320.400.26～0.55RCP4.50.260.19～0.330.470.32～0.63RCP6.00.250.18～0.320.480.33～0.63RCP8.50.300.22～0.380.630.45～0.82表SPM.3: CMIP5の地球システムモデルのシミュレーションにより計算された、RCPシナリオの大気中濃度変化に対応する2012年から2100年の期間の累積二酸化炭素排出量。シナリオ2012～2100年の累積二酸化炭素排出量(a)GtCGtCO2平均範囲平均範囲RCP2.6270140～410990510～1505RCP4.5780595～100528602180～3690RCP6.01060840～125038853080～4585RCP8.516851415～191061805185～7005注釈：(a) 1 GtC は、炭素換算で1ギガトン（=10 億トン=1000 兆グラム）を表す。二酸化炭素換算では36億6700万トンに相当する。要約の要約以下は、SPMの和訳の中に各章の要約として網掛けで記されていることをそのまま列記したものであり、いわば要約の要約である。|章 |要約|---|---|B. 気候システムの観測された変化 | 気候システムの温暖化には疑う余地がなく、また 1950 年代以降、観測された変化の多くは数十年から数千年間にわたり前例のないものである。大気と海洋は温暖化し、雪氷の量は減少し、海面水位は上昇し、温室効果ガス濃度は増加している（図 SPM.1、図 SPM.2、図 SPM.3、図 SPM.4 を参照）。|B.1 大気 |地球の表面では、最近 30 年の各 10 年間はいずれも、1850 年以降の各々に先立つどの 10 年間よりも高温でありつづけた（図 SPM.1 を参照）。北半球では、1983～2012 年は過去 1400 年において最も高温の 30 年間であった可能性が高い（中程度の確信度）。|B.2 海洋 |海洋の温暖化は気候システムに蓄積されたエネルギーの増加量において卓越しており、1971 年から2010 年の間に蓄積されたエネルギーの 90%以上を占める（高い確信度）。1971 年から 2010 年において、海洋表層（0～700 m）で水温が上昇したことはほぼ確実であり（図 SPM.3 を参照）、また 1870年代から 1971 年の間に水温が上昇した可能性が高い。|B.3 雪氷圈 |過去 20 年にわたり、グリーンランド及び南極の氷床の質量は減少しており、氷河はほぼ世界中で縮小し続けている。また、北極域の海氷及び北半球の春季の積雪面積は減少し続けている（高い確信度）（図SPM.3 を参照）。|B.4 海面水位 |19 世紀半ば以降の海面水位の上昇率は、過去 2 千年間の平均的な上昇率より大きかった（高い確信度）。1901 年から 2010 年の期間に、世界平均海面水位は 0.19 [0.17～0.21] m 上昇した（図SPM.3 を参照）。|B.5 炭素とその他の生物地球化学循環 |大気中の二酸化炭素、メタン、一酸化二窒素濃度は、少なくとも過去 80 万年間で前例のない水準にまで増加している。 二酸化炭素濃度は、第一に化石燃料からの排出、第二に正味の土地利用変化による排出により、工業化以前より 40%増加した。海洋は排出された人為起源の二酸化炭素の約 30%を吸収し、海洋酸性化を引き起こしている（図 SPM.4 を参照）。|C. 気候変動をもたらす要因 |放射強制力の合計は正であり、その結果、気候システムによるエネルギーの吸収をもたらしている。合計放射強制力に最大の寄与をしているのは、1750 年以降の大気中の二酸化炭素濃度の増加である（図SPM.5 を参照）。|D. 気候システム及びその近年の変化についての理解 |気候システムに対する人間の影響は明瞭である。これは、大気中の温室効果ガス濃度の増加、正の放射強制力、観測された温度上昇、そして気候システムに関する理解から明白である。|D.1 気候モデルの評価 |第 4 次評価報告書以降、気候モデルは改良されている。モデルは、20 世紀半ば以降のより急速な温暖化や、大規模火山噴火直後の寒冷化を含め、観測された地上気温の大陸規模の分布や数十年にわたる変化傾向を再現している（非常に高い確信度）。|D.2 気候モデルの応答の定量化 |温度変化、気候フィードバック、及び地球のエネルギー収支の変化に関する観測やモデルによる研究が総合されて、過去及び将来の強制力への応答としての地球温暖化の大きさについての確信度を与えている。|D.3 気候変動の検出と原因特定 |気候に対する人為的影響は、大気と海洋の温暖化、世界の水循環の変化、雪氷の減少、世界平均海面水位の上昇、及びいくつかの気候の極端現象の変化において検出されている（図 SPM.6、表 SPM.1 を参照）。人為的影響に関するこの証拠は、第 4 次評価報告書以降増加し続けている。人間による影響が20 世紀半ば以降に観測された温暖化の支配的な原因であった可能性が極めて高い。|E. 将来の世界及び地域における気候変動 |温室効果ガスの継続的な排出は、更なる温暖化と気候システム全ての要素の変化をもたらすだろう。気候変動を抑制するには、温室効果ガス排出量の大幅かつ持続的な削減が必要であろう。|E.1 大気：気温 |21 世紀末における世界平均地上気温の変化は、RCP2.6 シナリオを除く全ての RCP シナリオで 1850年から 1900 年の平均に対して 1.5℃を上回る可能性が高い。RCP6.0 シナリオと RCP8.5 シナリオでは 2℃を上回る可能性が高く、RCP4.5 シナリオではどちらかと言えば 2℃を上回る。RCP2.6 シナリオを除く全ての RCP シナリオにおいて、気温上昇は 2100 年を越えて持続するだろう。気温上昇は年々から十年規模の変動性を示し続け、地域的に一様ではないだろう（図 SPM.7、図 SPM.8 を参照）。|E.2 大気：水循環  |21 世紀にわたる温暖化に対する世界の水循環の変化は一様ではないだろう。地域的な例外はあるかもしれないが、湿潤地域と乾燥地域、湿潤な季節と乾燥した季節の間での降水量の差が増加するだろう（図 SPM.8 を参照）。|E.3 大気：大気質 ||E.4 海洋 |21 世紀の間、世界全体で海洋は昇温し続けるであろう。熱は海面から海洋深層に広がり、海洋循環に影響するであろう。|E.5 雪氷圈 |21 世紀の間、世界平均地上気温の上昇とともに、北極域の海氷面積が縮小し厚さが薄くなり続けること、また北半球の春季の積雪面積が減少することの可能性は非常に高い。世界規模で氷河の体積は更に減少するだろう。|E.6 海面水位 |21 世紀の間、世界平均海面水位は上昇を続けるだろう（図 SPM.9 を参照）。海洋の温暖化が強まることと、氷河と氷床の質量損失が増加することにより、全ての RCP シナリオについて海面水位の上昇率は1971 年から 2010 年の期間に観測された上昇率を超える可能性が非常に高い。|E.7 炭素とその他の生物地球化学循環 |気候変動は、大気中の二酸化炭素の増加を更に促進するような形で炭素循環過程に影響を与えるであろう（高い確信度）。海洋の更なる炭素吸収により、海洋酸性化が進行するであろう。|E.8 気候の安定化、気候変動の不可避性と、気候変動の不可逆性 |二酸化炭素の累積排出量によって、21 世紀後半及びその後の世界平均の地表面の温暖化の大部分が決定づけられる（図 SPM.10 を参照）。気候変動の特徴の大部分は、たとえ二酸化炭素の排出が停止したとしても、何世紀にもわたって持続するだろう。このことは、過去、現在、及び将来の二酸化炭素の排出の結果による、大規模で数世紀にわたる気候変動の不可避性を表している。"},
{file:"/2016/12/09/FakeCode/",title:"フェイク暗証番号生成",mtime:1481241138,ctime:1481241138,body:"フェイク暗証番号生成 偽の暗証番号をいくつか書いた紙を財布に入れておくと、財布が盗まれたときに、盗んだ人はそれがキャッシュカードの暗証番号かと思い、その偽の暗証番号で引き出そうとするので、規定回数間違えるとATMがロックされて引き出しに失敗する、というライフハックが古くからあります。盗難されたキャッシュカードを引き出されにくくするための簡単な方法そこで、そのような目的で使用するためにフェイクの暗証番号を生成するページを作りました。for (i = 0; i < 10; i++){var rand = Math.floor( Math.random() * 10000 ) ;document.write( <li> +( 000 +rand).slice(-4));}以上です。4桁の暗証番号が10個表示されています。リロードすると新しい値が得られます。JavaScript の Math.random() 関数を使い、0000〜9999の疑似乱数を生成しています。擬似乱数生成のアルゴリズムは、このページを表示しているウェブブラウザで実装されている JavaScript に依存します。念のため、縦横で本物の暗証番号と一致するものがないか確かめておくと良いでしょう。"},
{file:"/2015/11/18/last-update/",title:"最終更新日の表示",mtime:1447789082,ctime:1447789082,body:"最終更新日の表示 記事のヘッダーに最終更新日と更新履歴へのリンクを表示することを可能にした。たとえば、この記事では、ヘッダーにこのように表示されている。公開日：2015年11月12日 - 最終更新日：2015年11月17日そのために、YAML フロントマターにこのように書いてある。date: 2015-11-12 03:01:50 +0000update: 2015-11-17 06:38:29 +0000そして、レイアウトで公開日 page.date と最終更新日 page.update を取得して表示している。公開日：{{ page.date | date:  %Y年%-m月%-d日  }}{% if page.update %} - <a href= {{ % site.repository }}/commits/master/{{ page.path }} >最終更新日</a>：{{ page.update | date:  %Y年%-m月%-d日  }}{% endif %}<br />YAML フロントマターに update: がなければ、最終更新日は表示されない。最終更新日を表示したいときにだけ表示するようにした。ここで、時刻を手入力するのは面倒なので自動的に挿入している。公開日の date: は下書きを公開するスクリプトで挿入している。最終更新日の update: については、YAML フロントマターにupdate:と書くことで、コミット時に自動的に更新時刻を挿入するようにした。そのために、How to show the modification date of a file in Jekyll? に書かれている krlmlr さんのpre-commit フック を書き直して使った。すなわち、.git/hooks/pre-commit にこのスクリプトを置いた。!/bin/shContents of .git/hooks/pre-commitRead YAML front matter in all the modified files for committing,and replace  update:  line to  update: current date and time git diff --cached --name-status | grep  ^M  | while read a b; docat $b | sed  /---./,/---./s/^update:.*$/update: $(date -u  +%Y-%m-%d %T ) +0000/  > tmpmv tmp $bgit add $bdoneこのスクリプトは、git diff --cached --name-status で更新のあったファイルを調べて、更新のあったファイルの YAML フロントマターの中で、update: で始まる行に対して、現在時刻を追加する。"},
{file:"/2015/11/30/cop21/",title:"COP21 とパリ協定に関する情報",mtime:1450605278,ctime:1448837052,body:"COP21 とパリ協定に関する情報 気候変動枠組条約第21回締約国会議 (COP21)、京都議定書第11回締約国会議 (CMP11) で採択されたパリ協定 (Paris Agreement) に関する情報のリンク。COP21開催日: 2015年11月30日〜12月12日COP21開催場所: パリ (Paris Le Bourget Parc d'Expositions)パリ協定批准: 2016年4月22日から1年間の署名期間。55カ国、世界の温室効果ガス排出量の55%以上の国が批准することで発効する。日本語第21回締約国会議（COP21） (JCCCA 全国地球温暖化防止活動推進センター)ＣＯＰ２１パリで開幕、温暖化対策で合意目指す (ロイター, 2015/11/30)COP21とは？ 待ったなしの気候変動、世界の指導者はパリで何を話し合うのか (The Huffington Post, 2015/12/1)ＣＯＰ２１ 途上国支援上積み合意　２０年以降、１０００億ドルから (毎日新聞, 2015/12/8)ＣＯＰ21、パリ協定採択　196カ国・地域が参加  18年ぶり　温暖化1.5度以内へ努力 (日経新聞, 2015/12/13)ＣＯＰ２１、「パリ協定」を採択 (読売新聞, 2015/12/13)ＣＯＰ２１　パリ協定合意へ　削減、実効性に不安 (毎日新聞, 2015/12/13)COP21、歴史的な「パリ協定」 温暖化防止の取り組みは「ようやく半分程度」 (ハフィントンポスト, 2015/12/13)パリ協定について知っておくべき5つのこと (ウォール・ストリート・ジャーナル日本版, 2015/12/13)国連気候変動枠組条約第21回締約国会議（COP21）及び京都議定書第11回締約国会合（COP/MOP11）の結果について (環境省, 2015/12/14)COP21「パリ協定」勝ち組になったのは？歴史的な合意を勝敗と意外性の観点から解説 (National Geographic, 2015/12/16)日本が築いた「パリ協定」の基礎　経団連２１世紀政策研究所　研究主幹・澤昭裕 (産経新聞, 2015/12/16)政府、温室効果ガス削減で国内対策策定へ－パリ協定採択受け (電気新聞, 2015/12/18)パリ協定　意義と課題 (毎日新聞, 2015/12/18)首相、再生エネに言及せず　パリ協定後も原発優先　原子力防災会議 (東京新聞, 2015/12/19)COP21パリ協定 日本は「京都の屈辱」の教訓を生かせ！ (現代ビジネス, 2015/12/20)グーグルニュース英語United Nations - COP21 / Press ReleaseCOP21Paris Agreement (PDF) (United Nations, 2015/12/12)Paris Agreement (Wikipedia)What to know about the COP21 climate change summit in Paris (The Globe and Mail, 2015/11/29)COP21 negotiators unveil new 50-page draft text (POLITICO, 2015/12/3)COP21: New draft text released, as China and India accuse rich nations of dodging funding responsibilities (Business Green, 2015/12/3)Historic Paris Agreement on Climate Change - 195 Nations Set Path to Keep Temperature Rise Well Below 2 Degrees Celsius (PDF version) (United Nations Framework Convention on Climate Change, 2015/12/12)COP21 climate change summit reaches deal in Paris (BBC, 2015/12/13)COP21: Global Climate Agreement Reached At United Nations Talks In Paris (2015/12/13)What to Know About the Historic ‘Paris Agreement’ on Climate Change (Time, 2015/12/13)Obama: Climate agreement 'best chance we have' to save the planet (CNN, 2015/12/13)COP21: UN chief hails new climate change agreement as 'monumental triumph' (UN News Centre, 2015/12/13)Paris climate agreement ‘may signal end of fossil fuel era’ (The Guardian, 2015/12/13)COP21: What does the Paris climate agreement mean for me? (BBC News, 2015/12/14)Why the Paris agreement could be the beginning of the end for global warming denial (The Washington Post, 2015/12/18)Google Newsフランス語COP21COP21 / twitterCOP21 / FacebookLe Monde.fr - COP21Lancement de la COP21: une unité de façade et déjà des fractures (RFI, 2015/12/1)COP21 : les trois faits marquants de ce lundi 7 décembre (Le parisien, 2015/12/7)COP 21: un conditionnel, un marteau et beaucoup d'émotion (Libération. 2015/12/12)COP21 : ce que contient le premier accord mondial sur le climat de l'histoire (Le parisien, 2015/12/13)COP21 : Relever le défi d’une énergie renouvelable et enfin partagée (Le Mode, 2015/12/17)Google Actualités"},
{file:"/2015/10/18/eps-fig/",title:"EPSファイルの作成方法",mtime:1448158375,ctime:1445145779,body:"EPSファイルの作成方法 Excel や PowerPoint で作成した図を EPS ファイルにする方法。追記：PDFでいいよこの記事を作成した後に、使ってはいけない LaTeX のコマンド・パッケージ・作法を読んだところLaTeX の画像と言えば EPS 形式! という向きもありましたが，dvips を使っていたころの名残なので，そろそろ認識を改める必要があります．という記述がありました。EPS を提出する必要がある場合はしかたありませんが、これからはベクター画像は PDF を、ラスター画像は JPEG か PNG を使っていこうと思います。PDF からの変換まずは、EPS に変換したい画像が含まれる PDF ファイルを作成する。次に、作成したPDFファイルを適宜トリミングして、ちょうどいい大きさの PDF ファイルにする。Mac であれば、プレビューで PDF ファイルを開いて選択ツールで長方形の範囲選択をしてコピーし、「クリップボードから新規作成」でトリミングされたPDFファイルを作成できる。そして、PDFファイルを pdftops コマンドで EPS ファイルに変換する。Xpdf または、Xpdf を元に開発されている poppler をインストールすると、pdftops を使えるようになる。Mac ならば、brew install poppler でOK。そして、~pdftops -eps filename.pdf ~とすることで、filename.eps が作成される。WMF からの変換Window メタファイル (WMF) から直接 EPS ファイルを作りたくなるときもある。その場合には、Metafile to EPS Converter を使う。TeXを便利に使うツール類WMF2EPS もあるけれど、最新版の Windows だと動かないようだ。wmf2eps - PowerPoint等の図をEPS形式に変換TeXに張り付けるEPS形式の図をWindows上で作成する方法"},
{file:"/2017/09/27/bootMac/",title:"macOS 起動オプション",mtime:1506479479,ctime:1506479479,body:"macOS 起動オプション 通常の起動方法でうまく起動できないときの起動方法について、Mac の起動時のキーコンビネーション にまとめられている中から、トラブル時に自分が試みるであろう順番に記載する。セーフモードで起動Mac の電源を入れた直後、キーボードの「shift」キーを押し、そのまま押し続ける。ログインウインドウが表示されたら「shift」キーを放す。詳しくはセーフモードを使って Mac の問題を切り分けるを参照。シングルユーザモードで起動Mac の電源を入れた直後、キーボードの「command + S」キーを押して画面に白いテキストが表示されるまで、キーを押し続ける。詳しくはMac をシングルユーザモードまたは Verbose モードで起動するを参照。macOS 復元システムから起動Mac の電源を入れた直後に、キーボードの「command + R」キーを押して、Apple ロゴまたは回転する地球儀が表示されるまでそのまま押し続けることで、内蔵の macOS 復元システムから起動する。詳細はmacOS 復元についてを参照。なお、この記事を作成したきっかけは、macOS High Sierra へのアップグレードをしていたところ、システム再起動直後にProcess 1 exec of /sbinlaunchd failedのようなメッセージが表示されて起動に失敗し、何度も再起動をする、という現象が発生したためであるが、この方法で無事インストールを継続できた。USB メモリから起動Mac App Store から macOS インストーラをダウンロードする。macOS の起動可能なインストーラを作成するを参考に、USB メモリでブートディスク（起動可能なインストーラ）を作成する。DiskMaker X を使うと、ターミナルを使わずに USB ブートディスクを作成できる。他に起動できる Mac があるという前提であるが、緊急時のために平時にこのような USB メモリを準備しておいても良い。続いて、その USB メモリから起動する。外付けの Mac 起動ディスクを設定して使う方法に書かれている通り、Mac の電源を入れた直後に「option」キーを押し続け、Startup Manager のウインドウが表示されたら「option」キーを放す。起動ディスクを選択してから、矢印ボタンまたは「return」キーを押す。"},
{file:"/2015/10/21/iphone-multi-calendar/",title:"複数の Google カレンダーを iPhone に同期",mtime:1445406511,ctime:1445406511,body:"複数の Google カレンダーを iPhone に同期 Google カレンダーで複数のカレンダーを使っている場合には、Google カレンダーの設定ページ で表示させたいカレンダーにチェックする。詳しくはこちらのサイト。複数のGoogleカレンダーをiPhoneに同期させるための設定方法以前は、Exchange から Google アカウントを設定しないとこの設定ができなかったのでそうしていたのだけど、2013年1月30日から、Googleアカウントを用いて Exchange で新しい端末を登録できなくなっていた（2013年以前に登録していたアカウントは、そのまま使えていた）。そして、Exchange の設定で複数のカレンダーがうまく表示されなくなっていた。Exchange のアカウントを外して、Gmail のアカウントを設定してそちらでカレンダーをオンにしたら、複数カレンダーが表示された。ついでに、Apple iCal と Google カレンダーを同期する方法はこちら。Apple iCal と Google カレンダーを同期"},
{file:"/2015/11/17/file-extension/",title:"ファイルの拡張子について",mtime:1447708665,ctime:1447708665,body:"ファイルの拡張子について ファイルの拡張子とは、ファイルのデータ形式を識別するためにファイル名の最後につけられる文字列である。Windows や Mac では、ドット (.) の後に続く文字であり、たとえば、filename.txt という名前のファイルがあるときに、.txt の部分、あるいは txt の部分が拡張子である。拡張子とアプリケーションの関連付けWindows では、拡張子とアプリケーションが関連付けられているときに、ファイルをダブルクリックすると、関連付けられたプログラムでそのファイルが開く。たとえば、Microsoft Office をインストールすると、拡張子 docx は Microsoft Word に関連付けられるため、拡張子 docx のファイルをダブルクリックすると、Word でそのファイルを開くことができる。この関連付けを変える方法については、Windows のバージョンによって異なり、以下のサイトに解説されている。Windows 10でファイルとアプリの関連付けを変更する (できるネット)Windows 10でアプリケーションと拡張子の関連付けを変更する方法 (NEC Personal Computers)ファイル拡張子とアプリケーションの関連付けを変更する（Windows 8編） (@IT, 2013/3/29)Windows 8 / 8.1でアプリケーションと拡張子の関連付けを変更する方法 (NEC Personal Computers)Windows7 ： 拡張子の関連付け法（ダブルクリックで開くプログラムを変更する） (教えて！HELPDESK)[ファイルを開くアプリケーションソフトを変更したい拡張子の関連付けを変更したい](http://soft1.jp/trouble/w/w015.html) (HEARTSNET)Mac OS X では、v10.4 以降、UTI (Uniform Type Identifier) という仕組みでデータの種類を識別している。UTIによって拡張子とファイルタイプが関連付けられるため、拡張子によってファイルタイプを判別することができる。以下の方法で、拡張子とファイルの関連付けを変えることができる。Mac OS Xでファイルの関連付けをちょっと簡単に変更する方法 (@makopo, 2011/8/13)Mac ファイルの関連付けを変更する設定方法！ (アプリアン, 2015/4/26)拡張子を表示するWindows では、アプリケーションの関連付けがされているファイルの拡張子が、デフォルトでは表示されないようになっている。そのため、多くの人は拡張子を意識せず、そのようなものがあることを知らない。ファイルの種類は、アイコンの種類で識別されている。しかし、これは以下の理由でよろしくない。ウィルスの可能性の高い exe scr vbs com などの実行ファイルの拡張子が表示されない。たとえば、見積書.exe というファイル名で、ファイルのアイコンが Word のアイコンになっていたときに、拡張子が見えないと、アイコンの形だけで Word のファイルだと認識して、そのファイルを起動してしまう可能性がある。ファイル名を レポート.docx として保存したところ、さらに自動的に .docx の拡張子が付与されて、レポート.docx.docx といったようなファイル名となる。フォルダでは ``レポート.docx``` というファイル名で表示される、といったような混乱が生じる。ファイルの拡張子を表示する設定方法については、以下のサイトに解説されている。Windows の場合Windows10でファイルの拡張子を表示させる方法 (Win10ラボ)Windows 8 / 8.1でファイルの拡張子を表示する方法 (NEC Personal Computers)ファイルの拡張子を表示する - Windows 7 (Microsoft)ファイルの拡張子を表示させる方法を教えてください。 (Fujitsu FMVサポート)Mac の場合Mac - ファイルの拡張子を表示/非表示にする (PC設定のカルマ)Macでファイルの拡張子を常に表示させる方法 (MacPlus+, 2014/12/9)拡張子の文字数拡張子の取り扱いはOSによって異なり、また歴史的な変遷もあった。インターネットが普及しだしたころ、Windows では「ファイル名8文字 +  .  + 拡張子3文字」という 8.3 ファイル形式が使われていたため、HTML ファイルの拡張子を .HTM と3文字にする必要があったが、Macintosh や UNIX では拡張子の文字数が自由であったため、.html が使われていた。やがて Windows でも、Winows NT 3.5 と Windows 95 から長いファイル名がサポートされ、8.3 文字の制限がなくなった。そのような経緯もあり、拡張子はドットを除いて3文字以内のものが多いが、4文字以上のものもある。拡張子の例Wikipedia のファイルフォーマット一覧には、拡張子とファイルフォーマットが一覧にされている。ただし、拡張子はファイルのデータ形式に必ずしも対応していないため、参考であるとしている。また、画像、音声、動画等のコンテナのファイル形式が、それぞれまとめられている。その中から、いくつかを以下に抜粋する。|拡張子 |説明 |主な使用ソフトウェア |種類||--------|-----|-------------------------|-----||7z| 7-Zipペッドファイル   |7-Zip |アーカイブ||AAC |Advanced Audio Coding （音楽ファイルの標準の1つ） ||音声|ACCDB |データファイル |Microsoft Access Database (Open XML)|データベース||AVI |Audio Video Interleaved 動画ファイル |Video for Windows、他多数|動画||BAT |バッチファイル|MS-DOS, RT-11|スクリプト||BMP|Windows、OS/2のビットマップ画像ファイル |QPeg、CorelDraw、PC Paintbrush、他多数|画像||BZ2 |圧縮ファイル |bzip2|圧縮||C |C言語ソース |GCCなど|ソース||CGI |Common Gateway Interface スクリプト | |スクリプト||CLASS|Java classファイル |Java|実行||COM |コマンドファイル |DOS|実行||CSS |カスケーディング スタイル シート| |スクリプト||CSV |カンマ区切りテキストファイル (Comma Separated Values) |||DOC |ドキュメントファイル。テキストファイル形式の説明書。| 多数 |文書||DOC|ワープロファイル |Microsoft Word、他 |文書||DOCM |Microsoft Word 2007 以降で作成されたマクロ機能有効な文書ファイル |Microsoft Word |文書||DOCX |Office Open XML ドキュメント |Microsoft Word|文書||DLL|Dynamic Link Library, 動的リンクライブラリ |Windows |実行||DVI |DeVice Independent document |TeX|文書||EPS|Encapsulated PostScript |CorelDraw - PhotoStyler - PMView - Adobe Illustrator - Ventua Publisher|画像||EXE |実行可能なプログラム |DOS, Windows|実行||FLV |Flash ビデオファイル |Flash Video Player|動画||GIF |Compuserves' Graphics Interchange Format |QPeg - Display - CompuShow |画像||GZ |圧縮ファイル |GNU zip - WinZipNT|圧縮||HTM |HTML 参照||文書 ||HTML |Hypertext Markup Language (WWW)  |Netscape - Mosaic - 多数 |文書||INDD |InDesign 文書 |Adobe InDesign|文書 ||INI |初期設定ファイル |||JAVA |Java ソースコード ||ソース ||JPEG |Joint Photography Experts Groupファイルフォーマット |多数 |画像||JPG |JPEGを参照 |多数 |画像||LZH |アーカイブ |LHA/LHARC|アーカイブ||MDB |Microsoft DataBase |Microsoft Access |データベース||MID |標準 MIDI ファイル |music synthetizers, Winamp|音声 ||MIDI |MID 参照 ||音声 ||MOV |動画形式 (Mac) |QuickTime|動画||MP3 |MPEG オーディ オストリーム, レイヤー3 |AWAVE, CoolEdit(+PlugIn), Winamp |音声||MP4 |マルチメディアコンテナ形式 MPEG 4 Part 14 |Winamp |音声||MPEG |マルチメディアコンテナ形式 |MPEG Player, Winamp |音声/動画||MPG |MPEGを参照    ||音声/動画||PDF |Adobe's Portable Document Format |Adobe Acrobat Reader|文書||PHP |PHP ファイル ||スクリプト ||PNG |Portable Network Graphics, Animated Portable Network Graphics |多数 |画像/動画||PPS |Microsoft PowerPoint Slideshow |Microsoft PowerPoint|プレゼンテーション||PPT |Microsoft PowerPoint プレゼンテーション |Microsoft PowerPoint|プレゼンテーション||PPTM |マクロ付き PowerPoint ファイル |Microsoft PowerPoint|プレゼンテーション||PPTX |Office Open XML プレゼンテーション |Microsoft PowerPoint|プレゼンテーション||PS |PostScript 形式の文書 |Adobe|文書||PSD |Photoshop bitmap file |Photoshop document|画像 ||PY |Python スクリプトファイル |Python |スクリプト||RB |Ruby スクリプトファイル |Ruby |スクリプト||RTF |Rich Text Format |ワードパッドなど多数 |文書||SVG |Scalable Vector Graphics, 多数 ||画像||TAR |アーカイブ |TAR |アーカイブ||TGZ |アーカイブ |WindowsZipNT - TAR - GNUzip |アーカイブ||TIF |TIFFを参照 ||画像||TIFF |TIFF (tagged image format file) bitmapped file |Alchemy - PhotoStyler -PageMaker - CorelDRAW |画像||TTF |TrueType Font ||フォント||TXT |ASCIIテキストファイルの一般的な名称 |メモ帳、テキストエディタなど多数 |文書||XLS|Microsoft Excelの表計算ファイル |Microsoft Excel |表計算||XLSM |Microsoft Excel 2007 Macro-Enabled Workbook (Spreadsheets) |Microsoft Excel 2007|表計算||XLSX |Office Open XML Workbook (スプレッドシート) |Microsoft Excel 2007 |表計算||XML |eXtensible Markup Language 文書 | |文書||WAV |音声形式 |Media Player |音声||ZIP |ZIPアーカイブ |PKZip, WinZip, Mac OS X、他多数 |アーカイブ|"},
{file:"/2019/09/12/java/",title:"「プログラミング実習講義」参考サイト",mtime:1581249669,ctime:1568241964,body:"「プログラミング実習講義」参考サイト 「プログラミング実習講義」の授業で参考にするサイトへのリンクです。講義全般プログラミング実習講義: 講義情報受講者専用ページ (東洋大学外からはアクセス不可)ToyoNet 情報関連ポータルプログラミング教育プログラミング教育 (文部科学省)プログラミング言語プログラミング言語の比較 (Wikipedia)TIOBE Index2019年、人気のプログラミング言語トップはPython。Java、Cが続く。IEEE Spectrumによる調査 (Publickey, 2019年9月9日)Most Popular Programming Languages 1965 - 2019 (Data is Beautful, YouTube, 2019/10/7)子供が使える！ビジュアルプログラミングソフト5選 (TechAcademy マガジン, 2014年4月23日)オンライン実行環境paiza.ioideone.comjdoodle.comJava 言語の基礎Java SEOracle OpenJDKWindowsにOpenJDK 12(Oracle版)をインストールする手順 (WEB ARCH LABO)いまさら聞けない【情シス基礎知識】Javaの種類と有償化の関係 (情シスNavi, 2019年3月11日)Wikipedia - ボディマス指数アルゴリズムフローチャートの書き方  (三日市康博, 丸山博)Wikipedia - ソートQuick-sort with Hungarian (Küküllőmenti legényes) folk dance (YouTube)ハノイの塔 (JavaScript)ハノイの塔 (Flash)高精度計算サイト"},
{file:"/2015/10/26/dentist/",title:"歯科診療",mtime:1445815383,ctime:1445815383,body:"歯科診療 奥歯の被せ物（銀歯）が外れたので、入れてもらった。外れた銀歯を保管して持って行ったら、そのままはめられた。歯科医師の先生に聞いた話のメモ。私は医者ではないので、ここに書かれていることは信用しないでください。銀歯を入れたのは2年前。外れたのははじめて。とりあえず、今回はそのままはめ直し。今後、何度も外れるようだったら、適合性が悪くなっているので作り直す必要があるかもしれない。その時は、また考える。老化による歯の退化により、適合性が悪くなる可能性もある。歯周病の予防に効くとされているガムが売られているが、歯に詰め物がある場合は、やめた方がいい。顎関節症について、今のところは特に問題ないが、気をつける必要あり。クリッキング。歯磨きについて。だいたいよく磨けているが、下の前歯裏と、右の奥歯裏をもっと丁寧に。最初に歯磨き粉をつけずに丁寧に磨いて、最後に歯磨き粉をつけて軽く磨くと良い。歯磨き粉はつけないでも良い。歯と歯の間をよく磨くためには、歯ぶらしを大きく動かさずに、１本１本小刻みに動かす。歯間ブラシ：下の前歯と、下の左奥歯（銀歯）の横関連サイト歯の詰め物が取れた時の３つの対処法と４つのやってはいけないこと日本臨床歯周病学会：一般の皆様へ日本顎関節学会：一般の方へ"},
{file:"/2015/11/06/word-link/",title:"Word 参考サイト",mtime:1446783828,ctime:1446783828,body:"Word 参考サイト Microsoft Word の使い方について解説しているサイトへのリンクです。Windows 版「Office 2016」で何が変わった？--生産性を上げる10の特長 (ZDNet, 2015/10/8)ワード2013基本講座 (よねさん)Office 2013 トレーニングビデオ (Microsoft)ワード2010基本講座 (よねさん)動画マニュアル：Word 2010 使い方 (Webdemo Inc)ワード2007基本講座 (よねさん)Mac 版Word for Mac 2011 のトレーニング (Microsoft)マイクロソフト ワード (Microsoft Word 2008) for Mac 使い方辞典関連記事Excel 参考サイトPowerPoint 参考サイトオフィスソフトの比較"},
{file:"/2017/08/30/KualaLumpur/",title:"クアラルンプール滞在メモ",mtime:1504079718,ctime:1504079718,body:"クアラルンプール滞在メモ クアラルンプール滞在時のメモです。全般クアラルンプールナビ天気在マレーシア日本国大使館レート変動交通MRT : SBK LineGOKL City Bus : ブログ記事Airport Coach : KLIA Bukit BintangPavillion : map / 1F tealiveLot 10 : map / wikipedia MRT Bukit Bintang SBK 出口D / LBF フードコート 福記 / 1F H&M, The Coffee Bean & Tea Leaf, モノレールSungei Wang Plaza : map  / B1 Giant Supermarket, Uncle Jack, Chicken Rice shop / LG 両替屋（オレンジエレベータ降りてすぐ、左へ曲がって計3店） / 3F 食事Plaza Low Yat : map / IT系のモール / LB 食事Berjaya Times Square : map / 1F スタバ / LG Hero marketJalan Alor : mapHotel Royal Kuala Lumpur : map / bookingクアラルンプール国際空港 KUL施設情報KLIA1のメインターミナル2F フードコートドリアンMusang king (猫山王) : 屋台参考価格 (Jalan Alor, 8月末) RM 60-70 / kgUdan merah (紅蝦) : 屋台参考価格 RM 30 / kg通信Digi のプリペイド SIM : ブログ記事国際電話 / +60 / 日本へ 00-81- / 日本から 010-60-(国内番号)"},
{file:"/2016/06/06/github-many-files/",title:"Uploading many files to GitHub repository",mtime:1465161538,ctime:1465161538,body:"Uploading many files to GitHub repository As GitHub introduced unlimited private repositories, I uploaded gigabytes of data to GitHub repository. Here is some technical notes for uploading many files to GitHub repository.Storage and bandwidth limit of large filesGit Large File Storage (LFS) is required to push a file larger than 100 MB to GitHub repository. There is a storage and bandwidth limit for LFS, and if you exceed the limit you need to buy extra storage and bandwidth.You may want to use LFS to handle the large files, or you may just want to ignore the large files. Both methods are written in this article.Create a repositorySign in to GitHub and create a repository with New reposiroty button (Don't check Initialize this repository with a README). If there is no REAME.md, create a tentative file withecho  # test  >> README.mdand run the following commands to initialize the repository and add README.md (Rewrite USER and REP).git initgit add README.mdgit commit -m  First commit git remote add origin git@github.com:USER/REP.gitgit push -u origin masterRemove spaces from the file namesThis command replace spaces     into underscores  _  in the file names under the current directory.for A in $(find . | grep     | sed -e s/   /x3Exe/g) ; do mv  $(echo $A | sed -e s/x3Exe/' '/g)   $(echo $A | sed -e s/x3Exe/'_'/g) ; doneIf there are spaces in the name of the directory, error may arise. Just repeat this command until no error is shown.Manage file with LFSSkip this step when not using LFS. For using LFS, install LFS first. Then setup LFS to Git bygit lfs installFiles larger than 100 MB can be listed withfind . -size +100M | xargs du -shDesignate the file to manage with LFS from this list. For example, to track files of .psd extention:git lfs track  *.psd Ignore large filesWhen not using LFS, large files can be ignored with .gitignore file.To add all the files larger than 100 MB to .gitignore:find . -size +100M | sed -e 's/^.\///' >> .gitignoreIncrease the HTTP post buffer sizeWhen pushing large files, error may arisepacket_write_wait: Connection to 192.30.252.123: Broken pipefatal: The remote end hung up unexpectedlyerror: failed to push some refs to 'git@github.com:USER/REP.git'To avoid this, increasing the HTTP post buffer size is recommended. To increase the buffer size to 50 MB,git config http.postBuffer 52428800Adding files to repositoryStandard way to adding all the files to repository is git add -A; git commit; git push, but it does not succeed when trying to add gigabytes of files; fatal: The remote end hung up unexpectedly error arises even when the HTTP buffer size is increased. Therefore I made the following shell script, gitadd, to add all the files in the current directory step by step.{% gist 570495bd0627acff6c836de18e78f6fd %}When you get error by git add -A; git commit; git push, you can reset the commit and index by git reset HEAD~ and run gitadd after that.Japanese version of this post"},
{file:"/2016/12/13/Primality/",title:"素数判定ゲーム",mtime:1481599125,ctime:1481599125,body:"素数判定ゲーム 素数判定の問題に答えるターミナルで動くゲームを作った。「パッと見素数」に気をつけろ！という記事に紹介されている素数大富豪というゲームでは、素数を素早く判定することが要される。そのための練習用プログラムとして考えたものであるが、素数大富豪とは独立した一人遊びゲームとして成立している。シルルさん作成の素数大富豪のCPU対戦ゲームもある。遊び方Python 3 が必要。こちらからプログラムをダウンロードして、chmod +x primequiz.pyで実行可能としてから、./primequiz.pyでプログラムを実行する。10 questions for primality.[371, 61, 101, 337, 143, 237, 239, 153, 57, 311]371 is prime? Type return to show the answer.のように表示される。371が素数かどうかを聞かれているので、頭の中で答えを出してリターンキーを押すとComposite. 371 = 7 * 53のように表示される。「素数だと思ったけど7で割れたか」といったように一人納得するゲームである。同様に、このように続けられる。61 is prime? Type return to show the answer. Prime!101 is prime? Type return to show the answer. Prime!337 is prime? Type return to show the answer. Prime!143 is prime? Type return to show the answer. Composite. 143 = 11 * 13237 is prime? Type return to show the answer. Composite. 237 = 3 * 79239 is prime? Type return to show the answer. Prime!153 is prime? Type return to show the answer. Composite. 153 = 3 * 3 * 1757 is prime? Type return to show the answer. Composite. 57 = 3 * 19311 is prime? Type return to show the answer. Prime!問題は全部で10問出題される。これは rep 変数を書き換えることによって変えることができる。出題される数字の最小値は 29 である。これは first 変数で設定されている。出題される数字の最大値は 400 である。これは last 変数で設定されている。「すぐに分かる数」は出題されない。すなわち、出題される数字は「素数」か「パッと見素数の合成数」となる。素数が出題される確率がちょうど2分の1となるように調整されている。ここで、「すぐに分かる数」は2か5の倍数各桁がすべて3の倍数であるobvious リストに設定されている数字のいずれかを満たす数字である。three 変数を True に設定すると、3の倍数が「すぐに分かる数」とされるため、出題される数字の難易度が全体的に上がる。現状の設定で慣れてきたら、少しずつ first や last の数字を上げたり、three=True としたり、obvious リストを追加したりすることで、自分好みの難易度に調整することができる。正答数を数えたり時間を計ったりすればもう少しゲームっぽくなるが、面倒なのでとりあえずはこんな感じで。お好みで、パスの通っている場所に置いて遊んでください。出題される数字の一覧./primequiz.py pとすることで、出題範囲の素数と合成数の一覧が次のように表示される。List of primes[29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397]List of composite numbers51 = 3 * 1757 = 3 * 1987 = 3 * 2991 = 7 * 13111 = 3 * 37117 = 3 * 3 * 13119 = 7 * 17121 = 11 * 11123 = 3 * 41129 = 3 * 43133 = 7 * 19141 = 3 * 47143 = 11 * 13147 = 3 * 7 * 7153 = 3 * 3 * 17159 = 3 * 53161 = 7 * 23169 = 13 * 13171 = 3 * 3 * 19177 = 3 * 59183 = 3 * 61187 = 11 * 17189 = 3 * 3 * 3 * 7201 = 3 * 67203 = 7 * 29207 = 3 * 3 * 23209 = 11 * 19213 = 3 * 71217 = 7 * 31219 = 3 * 73221 = 13 * 17231 = 3 * 7 * 11237 = 3 * 79243 = 3 * 3 * 3 * 3 * 3247 = 13 * 19249 = 3 * 83253 = 11 * 23259 = 7 * 37261 = 3 * 3 * 29267 = 3 * 89273 = 3 * 7 * 13279 = 3 * 3 * 31287 = 7 * 41289 = 17 * 17291 = 3 * 97297 = 3 * 3 * 3 * 11299 = 13 * 23301 = 7 * 43319 = 11 * 29321 = 3 * 107323 = 17 * 19327 = 3 * 109329 = 7 * 47341 = 11 * 31343 = 7 * 7 * 7351 = 3 * 3 * 3 * 13357 = 3 * 7 * 17361 = 19 * 19371 = 7 * 53377 = 13 * 29381 = 3 * 127387 = 3 * 3 * 43391 = 17 * 23"},
{file:"/2015/11/26/el-capitan-homebrew/",title:"El Capitan とHomebrew",mtime:1448499429,ctime:1448499429,body:"El Capitan とHomebrew El Capitan & Homebrew には、OS X 10.11/El Capitan 以降でHomebrew をインストールするために、 /usr/local ディレクトリを作成して所有者を一般ユーザーとする方法について、このように解説されている。OS X 10.11/El Capitan では、System Integrity Protection (SIP, rootless) というセキュリティの機能により、/usr, /System と /bin ディレクトリの下は、root であっても書き込みができなくなった。ただし、/usr/local の下は書き込みができる。ところが、/usr/local ディレクトリがない場合、あるいは消してしまった場合には、/usr ディレクトリの下が書き込みできないため、/usr/local ディレクトリを簡単に作成できない。その時には、このようにする。/usr/local がすでに存在する場合sudo chown -R $(whoami):admin /usr/local/usr/local が存在しない場合まずは、通常の方法で /usr/local の作成を試みる。sudo mkdir /usr/local && sudo chflags norestricted /usr/local && sudo chown -R $(whoami):admin /usr/localSIP のためにこの方法で /usr/local の作成ができなかったときには、このようにする。Command + R キーを押しながら再起動して、復元システムを起動する。ターミナルを起動して、このコマンドを実行する。`csrutil disable`通常の方法で再起動する。ターミナルを起動して、このコマンドを実行する。sudo mkdir /usr/local && sudo chflags norestricted /usr/local && sudo chown -R $(whoami):admin /usr/localCommand + R キーを押しながら再起動して、復元システムを起動する。ターミナルを起動して、このコマンドを実行する。csrutil enable通常の方法で再起動する。これで、/usr/local に一般ユーザー権限で書き込み可能となり、Homebrew のインストールが可能となる。"},
{file:"/2015/10/12/cheetsheet/",title:"マークダウン文法チートシート",mtime:1444649361,ctime:1444649361,body:"マークダウン文法チートシート マークダウン記法、Kramdown 記法を、このサイトの著者が自分用に簡潔にまとめたものです。ソースコードを参照して使います。適宜、アップデートします。基本なべやかん（引用）ヘッダー1個目2個目コードの例return shell_exec( echo $input | $markdown_script );kramdown: A Markdown-superset converterMaruku:     Another Markdown-superset converterThis is some text.[^1]. Other text.[^footnote].表見栄えはスタイルシートで調整。|---| デフォルト | 左寄せ | センタリング | 右寄せ|-|:-|:-:|-:| First body part | Second cell | Third cell | fourth cell| Second line |foo | strong | baz| Third line |quux | baz | bar数式Jekyll 上での数式の表示$$\begin{align*}\frac{\partial \theta}{\partial t}= \frac{\partial}{\partial z}\left[ K(\theta) \left (\frac{\partial \psi}{\partial z} + 1 \right) \right]\\end{align*}$$コード~~Here comes some code.~~ rubydef what?42endHow to embed a Gist on GitHub Pages using Jekyll{% gist 63b5987deb3baca8f546 %}Front matterlayout: posttitle:tag:複数タグ~layout: posttitle:tags:tag1tag2~layout: post-enlayout: math特殊文字& < > ©参考サイトMarkdown syntaxKramdown syntaxLiquid DocumentationHTML Entity List"},
{file:"/2016/06/03/github-many-files/",title:"GitHub リポジトリに大量のファイルを一括登録する方法",mtime:1464905814,ctime:1464905814,body:"GitHub リポジトリに大量のファイルを一括登録する方法 GitHub で1ヶ月7ドルの Personal Plan でプライベートリポジトリ作成無制限となったので、いろいろなファイルをバックアップ用にプライベートリポジトリに入れることとした。その時に、はまったところがあるので、はまるポイントを回避しつつ、大量のファイルをリポジトリに一括登録する方法をまとめた。100MB 以上のファイルと追加料金GitHub では、100MB 以上のファイルをリポジトリに push しようとするとエラーとなる。Git Large File Storage (LFS)を使うと、100MB 以上のファイルを扱えるようになる。ここで、Personal Plan では 100MB以下のファイルについては容量無制限だが、100MB以上の LFS 管理のファイルについては 1GB までの容量制限があり、オーバーするとLFSの容量を追加購入しなければ LFS が使えなくなる。LFSは容量50GBと帯域 50GB / month を$5/monthで購入可能である。そこで、100MB以下のファイルだけを git リポジトリに入れる、という使い方と、LFS で全てのファイル（あるいは一部の大容量ファイル）を入れる、という使い方が考えられる。ここでは、両方の使い方に対応して記述する。リポジトリの作成GitHubにサインインしてNew reposirotyボタンからリポジトリを作成する。通常はリポジトリを初期化して git clone から始めるが、ここではすでに手元にリポジトリに登録しようとするファイルがあるという状況の話をしているので、Initialize this repository with a README にはチェックを入れずにリポジトリを作成する。まず、REAME.md が存在しなければ、仮のファイルをecho  # test  >> README.mdとして作成する。続いて、次の一連のコマンドでリポジトリを初期化し、README.md をリポジトリに追加し、初期設定をする（USER と REP は書き変える）。git initgit add README.mdgit commit -m  First commit git remote add origin git@github.com:USER/REP.gitgit push -u origin masterファイル名からスペースを取り除くファイル名にスペースが入っていると色々と面倒なので、このコマンドで、カレントディレクトリ以下のファイル名について、スペースをアンダースコア「_」に一括置換してしまうのが良いと思う（それによって何らかの問題が生じないのであれば）。for A in $(find . | grep     | sed -e s/   /x3Exe/g) ; do mv  $(echo $A | sed -e s/x3Exe/' '/g)   $(echo $A | sed -e s/x3Exe/'_'/g) ; doneディレクトリ名にもスペースがある場合には、エラーが出ることがある。その時には、エラーが出なくなるまで何回か同じコマンドを繰り返す。LFS 管理をするファイルの選択LFS を使わないのであればここはとばす。LFSを使う場合、まずは、LFS をインストールする。Homebrew であればbrew install git-lfsである。そして、Git に LFS をセットアップする。git lfs install次に、100MB 以上のファイルを一覧する。find . -size +100M | xargs du -shこの中から、LFS管理とするファイルを適宜指定する。例えば、拡張子 .psd のファイルをまとめて指定するにはgit lfs track  *.psd git で管理しないファイルの設定LFSを使わない場合、あるいはLFSを一部のファイルのみにしか使わない場合には、git で管理をしないファイルを .gitignore に設定する。100MB以上のファイルをすべて .gitignore ファイルに加えるにはfind . -size +100M | sed -e 's/^.\///' >> .gitignoreバッファサイズの設定大きいファイルを git push するとpacket_write_wait: Connection to 192.30.252.123: Broken pipefatal: The remote end hung up unexpectedlyerror: failed to push some refs to 'git@github.com:USER/REP.git'といったエラーが出やすいので、エラーを出にくくするためにHTTP post バッファサイズを上げると良い。50MB に上げるにはgit config http.postBuffer 52428800リポジトリに追加git add -A; git commit; git push で追加できれば良いのだけれど、何ギガバイトもあるような大量のファイルをリポジトリに追加しようとすると、バッファイサイズを上げても fatal: The remote end hung up unexpectedly のエラーが出ることがある。そこで、段階的にファイルをリポジトリに追加するスクリプト gitadd を作成した。{% gist 570495bd0627acff6c836de18e78f6fd %}最初に git add -A; git commit; git push をやってエラーが出ててしまった時には git reset HEAD~ で commit と index を戻してから、このスクリプト gitadd を実行する。100MB 以上のファイルがあってエラーとなる場合Filename というファイルが 100MB 以上で、File Filename is 230.01 MB; this exceeds GitHub's file size limit of 100.00 MBというようなエラーが出て git push できないとき、そのファイルを git 管理から除き、履歴から完全に削除する。git rm --cached Filenamegit commit --amend -CHEADgit filter-branch --index-filter 'git rm --cached --ignore-unmatch Filename' HEADgit push origin mastergit filter-branch --index-filter 'git rm --cached --ignore-unmatch Filename' HEAD に対して A previous backup already exists in refs/original/ のようなメッセージが出た時には、git update-ref -d refs/original/refs/heads/masterで refs/original/ を消す。必要に応じてLFS管理に入れてコミットし直す。git lfs track Filenamegit add Filenamegit commit -m lfsgit push origin master管理git pull; git add -A; git commit -m  commit  && git pushとすればアップデートされていくので、お好みで crontab に入れる。"},
{file:"/2017/05/05/open-command/",title:"How to open a file from a terminal emulator",mtime:1493926145,ctime:1493926145,body:"How to open a file from a terminal emulator This article describes how to open a file from a terminal emulator in Mac, Linux, and Windows.Mac (macOS)Use  open command in Terminal. By runningopen Readme.txtReadme.txt opens with an application associated with Readme.txt. URL can be specified. For example,open http://google.comopens Google website with your default web browzer. A directory can also be specified. For example,open .opens current directly in Finder.Sometimes you may want to open a file with a program which is different from the associated one, for example, when you want to edit html file with a text editor. By using -t option, you can open a file with a default text editor.open -t filenameYou can also open a file with a specified application by using -a option.You can make a shell script to open a file with your favorite text editor. For example, to open a file with Brackets, make a text file br like this,!/bin/shopen $1 -a /Applications/Brackets.appmake it executable (chmod +x br) and put in your path (check it by echo $PATH). Then you can use the br command asbr filenameFollowing help is shown by open --help.Usage: open [-e] [-t] [-f] [-W] [-R] [-n] [-g] [-h] [-s ][-b ] [-a ] [filenames] [--args arguments]Help: Open opens files from a shell.  By default, opens each file using the default application for that file.  If the file is in the form of a URL, the file will be opened as a URL.Options:   -a                Opens with the specified application.  -b                Opens with the specified application bundle identifier.  -e                Opens with TextEdit.  -t                Opens with default text editor.  -f                Reads input from standard input and opens with TextEdit.  -F  --fresh       Launches the app fresh, that is, without restoring windows. Saved persistent state is lost, excluding Untitled documents.  -R, --reveal      Selects in the Finder instead of opening.  -W, --wait-apps   Blocks until the used applications are closed (even if they were already running).      --args        All remaining arguments are passed in argv to the application's main() function instead of opened.  -n, --new         Open a new instance of the application even if one is already running.  -j, --hide        Launches the app hidden.  -g, --background  Does not bring the application to the foreground.  -h, --header      Searches header file locations for headers matching the given filenames, and opens them.  -s                For -h, the SDK to use; if supplied, only SDKs whose names contain the argument value are searched.                    Otherwise the highest versioned SDK in each platform is used.With cdto you can add a toolbar in the Finder to open the current directory in the Terminal.Linuxxdg-open can be used to open a file with default applications. xdg-open is a part of xdg-utils.xdg-open(1) - Linux man pageThis command is a little bit too long to type, and therefore you may want to create alias such asalias open=xdg-openin .bashrc. In Gnome, gnome-open is also available.gnome-open - manual page at Ubuntu xenialWindowsstart command can be executed from command prompt, and Invoke-Item command is used for PowerShell. See following documents by Microsoft for detail.startInvoke-ItemJapanese version of this post"},
{file:"/2015/11/23/mac-terminal-japanese/",title:"Mac のターミナルで日本語入力",mtime:1448215535,ctime:1448215535,body:"Mac のターミナルで日本語入力 Mac OS X のターミナルで日本語入力をするための設定。だいたいはデフォルトでうまくいくようだけど、うまくいかない時の確認用。ターミナル＞環境設定＞設定＞詳細＞Control + V で非ASCII入力をエスケープ　のチェックをはずす。ターミナル＞環境設定＞設定＞詳細＞テキストエンコーディング　を Unicode (UTF-8) にする。環境変数の設定 LANG=ja_JP.UTF-8~/.inputrc に、以下の設定をするset input-meta on set output-meta on set convert-meta off参考サイトコマンドラインでの文字化け解決?: '\M-c'とは... (rcmdnk's blog, 2013/5/29)メタキー/ESCについて: iTermでそれらのキーを送る設定も  (rcmdnk's blog, 2013/5/30)MacBook Air ターミナルからtelnetした先で日本語入力したら文字化けしちゃう問題が解決したのでメモっとく (Solr, Python, MacBook Air in Shinagawa Seaside RSSフィード, 2008/3/4)Macでロケール環境変数を設定しようとした話 (綴点, 2015/1/13)"},
{file:"/2017/05/06/derivative-exp-log/",title:"指数と対数関数の微分",mtime:1578209867,ctime:1494006572,body:"指数と対数関数の微分 指数と対数関数の微分をする。$e^x$ を微分すれば $e^x$ で、$\log x$ を微分すれば $1/x$ であるということは、とても単純で覚えやすいため「なぜそうなるか」はあまり理解されずに公式として覚えられていることが多いのではなかろうか。ここでは、$e$の意味を確認するとともに、指数と対数関数の微分を計算する。高校の数学IIIで学習する極限、導関数の定義、合成関数の微分が理解できていれば読めるずである。自然対数の底 $e$まずはネイピア数 (Napier's constant) すなわち自然対数の底$e$について記す。これは、円周率$\pi$のような数学定数の一つであり、$ e = 2.71828 18284 59045 \ldots $ と続く無理数である。この定数は単に$e$と呼ばれたり「自然対数の底」と呼ばれることが多く、オイラー数 (Euler's number) と呼ばれることもあるが、オイラーの定数 (Euler's constant) と紛らわしい。この数字は、1618年のネイピアの本にはじめて出たとされるが、その本には定数そのものの記載はなく、ベルヌーイが1683年に次の式の右辺の極限を求めようとしたことがこの定数の初出だとされる。その収束する値が$e$の定義であるとして、$e$の定義を記す（$e$の定義には他の方法もあるが、このページではそのようにする）。[[ e = \lim_{n \to \infty}\left( 1 + \frac{1}{n} \right)^n ]]この式が「なぜ収束するか」についてはこの記事では触れずに「そういうものだ」として扱うが、この式の極限が収束する様子を少し計算してみる。| $n$ | 1 | 2 | 5 | 10 | 100 | 1000 | 10000 | 100000 | 1000000 || $\left( 1 + \frac{1}{n} \right)^n$ | 2     | 2.25 | 2.48832 | 2.59374 | 2.70481 | 2.71692 | 2.71815 | 2.71827 | 2.71828 |style= max-width: 100%; height: auto; max-height: 100% >このブラウザはHTML5のCanvas要素に対応していないためグラフを表示できません。var c = document.getElementById('canvas');var ctx = c.getContext('2d');ctx.font =  16px serif ; ctx.lineWidth = 1;ctx.originX = 50; ctx.originY = 250;ctx.unitX = 2; ctx.unitY = -50;ctx.scaleX = 50; ctx.offsetScaleY = 20;ctx.vectorWidth = 5; ctx.vectorHeight = 8;ctx.labelX =  n ; ctx.labelY =  (1+1/n) ;drawAxis(ctx); drawScaleX(ctx); drawScaleY(ctx);ctx.font =  12px serif ; ctx.fillText( n , 102, 12);ctx.strokeStyle =  red ; draw(ctx, f);function f(x){return Math.pow(1+1/x, x);}さて、$e$の定義式で$h=1/n$とすると$n \to \infty$で$h \to 0$なので、[[ e = \lim_{h \to 0}\left( 1 + h \right)^{1/h} ]]となる。ここで、この式が成り立つためには$e$の定義式の極限が$n \to -\infty$の極限でも一致することを確認する必要があるが（そうでなければ、$h \to +0$ と $h \to -0$ が一致しないため $h \to 0$ が収束しない）、実際にそれが一致することは、最後に「付録」で証明する。さて、上の式から[[ \begin{array}{rl} \lim_{h \to 0}\left( \frac{e^h-1}{h} \right) &=& \lim_{h \to 0}\left[ \frac{\left\{ (1+h)^{1/h} \right\}^{h}-1}{h} \right] \cr\cr &=& 1 \end{array} ]]となる。この式を、次の指数関数の微分で使う。指数関数 $e^x$ の微分微分の定義から[[ \begin{array}{rl} \frac{d}{dx}e^x &=& \lim_{h \to 0}\left( \frac{e^{x+h}-e^x}{h} \right) \cr\cr &=& e^x \lim_{h \to 0}\left( \frac{e^{h}-1}{h} \right) \cr\cr &=& e^x \end{array} ]]となる。すなわち、指数関数 $e^x$ は微分して自分自身になる関数である。対数関数 $\log x$ の微分[[ y = \log x ]]とする。ここで、log は自然対数であり、自然対数の底$e$が省略して書かれている。このページで底が省略されている対数関数は、すべて自然対数である。すなわち$ y = \log_e x $であるから[[ x = e^y ]]となり、この式の両辺を $y$ で微分して[[ \frac{dx}{dy} = \frac{d}{dy}e^y = e^y = x ]]となる。したがって、対数関数$y=\log x$の微分$\frac{dy}{dx}$は[[ \frac{dy}{dx} = \frac{1}{\frac{dx}{dy}} = \frac{1}{x} ]]となる。ここで、$\frac{dx}{dy}$ の逆数が $\frac{dy}{dx}$ であるとしているが、そのような計算をして良いのかという疑問が生じる。微分記号の $dx$ は$x$ の微小変化、$dy$はそれにともなう$y$の微小変化であり、$dx$と$dy$はそれぞれ「ある数」であって、その数がともに0へ収束する極限 ($dx \to 0$ かつ $dy \to 0$) を考えているのであるから、$\frac{dx}{dy}$ の逆数が $\frac{dy}{dx}$ であることは素直に納得できる。指数関数 $a^x$ の微分[[ y = a^x ]]の導関数を計算する。両辺の自然対数を取る。[[ \log y = \log (a^x) = x \log a ]]両辺を $x$ で微分する。[[ \frac{d}{dx} (\log y) = \log a ]]この式の左辺は、$u = \log y$ として合成関数の微分を使うと[[ \frac{du}{dx} = \frac{du}{dy} \frac{dy}{dx} = \frac{1}{y} \frac{dy}{dx} ]]となるため、[[ \frac{1}{y} \frac{dy}{dx} = \log a ]]すなわち、$y = a^x$ の導関数は[[ \frac{dy}{dx} = (\log a)y = (\log a)a^x ]]である。対数関数 $\log_a x$ の微分[[ \frac{d}{dx}(\log_a x) = \frac{d}{dx}\left(\frac{\log x}{\log a}\right) = \frac{1}{(\log a)x} ]]となる。付録[[ \lim_{n \to \infty}\left( 1 + \frac{1}{n} \right)^n ]]が収束することがわかっているときに、その収束する値が、$n \to -\infty$ の極限でも一致することを示す。[[ \begin{array}{rl}  \lim_{n \to -\infty}\left( 1 + \frac{1}{n} \right)^n &=& \lim_{n \to \infty}\left( 1 - \frac{1}{n} \right)^{-n}  \cr\cr &=& \lim_{n \to \infty}\left( \frac{n-1}{n} \right)^{-n}  \cr\cr &=& \lim_{n \to \infty}\left( \frac{n}{n-1} \right)^{n}  \cr\cr &=& \lim_{n \to \infty}\left( 1+\frac{1}{n-1} \right)^{n}  \cr\cr &=& \lim_{n \to \infty}\left( 1+\frac{1}{n} \cdot \frac{n}{n-1} \right)^{n}  \cr\cr &=& \lim_{n \to \infty}\left( 1+\frac{1}{n} \cdot \frac{1}{1-1/n} \right)^{n}  \cr\cr &=&  \lim_{n \to \infty}\left( 1 + \frac{1}{n} \right)^n \end{array} ]]以上で証明された。"},
{file:"/2015/10/22/upgrading-apache/",title:"Apache 2.2 から 2.4 にアップグレードするときのバーチャルホスト設定の更新",mtime:1445474123,ctime:1445474123,body:"Apache 2.2 から 2.4 にアップグレードするときのバーチャルホスト設定の更新 Debian のサーバーを wheezy から jessy にアップグレードしたときに、apache のバージョンが 2.2 から 2.4 に上がって、バーチャルホストが見えなくなりました。そのときに、なぜ見えなくなったのかを調べて、以下のサイトに書かれている方法で解決したのでメモしておきます。Updating Virtual Host Settings from Apache 2.2 to Apache 2.4簡単にまとめると、このようになります。詳しくは、上記サイトを参照してください。Ubuntu と Debian: sites-available ディレクトリの下のバーチャルホスト設定ファイルに、 .conf の拡張子をつける必要がある。すべてのディストリビューション: バーチャルホスト設定ファイルの Directory ブロックの中に、このように Require all granted を入れる必要がある。 htmlRequire all granted"},
{file:"/2015/10/09/welcome-to-jekyll/",title:"Jekyll によるブログ作成",mtime:1444322769,ctime:1444322769,body:"Jekyll によるブログ作成 Jekyll でブログを構築。ちょっとしたメモに使う予定。以下は、Jekyll をインストールした時に自動的に作成されたドキュメント。You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.To add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.Jekyll also offers powerful support for code snippets:{% highlight ruby %}def print_hi(name)puts  Hi, #{name} endprint_hi('Tom')=> prints 'Hi, Tom' to STDOUT.{% endhighlight %}Check out the [Jekyll docs][jekyll] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll’s dedicated Help repository][jekyll-help]."},
{file:"/2020/01/25/unicode/",title:"Unicode文字番号変換",mtime:1579902840,ctime:1579902840,body:"Unicode文字番号変換 文字とUnicode 文字番号の対応を調べます。片方を更新するともう片方が更新されます。文字 (1文字): Unicode 文字番号 (16進数): U+'use strict';function calcCode() {const char = document.getElementById( char ).value;let txtCode =   ;if (char.length) {    const code = char.charCodeAt(0);    txtCode = code.toString(16).toUpperCase();}document.getElementById( code ).value = txtCode;}function calcChar() {let txtCode = document.getElementById( code ).value;txtCode = txtCode.replace(/[^0-9A-Fa-f]/g,  );document.getElementById( code ).value = txtCode;const code = parseInt(txtCode, 16);const char = String.fromCharCode(code);document.getElementById( char ).value = char;}"},
{file:"/2015/10/11/english-layout/",title:"English layout",mtime:1444489200,ctime:1444489200,body:"English layout I mainly write posts in Japanese, but sometimes I may want to write in English. Therefore I start to make English layout. By using english tag, it is easy to list English posts."},
{file:"/2015/11/07/draft-and-publish/",title:"記事の下書き",mtime:1446856104,ctime:1446856104,body:"記事の下書き Jekyll で記事を公開する前に下書きを作成して保存する方法には、いくつかの流儀があって、好みで使い分けられているようだ。_drafts フォルダを使う方法YAML フロントマター に published: false を設定する方法未来の時間を設定する方法下書き用のブランチを作成する方法この中で、私は1の方法を採用することにした。現在作業中のファイルが1つのフォルダの下にまとまっているのは分かりやすいと感じるためである。スクリプトを作成して、下書きのプレビューと公開を、それぞれ _drafts フォルダの下でコマンド一発でできるようにした。このスクリプトを使うと、コミットログがきれいになる。また、公開時に自動的にファイル名に日付が付与されるので、下書きの時点でファイル名に日付を入れる必要がない。下書きのプレビュー_drafts/Makefile を作成した。UNAME = ${shell uname}all:git add -A- git commit -m draftmake previewpush:git add -A- git commit -m draftgit push origin mastermake previewpreview:if [ $(UNAME) =  Darwin  ]; then open http://localhost:4000/; fiif [ $(UNAME) =  Linux  ]; then xdg-open http://localhost:4000/; ficd ..; bundle exec jekyll serve --drafts --host localhostこれで、_drafts フォルダで make とすると、git への commit下書き記事入りでサイトのプレビュー (Mac または Linux の場合）サイト構築と localhost でのサーバー起動を、まとめてする。git については、push まではしないので、push もいっしょにしたい時には make push とする。プレビューをサイト構築の前にしているので、最初はプレビューが表示されないが、ブラウザによっては、サイトが構築されると自動的に再読み込みして表示をしてくれる。自動的にしてくれない場合には、自分で更新ボタンを押す。下書きの公開シェルスクリプト _drafts/pub を作成した。_drafts フォルダの下で、filename というファイルを公開したい時には、./pub filenameとすることで、以下の作業をまとめてできる。git mv を使う場合と比べると、下書き時点のコミットログが見えなくなるのでコミットログがきれいになる。filename を ../_posts/YY-MM-DD-Filename にコピーする。このときに YAML フロントマターに date: フィールドを作成して追加するので、下書きには date: フィールドを入れない。公開するポストを、Published on [permalink] というコミットメッセージで git レポジトリにコミットする。マスターブランチに push する。下書きのファイルを git レポジトリから削除する。なお、コミットメッセージのパーマリンクは pretty 形式となっているので、他の形式にするためには、スクリプトの次の箇所を直接編集する必要がある。Permalink=$Site_URLdate -u +/%Y/%m/%d/``echo $Filename | sed -e 's/\..*$/\//'また、サイトの URL は _config.yml の url: 行から読んでいる。"},
{file:"/2016/09/03/HongKong/",title:"香港滞在メモ",mtime:1496598136,ctime:1472891652,body:"香港滞在メモ 香港滞在時のメモです。全般香港ナビ天気予報 : App在香港日本国総領事館 / map交通Octopus : ナビ記事 / ブログ記事 3年以上経過した時にはMTRカウンターでチャージCITYBUS Cityflyer Route : ブログ記事MTR : 路線図 / wikipedia / Fare saverトラム : 路線図 西行 東行 / wikipedia / ナビ / 中環スターフェリー : ナビ / 中環チェーン店Market place by Jasons : 店舗一覧 / ナビ惠康 (wellcome) : 店舗一覧 / Kimberley Rd / Austin Rd許留山 (Hui Lau Shan) : 九龍店舗一覧 / Wikipedia満記甜品 (Honeymoon Dessert)FORTRESS : 店舗一覧地域尖沙咀 (Tsim Sha Tsui)香港歴史博物館 (map) と香港科学館 (map)海港城 (Harbour city) : map / ナビ / 満記甜品 3F中港城 (China Hong Kong City) : map / ナビ / フェリー / 功夫點心星光行 (Star House) : map / 誠品生活 2F & 3F / 許留山新港中心 (Silvercord) / map / BF 大食代 (food republic) wikipediaiSQUARE : map / ナビ / Jasons (LG) / Marks and SpencerMira mall : map / 店舗一覧 / ナビ / 2F: ユニクロ 大自然素食 / B1 商務印書館 英語の本The ONE : map / 店舗一覧 / AEON (LG1)K11 : map 尖沙咀駅N4出口直結 / ナビ / Jasons (B1) / 百樂潮州鮑魚飯店SOGO : mapグルメ30選記事粵廚點心專門店 (Canton's Dim Sum Expert) : map : メニュー讚記廚房 (A Plus Kitchen) : map / メニュー / 涼瓜炆倉魚洪利粥麺小厨 : map佳記餐廳 : map1 / map2 / エッグタルト(2)輕鬆一下 Relax for a while : map香港18餐廳 : map源記燒味粉麵茶餐廳 : map雞記潮州麵食 : map8號餐廳 (Number 8 Restaurant) : map池記 : map澳門茶餐廳 (Macau Restaurant) : map / ナビ / ブログ波羅密素食 (Paramita Vegetarian Restaurant) : map発記甜品 (Lucky Dessert) : map / 写真 ドリアン 赤と白 パンケーキ もち米Glory Bakery / map / ブログ記事 その2 3曲奇4重奏 (Cookies Quartet) : map / ブログ記事珍妮曲奇 (Jenny Bakery) : map惠康 (wellcome)Market Place 2件左に Pacific coffee足藝舎　海防道店 : map / ナビApple Canton Road華國酒店 (Hotel Benito) : map / booking旺角 (Mong Kok) と油麻地 (Yau Ma Tei)朗豪坊 (Langham Place) : map / ナビ / Jasons (B2)Hollywood Plaza : map / 香港小米之家 20階 紹介記事西門町台灣麵食 : map南龍粥店 : map八方雲集鍋貼水餃專門店 : map / 香港店舗 / 台湾店舗明華餅家 : map深井発記甜品 (Lucky Dessert) : map Soy Street 側  / 写真天仁喫茶趣 : 向かいに食神伝說惠康 (wellcome)油麻地果欄 (九龍水果批發市場) : map / ナビ海麗花園購物商場 : map セブンイレブンの向かいの入口にMTRセーバー金銘潮州粉麵 : mapトイレ : 油麻地駅B2出口から100メートル銅鑼灣 (Causeway Bay)SOGO : map / ナビTimes Square : map / ナビ B1 満記甜品大自然素食 : map 8F / 404 濃湯粉絲雑菜煲 / 454 鮑魚鶏絲粥 / 3時から5時は半額大食代 (Food republic) : map心粥館 : map麵檔 (Noodle Stand) / map惠康 (wellcome)香港国際空港ナビ美心・翠園 (Maxim's Jade Garden) / map Terminal 1, 8F通信Discover Hong Kong Tourist SIM Card : 料金表 / ログイン / ブログ記事リチャージ手順：ログインして、Top-up - Credit Card から Recharge Value を選ぶ。$50から$300まで。VISA認証サービスに対応したカードを使用する。その後、Package Subscription で Extra 5-Day Pass を購入。Package Subscription は、電話から *131# でも可能。日本への国際電話は 0066-81-(国内番号)国際電話 / +852 / 香港から日本 国際識別番号は事業者別 / 日本から香港 010-852-(国内番号)両替重慶大厦 : map / ブログ記事HKD / JPY レート変動 : 堅成找換有限公司広東語LipsyncHK challenge"},
{file:"/2015/12/15/search-with-javascript/",title:"JavaScript による記事の全文検索",mtime:1450160543,ctime:1450160543,body:"JavaScript による記事の全文検索 malaさんのJavaScript による全文検索を「検索」メニューに入れてみた。速い！おおまかな手順は検索ページのスクリプトを検索ページに入れる。search.md, _layouts/search.html, _includes/head-search.htm (css と js ファイルの指定), _includes/search.html, css/search.css といった感じで分割しておく。index.js を作成する。roma.js を入れる。ということになる。index.js の作成には、python スクリプトindexを書いた。最終更新日の表示によってdate: 2015-11-12 03:01:50 +0000update: 2015-11-17 06:38:29 +0000のような形で作成日と更新日が記録されている（されていない場合もある）という前提となっている。下書きの公開スクリプトの中で index を実行させている。"},
{file:"/2020/01/04/Poisson/",title:"ポアソン分布の正規分布による近似",mtime:1578120945,ctime:1578120945,body:"ポアソン分布の正規分布による近似 ポアソン分布の平均mが大きくなると正規分布に近似される様子をグラフで確認するプログラムを作成した。期待値 m 分散 m のポアソン分布の確率質量関数[[ P(X=x)=\frac{m^x e^{-m}}{x!} ]]は、mが大きくなると期待値 m 分散 m の正規分布の確率密度関数[[ f(x)=\frac{1}{\sqrt{2\pi m}} \exp \left( -\frac{(x-m)^2}{2 m} \right) ]]に近似される。このページでは、その様子をグラフで確認する。mの値をテキストボックスに直接入力（小数の入力可能）する。ボタンで1ずつ増減できる。m = style= max-width: 100%; height: auto; max-height: 100% >このブラウザはHTML5のCanvas要素に対応していないためグラフを表示できません。'use strict';update();function decM() {var m = document.getElementById( m ).value;m = parseInt(m, 10) - 1;if (m < 1 || isNaN(m)) {    m = 1;}if (m > 300) {    m = 300;}document.getElementById( m ).value = m;update();}function incM() {var m = document.getElementById( m ).value;m = parseInt(m, 10) + 1;if (isNaN(m)) {    m = 1;}if (m > 300) {    m = 300;}document.getElementById( m ).value = m;update();}function update() {// Initialize canvasvar c, ctx, textM, m, maxX, maxNorm, pZero, legendX, legendY;c = document.getElementById('canvas');ctx = c.getContext('2d');ctx.clearRect(0, 0, c.width, c.height);ctx.font =  20px serif ; // Font of the textctx.lineWidth = 1; // Line width// Get parametertextM = document.getElementById( m ).value;m = Number(textM);// Check range of mif (m > 300) {    m = NaN;    ctx.fillStyle =  red ;    ctx.fillText( このプログラムでは m ≦ 300 としてください , 80, 300);}if (m <= 0) {    m = NaN;    ctx.fillStyle =  red ;    ctx.fillText( m > 0 でなければなりません , 150, 300);}// Set Cartesian coodinate system for the graph (GC)// Origin of GC with respect to canvas coordinate = (ctx.originX, ctx.originY)ctx.originX = 50;ctx.originY = 570;// Unit vector of GC with respect to canvas coordinate = (ctx.unitX, ctx.unitY)maxX = m * 2.5;if (maxX < 20) {    maxX = 20;}ctx.unitX = Math.floor(500 / maxX);if (ctx.unitX < 1) {    ctx.unitX = 1;}maxNorm = 1 / Math.sqrt(2 * Math.PI * m);pZero = Math.pow(Math.E, -m);ctx.unitY = -Math.floor(500 / Math.max(maxNorm, pZero));// Draw graphsif (m > 0) {    ctx.strokeStyle =  black ;    ctx.fillStyle =  black ;    drawAxis(ctx);    ctx.scaleX = Math.pow(10, Math.floor(2.6 - Math.log10(ctx.unitX)));    drawScaleX(ctx);    ctx.scaleY = 1 / Math.pow(10, Math.floor(Math.log10(-ctx.unitY) - 1.5));    ctx.offsetScaleY = 50;    drawScaleY(ctx);    ctx.strokeStyle =  red ;    ctx.fillStyle =  red ;    plotInt(ctx, poisson, m);    ctx.strokeStyle =  blue ;    ctx.fillStyle =  blue ;    draw(ctx, normDist, m);    // Legend    legendX = 360;    legendY = 120; // Location of the legend    ctx.beginPath();    ctx.fillStyle =  red ;    ctx.arc(legendX + 15, legendY, 4, 0, Math.PI * 2);    ctx.fill();    ctx.fillStyle =  black ;    ctx.fillText( ポアソン分布 , legendX + 40, legendY + 5);    ctx.beginPath();    ctx.strokeStyle =  blue ;    ctx.moveTo(legendX, legendY + 30);    ctx.lineTo(legendX + 30, legendY + 30);    ctx.stroke();    ctx.fillText( 正規分布 , legendX + 40, legendY + 35);}}// Mathematical functionsfunction poisson(k, m) {if (k < 100) {    return Math.pow(m, k) * Math.pow(Math.E, -m) / factorial(k);}var logP = k * Math.log(m) - m - logfact(k);return Math.pow(Math.E, logP);}function normDist(x, m) {return Math.pow(Math.E, -(x - m) * (x - m) / (2 * m)) / Math.sqrt(2 * Math.PI *    m);}function factorial(n) {if (n < 2) {    return 1;} else {    return n * factorial(n - 1);}}function logfact(n) {if (n < 2) {    return 0;} else {    return Math.log(n) + logfact(n - 1);}}"},
{file:"/2019/05/05/Singapore/",title:"シンガポール滞在メモ",mtime:1557020738,ctime:1557020738,body:"シンガポール滞在メモ シンガポール滞在時のメモです。全般シンガポールナビ天気公益財団法人日本台湾交流協会 台北事務所チャイナタウンナビ / WikipediaChinaTown Point: map / 1F Song Fa Bak Kut Teh 松發肉骨茶 天仁茶オーチャード・ロードナビ / Wikipedia高島屋: map / 免税はSunnyHills (B2)には使えずNespresso (B1)くらい、refundは3Fリトルインディアナビ / WikipediaMustafa Centre: mapハーバーフロントVivoCity: map / 1F Honeymoon Dessert / 2F 7-Eleven / 3F Food RepublicHarbourFront Centre: map / 1F Cold StorageCity Hall 駅Capitol Plazza: City Hall D 出口から直結 / Food RepublicRaffles City: map / B1 Raffles City Market PlaceドリアンDurian Geylang map交通NETS FlashPayシンガポールでのお金の支払い方法のまとめ(NETS, FlashPay, EZ-Link, Pay Wave 等)NETS FlashPayチャージ方法を紹介MRT路線図通信Singtel hi!Tourist EZ-Link SIM Card: カウンター 空港Travelexカウンター, セブンイレブン国際電話: +65 / 日本へ 001-81-(国内番号)両替シンガポール外貨両替2017年版 最安おすすめはリトルインディア？16ヶ所一斉調査Arcade Money ChangersSGD / JPY レート変動"},
{file:"/2015/10/10/keyword-in-each-post/",title:"ページごとのキーワード（タグ）の表示",mtime:1444402800,ctime:1444402800,body:"ページごとのキーワード（タグ）の表示 カテゴリ / タグの作成 で、タグの一覧を表示できるようになったので、今度は各記事に含まれるタグを記して、そのタグに関する記事の一覧に直接飛べるようにした。「タグ」という日本語は微妙にわかりにくい感じがするので「キーワード」にしてみた。_layouts/post.html に、以下の記述を加えた。キーワード：{% capture tags %}{% for tag in page.tags %}&lcub;&lcub; tag &rcub;&rcub;{% endfor %}{% endcapture %}{% assign eachtag = tags | split:' ' %}{% for tag in eachtag %}<a href= /tags/{{ tag }}/index.html >{{ tag }}</a>{% endfor %}これで、キーワードが表示され、そのキーワードの記事一覧へとべるようになった。複数のキーワードにも対応していることを確認した。"},
{file:"/2018/10/24/climate-change-timeline/",title:"気候変動への国際的取り組み年表",mtime:1571292187,ctime:1540366849,body:"気候変動への国際的取り組み年表 気候変動に関する国際交渉の経緯です。|---|年次 | できごと |説明|---|1988 |気候変動に関する政府間パネル (IPCC) 設立 | 世界気象機関 (WMO) と国連環境計画 (UNEP) により設立|1992 |国連気候変動枠組条約(UNFCCC)採択 | リオデジャネイロの環境と開発に関する国際連合会議（地球サミット）にて|1997 |京都議定書採択 | COP3（気候変動枠組条約第3回締結国会合）にて|2001 |アメリカ合衆国が京都議定書離脱表明 | クリントン政権の間に議会の承認が得られなかったため批准できず、ブッシュ大統領が就任後に離脱を表明。|2005 |京都議定書発効 | ロシア批准により。解説|2007 |COP13（バリ） | 2013年以降の枠組み（ポスト京都議定書）を2009年までに採択することを合意。|2008 |京都議定書第1約束期間 | 2012年までの5年間|2009 |G8ラクイラサミット | COP15に向けて「世界全体の温室効果ガス排出量を2050年までに少なくとも50％削減するとの目標を再確認するとともに、この一部として、先進国全体として、50年までに80％又はそれ以上削減するとの目標を支持した。」|2009 |COP15（コペンハーゲン） | コペンハーゲン合意の採択に失敗。「コペンハーゲン合意に留意する｣という決定の採択。外務省による解説|2010 |COP16（カンクン） | カンクン合意の採択。平均気温の上昇を2℃未満に抑制するという目標。先進国、途上国が目標を自主的に誓約する。法的拘束力がない。|2014 |IPCCの第5次評価報告書 | 工業化以前に比べて「気温上昇を2℃未満に維持する可能性が高いシナリオは、温室効果ガス排出量が2050年までに2010年と比べて40～70％削減され、2100年には排出水準がほぼゼロ又はそれ以下になるという特徴がある（図3.2, 表3.1）。」（統合報告書の確定和訳 p.61）参考:第1作業部会政策決定者向け要約の図表|2015 |パリ協定採択 | COP21にて。2020年以降の地球温暖化対策に、すべての国が参加して、世界の平均気温上昇を、産業革命から2℃未満、できれば1.5℃に押さえる。参加国は削減目標をたて、5年ごとに見直し、国連に報告する。|2016 |パリ協定発効 | 55か国以上が批准し、世界の温暖化ガス排出量の55%に達したため11月4日に発効。|2017 |アメリカのトランプ大統領がパリ協定離脱表明 | ただし発効後3年は脱退を通告できず、通告後1年経たないと脱退が成立しない。NHKの解説|2018 |IPCCの1.5℃特別報告書 |工業化以前の水準から1.5°Cの気温上昇にかかる影響や関連する地球全体での温室効果ガス排出経路に関する特別報告書。参考:政策決定者向け要約と環境書の解説 |"},
{file:"/2015/10/11/excel-mabiki/",title:"Excel でデータの間引き",mtime:1444489200,ctime:1444489200,body:"Excel でデータの間引き 「Excel 間引き」とか「csv 間引き」で検索すると、専用のツールが色々ある。ここでは、ツールを使わずに手軽に間引きをする方法を紹介する。「フィルタ」という名前の列を作成する。6個ずつ間引きしたい場合には、a,b,c,d,e,fと6個のアルファベットを入力する。間引きする間隔の個数分だけの記号を入力すれば良い。a～fを選択して、そのまま一番下までコピーすると、フィルタの列にはa,b,c,d,e,f,a,b,c,d,e,f...と繰り返しデータが入ることになる。オートフィル機能を利用して、a～fを選択した時点で、選択範囲の長方形の右下にカーソルをあわせ、カーソルが十字になったところでダブルクリックをすれば良い。「データ」「フィルタ」「オートフィルタ」にて、オートフィルタを設定して、フィルタの横にあらわれるプルダウンメニューをクリックすると、a,b,c,d,e,fから選ぶことができる。 eのデータを採用するのであれば、フィルタから「e」を選択する。これで、画面上には「フィルタ」列が「e」のデータ、すなわち6個おきに間引きされたデータが表示される。この状態でグラフを書けば、間引きしたデータによるグラフを書くことができる。また、他のワークシートにコピーペーストすれば、間引きされたデータのみのワークシートを作成できる。この記事は、2006年に旧ブログで書いた記事をコピーしたものです。この方法以外には、INDIRECT関数とROW関数を使って間引く方法もあります。"},
{file:"/2017/05/02/version/",title:"ソフトウェアのバージョン",mtime:1493715288,ctime:1493715288,body:"ソフトウェアのバージョン このサイトは、GitHub がホストする GitHub Pages で構築しています。以下に、使っているソフトとバージョンをまとめます。ソフトウェア現バージョン最新バージョンのチェックJekyll 他DependencyJekyll releaseBootstrap{{ site.bootstrap-version }}Bootstrap downloadjQuery{{ site.jquery-version }}jQuery downloadKaTeX{{ site.katex-version }}KaTeX releases更新方法ソフトウェアをバージョンアップするときのための管理用メモです。_config.html を更新する。Bootstrap のバージョンを更新したときには、css/boostrap.min.css を Bootswatch の Flatly テーマの最新バージョン に変えて、バックアップ用の js/bootstrap.min.js を同じバージョンに更新する。jQuery のバージョンを更新したときには、バックアップ用の js/jquery.min.js を同じバージョンに更新する。KaTeX のバージョンを更新したときには、数式をチェックする。"},
{file:"/2017/02/09/Equation/",title:"LaTeX の数式を Word に貼り付ける方法",mtime:1486606901,ctime:1486606901,body:"LaTeX の数式を Word に貼り付ける方法 Microsoft Word 標準の数式よりもきれいな LaTeX で作成した数式を Word に貼り付ける方法についてのメモ。原稿を Word で作成する必要があり、なおかつ数式がそのまま印刷されてしまうためきれいにしておきたい、というようなことがよくあり、そのときには Word 標準の数式だといまいち美しくないので、この方法を使うことにする。TeX の数式を DTP ソフトにに書かれているように、LaTeX で数式を作成して eps か pdf ファイルにして、そのファイルを開いてクリップボードにコピーして、Word に貼り付ける。適宜、画像をリサイズする。そこに紹介されている TeX2img を使うと、比較的楽にできる。数式番号をつけるときには、2列1行の表を作り罫線を消して、左の列に数式を、右の列に列番号を入れる。数式の作成時には MathJax のリアルタイムプレビューで確認しながら作業をすると便利。なお、Word の MathML を使って直接数式を貼り付ける方法についてStackExchange の投稿に書かれているので、参考までに記しておく。この方法では、Word の数式機能を使って作成するのと同程度のクオリティとなる。リアルタイムプレビューで式を作成して、生成された式を右クリックして、Show MathML as / MathML Code を選択コードをテキストエディタに貼り付けて、そのコードの先頭に <?xml version= 1.0 ?> という行を追加まるごと Word にコピーペースト"},
{file:"/2015/11/11/joho-a-link/",title:"「情報処理実習A」参考サイト",mtime:1537229573,ctime:1447198542,body:"「情報処理実習A」参考サイト 「情報処理実習A」の授業で参考にするサイトへのリンクです。講義全般情報処理実習A: 講義情報受講者専用ページ (東洋大学外からはアクセス不可)ToyoNet 情報関連ポータルパソコンの基礎・インターネット・セキュリティファイルの拡張子についてキー配列 / タッチタイピング (Wikipedia)イータイピングマイタイピングNeutral タイピングゲーム - 寿司打ネットワークと情報セキュリティ (Kindle 版)パスワードの管理について情報処理技術者試験 - ITパスポート試験Microsoft Officeオフィスソフトの比較東洋大学ソフトウェアライセンス情報 学生向けOffice365 educationの利用についてWord 参考サイトExcel 参考サイトPowerPoint 参考サイト"},
{file:"/2015/10/11/old-blog/",title:"過去のブログ",mtime:1444489200,ctime:1444489200,body:"過去のブログ これまでに使ってきたブログサービスをまとめます。|---| 開始   | リンク | システム||--------|:-------|:--------|| 2000年 | Seki's Diary | さざんか|| 2000年 | Seki's Diary | Tomsoft Diary System|| 2002年 | Seki's Diary | tDiary|| 2006年 | Seki's Diary | さくらのブログ|| 2007年 | seki @ Twitter (twilog) | Twitter || 2014年 | ブログ | Researchmap|| 2015年 | Seki's note | Jekyll と Bootstrap||---"},
{file:"/2015/10/27/open-command/",title:"ターミナルからファイルを開く",mtime:1445890082,ctime:1445890082,body:"ターミナルからファイルを開く 端末エミュレータ から指定したファイルを関連付けられているアプリケーション（あるいは指定したアプリケーション）で開く方法について、Mac, Linux, Windows それぞれの方法をメモ。Mac の場合ターミナルで open コマンドを使う。open Readme.txtとすると、Readme.txt に関連付けられているアプリケーションで Readme.txt が開かれる。open http://google.comとすれば、ブラウザで Google を開くことができる。また、ディレクトリを指定するとopen .とすれば、Finder でカレントディレクトリが開かれる。関連付けられているアプリケーションとは異なるアプリケーションを使いたいことがある。たとえば、html ファイルをエディタで編集したい時など。-tオプションを使うと、デフォルトのテキストエディタで開くことができる。open -t filenameまた、openコマンドの-aオプションを使って -a アプリケーションで、起動するアプリケーションを指定できる。CotEditor で指定したファイルを開くコマンド cot を作るには、!/bin/shopen $1 -a /Applications/CotEditor.appといったシェルスクリプトを作っておき、実行可能にして cotコマンドとしてパスが通る場所に置いておく。cot filenameとして、使うことができる。open --help で次のヘルプが表示される。Usage: open [-e] [-t] [-f] [-W] [-R] [-n] [-g] [-h] [-b <bundle identifier>] [-a <application>] [filenames] [--args arguments]Help: Open opens files from a shell.  By default, opens each file using the default application for that file.  If the file is in the form of a URL, the file will be opened as a URL.Options:   -a                Opens with the specified application.  -b                Opens with the specified application bundle identifier.  -e                Opens with TextEdit.  -t                Opens with default text editor.  -f                Reads input from standard input and opens with TextEdit.  -F  --fresh       Launches the app fresh, that is, without restoring windows. Saved persistent state is lost, excluding Untitled documents.  -R, --reveal      Selects in the Finder instead of opening.  -W, --wait-apps   Blocks until the used applications are closed (even if they were already running).      --args        All remaining arguments are passed in argv to the application's main() function instead of opened.  -n, --new         Open a new instance of the application even if one is already running.  -j, --hide        Launches the app hidden.  -g, --background  Does not bring the application to the foreground.  -h, --header      Searches header file locations for headers matching the given filenames, and opens them.他にも、Finder と Terminal の連携をするための技がこの記事に解説されている。FinderとTerminalの連携を考えるLinux の場合xdg-open または gnome-open コマンドを使う。LinuxでコマンドラインからURLやファイルを開けるxdg-open/gnome-openのメモなんだかコマンドがダサいと思われる方は.bashrcでinteractiveか判定した後にalias open=xdg-open等としておけばいいかもしれません。xdg-open(1) - Linux man pageWindows の場合コマンドプロンプトから start コマンドを使う。意外に知らないstartコマンドの使い方別ウィンドウでコマンドを実行(START)以下は、Windows 10 で start /? として表示されるヘルプ。指定されたプログラムまたはコマンドを実行するためにウィンドウを開きます。START [ タイトル ] [/D パス] [/I] [/MIN] [/MAX] [/SEPARATE | /SHARED]  [/LOW | /NORMAL | /HIGH | /REALTIME | /ABOVENORMAL | /BELOWNORMAL]  [/NODE <NUMA ノード>] [/AFFINITY <16 進数の関係マスク>] [/WAIT] [/B]  [コマンド/プログラム] [パラメーター] タイトル   ウィンドウのタイトル バーに表示するタイトル。パス        開始するディレクトリ。B           新しいウィンドウを作成せずにアプリケーションを起動します。            アプリケーションは Ctrl + C を無視します。            アプリケーションで Ctr l+ C を有効にしていない場合、            Ctrl + Break がアプリケーションを中断する唯一の方法です。I           新しい環境は、現在の環境ではなく、cmd.exe に渡された元の環境に            なります。MIN         ウィンドウを最小化の状態で起動します。MAX         ウィンドウを最大表示の状態で起動します。SEPARATE    16 ビットの Windows プログラムを別メモリ領域で起動します。SHARED      16 ビットの Windows プログラムを共有メモリ領域で起動します。LOW         IDLE 優先度クラスでアプリケーションを起動します。NORMAL      NORMAL 優先度クラスでアプリケーションを起動します。HIGH        HIGH 優先度クラスでアプリケーションを起動します。REALTIME    REALTIME 優先度クラスでアプリケーションを起動します。ABOVENORMAL ABOVENORMAL 優先度クラスでアプリケーションを起動します。BELOWNORMAL BELOWNORMAL 優先度クラスでアプリケーションを起動します。NODE        優先 NUMA (Non-Uniform Memory Architecture) ノードを 10 進の            整数で指定します。AFFINITY    プロセッサの関係マスクを 16 進数で指定します。            プロセスはこれらのプロセッサで実行されるように制限されます。            /AFFINITY と /NODE を組み合わせると、関係マスクは異なって            解釈されます。NUMA ノードのプロセッサ マスクを右にシフトして            ビット 0 で始まるかのように関係マスクを指定します。            プロセスは、指定した関係マスクと NUMA ノードの間で共通する            プロセッサ上で実行されるように制限されます。共通するプロセッサ            がない場合は、プロセスは指定した NUMA ノード上で実行される            ように制限されます。WAIT        アプリケーションを起動し、終了するまで待ちます。コマンド/プログラム            内部コマンドまたはバッチ ファイルの場合、コマンド プロセッサ            は cmd.exe の /K オプションを使用して実行されます。            これはコマンドの後でもウィンドウが残ることを意味            します。            内部コマンドまたはバッチ ファイルではない場合、そのプログラム            はウィンドウ モードのアプリケーションまたはコンソール            アプリケーションとして動作します。パラメーター            コマンド/プログラムに渡すパラメーターです。注意: SEPARATE および SHARED オプションは 64 ビット プラットフォームではサポートされません。/NODE を指定すると、NUMA システム上のメモリ局所性を利用する方法でプロセスが作成されるようにできます。たとえば、共有メモリ経由で互いに頻繁に通信する2 つのプロセスを、メモリ待ち時間を最小限に抑えるために同じ優先 NUMA ノードを共有するように作成できます。これらのプロセスは可能であれば同じ NUMA ノードからメモリを割り当て、指定したノード外のプロセッサ上で実行されることもあります。start /NODE 1 application1.exestart /NODE 1 application2.exeこれら 2 つのプロセスは、さらに、同じ NUMA ノード内の特定のプロセッサ上で実行されるように制限できます。次の例では、application1 がノードの低順位の2 つのプロセッサ上で実行されるのに対し、application2 はノードの次の 2 つのプロセッサ上で実行されます。この例では、指定したノードに少なくとも 4 つの論理プロセッサがあることを想定しています。ノード番号は、関係マスクを変更しなくても、そのコンピューターの任意の有効なノード番号に変更できることに注意してください。start /NODE 1 /AFFINITY 0x3 application1.exestart /NODE 1 /AFFINITY 0xc application2.exeコマンド拡張機能を有効にすると、コマンド ラインまたは START コマンドによる外部コマンドの起動は、次のように変更されます:非実行可能ファイルは、ファイル名をコマンドとして入力することによって、ファイルの関連付けを使って開くことができます (例:  WORD.DOC は .DOCファイル拡張子に関連付けられているアプリケーションを起動します)。コマンド スクリプト内でファイルの関連付けを作成する方法については、ASSOC と FTYPE コマンドを参照してください。32 ビット GUI アプリケーションを実行する場合、CMD.EXE は、アプリケーションの終了を待たずにコマンド プロンプトに戻ります。コマンド スクリプト内で実行する場合は、この動作は発生しません。最初のトークンが拡張子やパス修飾子を持たない文字列  CMD  であるコマンド ラインを実行する場合、 CMD  が COMSPEC 変数の値で置き換えられます。これにより現在のディレクトリの CMD.EXE が使われないようにします。最初のトークンが拡張子を含まないコマンド ラインを実行する場合、CMD.EXE は、PATHEXT 環境変数の値を使って拡張子の種類と順序を判断します。PATHEXT 変数の既定値は、次のとおりです:    .COM;.EXE;.BAT;.CMDこの構文は PATH 変数と同じであり、各要素はセミコロンで区切られていることに注意してください。実行可能なファイルを検索するときにどの拡張子でも一致するファイルが見つからない場合は、拡張子なしの名前がディレクトリ名と一致するかどうかを調べます。一致する場合は、START コマンドがそのパスでエクスプローラーを起動します。コマンド ラインから実行した場合は、そのパスに対する CD /D の実行と同じになります。English version of this post"},
{file:"/2015/11/12/office-soft/",title:"オフィスソフトの比較",mtime:1583090573,ctime:1447264910,body:"オフィスソフトの比較 オフィスソフトとは、ワープロ、表計算、プレゼンテーション等、PCを用いたオフィス業務に必要なソフトウェアをセットにしたもので、オフィススイートとも呼ばれる。現在では Microsoft Office が圧倒的シェアを築いているが、他にも様々な製品やフリーソフトウェアがある。また、PCにインストールして使うものだけではなく、ブラウザから使うもの、タブレット端末やスマートフォンで使うものなど使い方が多様化している。仕事で使う時には会社で使われている製品を使うことになるが、個人的な利用であれば、目的や予算に応じて好きなソフトを選ぶことができる。共同作業でファイルをやりとりするときには、お互いにどのようなソフトウェアを使っているのか、ファイルの互換性はあるのか、といった配慮が必要となる。このページでは、比較的よく使われているオフィスソフトに関する情報をまとめる。比較記事無料（フリー）のオフィスソフトは、どれが使える？ (WEB、IT、パソコン講座, 2015/2/7)オフィススイートの比較 (Wikipedia)Microsoft OfficeMicrosoft Office 公式サイトデスクトップ版購入Office.com 無料オンラインアプリ, スマートフォン, タブレット, ラップトップ/デスクトップ無料で使える「新iPad版Office」レビュー　Excelは重要機能がカットされるも、PowerPointはプレゼンに有用 (日経トレンディネット, 2014/11/28)Microsoft Officeには複数のバージョンがあり、バージョンによって使い勝手が異なる。あるバージョンの操作に慣れた頃に、新しいバージョンで操作が変わってしまい戸惑う、ということもある。バージョンが異なるソフトで作成したファイルを開く時に、書式が完全に再現されるかどうかには注意が必要である。また、Office 2003 以前と Office 2007 以降では、ファイル形式、拡張子が異なる。<tr>  <th>ソフトウェア</th>  <th>目的</th>  <th>Office 2003 以前の拡張子</th>  <th>Office 2007 以降の拡張子</th></tr><tr>  <td rowspan= 2 >Word</td>  <td rowspan= 2 >文書作成</td>  <td rowspan= 2 >.doc</td>  <td>.docx (マクロ無効; 標準)</td></tr><tr>  <td>.docm (マクロ有効)</td></tr><tr>  <td rowspan= 2 >Excel</td>  <td rowspan= 2 >表計算</td>  <td rowspan= 2 >.xls</td>  <td>.xlsx (マクロ無効; 標準)</td></tr><tr>  <td>.xlsm (マクロ有効)</td></tr><tr>  <td rowspan= 2 >PowerPoint</td>  <td rowspan= 2 >プレゼンテーション</td>  <td rowspan= 2 >.ppt</td>  <td>.pptx (マクロ無効; 標準)</td></tr><tr>  <td>.pptm (マクロ有効)</td></tr><tr>  <td>Access</td>  <td>データベース</td>  <td>.mdb</td>  <td>.accdb</td></tr>Office 2007 以降では、拡張子に「x」と「m」がつけられている。それまでは、Microsoft 独自のバイナリ形式であったファイルの形式を、Office Open XML（OOXML）と呼ばれるXMLベースの国際的な標準規格の形式へと変更した。標準拡張子の「x」は、このXMLを意味するものと考えられる。複数のXMLファイルをzipで圧縮することにより、1つのファイルとしている。また、マクロ感染型ウィルスに感染することを防ぐために、マクロが有効な文書では拡張子を変えている。Word 参考サイトExcel 参考サイトPowerPoint 参考サイトGoogle ドキュメント文書作成、表計算、プレゼンテーション、図形編集ができる。ドキュメントは Google のサーバ（Google ドライブ）に保存され、ブラウザで直接編集する。他のユーザーとのドキュメント共有ができるため、共同管理するファイルを取り扱う時には便利である。いくつかのファイル形式でインポート・エクスポートが可能である。たとえば、Word や Excel で作成したドキュメントを Google ドライブにアップロードしてそのまま共有したり、PDFファイルに変換してダウンロードしたりすることもできる。Google ドキュメントGoogle ドキュメント エディタ ヘルプセンターGoogle ドライブGoogleドキュメントの互換性を検証～ どこまでMicrosoft Officeの代わりとして使えるのか？ (@IT, 2014/5/28)Googleドライブを使ったお手軽PDF変換術 (ITmedia, 2014/2/3)OpenOffice 系統オープンソース方式で開発・供給されていたオフィスソフト OpenOffice.org の製作プロジェクトは2011年に解散した。OpenOffice.org の後継として LibreOfficeと Apache OpenOffice がある。いずれもフリーソフトであり、Windows, Mac, Linux 等に対応している。LibreOfficeApache OpenOffice.org 国際的な標準規格である OpenDocument Format (ODF) という形式でファイルを読み書きする。Microsoft Office の OOXML 形式の読み込みも可能である。OOXML 形式の書き込みについては、LibreOffice は可能で、Apache OpenOffice では xlsx 形式の書き込みはできない。Microsoft Office で ODF 形式のファイルを読み書きすることは可能である。ベルギー、イギリス、フランス、ブラジル等、多くの国で政府として ODF のファイル形式を採用している。また、日本でも中央省庁や地方公共団体で ODF を標準フォーマットとして採用しているところがある。OpenDocument adoption (Wikipedia)Belgium adopts OpenDocument (Techworld, 2006/6/29)Open document formats selected to meet user needs (UK government, 2014/7/22)French Government IT directorate stands its ground : ODF supported, OOXML rejected (April, 2015/7/9)|ソフトウェア |目的 |拡張子||---------------+-----|-------||Writer |文書作成 |.odt ||Calc |表計算 | .ods||Impress |プレゼンテーション | .odp ||Draw|図形描画 | .odg||Math|数式 | .odf||Base|データベース | .odb|iWorkアップルが開発・販売している Mac や iOS 機器のためのオフィスソフトである。Mac を購入するとプリインストールされているので、Mac ユーザーが使うのには手軽で便利である。Microsoft Office の OOXML 形式でファイルの読み書きが可能であるが、Microsoft Office で開くと書式がずれることはよくある。たとえば Pages でレポートを作成してオンラインで提出する時には、PDFファイルに変換するのが良いであろう。PagesNumbersKeynoteMicrosoft Office の書類との互換性iCloud のための iWork新iWorkとiLifeはGarageBandも含めて新規購入MacとiOS端末ですべて無料 (ITmedia, 2013/10/23)|ソフトウェア |目的 |拡張子 ||---------------+-----|--------||Pages |文書作成 |.pages ||Numbers |表計算 |.numbers|Keynote |プレゼンテーション |.key |KINGSOFT OfficeMicrosoft Office と同じ OOXML 形式でファイルを読み書きし、操作性も Microsoft Office とよく似ている。なるべく Microsoft Office と近い操作性で、購入価格を抑えたい時には1つの選択肢である。Windows, Android, iOS (iPhone, iPad) に対応している。KINGSOFT Office製品一覧オンラインショップキングソフト オフィスはMS Officeの代わりになる？ (井上健語, All About, 2013/4/30)一太郎純国産ワープロソフトの一太郎は、かつては国内最大のシェアを持っていたが、Microsoft Office の Word にシェアを奪われてしまった。独自形式のファイルを使うが、Word 形式や ODF 形式にも対応している。表計算とプレゼンテーションソフトを備えるオフィス製品が、法人向け、官公庁向け、警察機関向けに用意されている。日本の役所が作る書類は無駄に罫線が多く、罫線が多い文書の作成は Word よりも一太郎の方が使いやすいとの定評がある。私は罫線が多い書類を作成するのが嫌いである。一太郎WebJUST Office一太郎 (ニコニコ大百科)一太郎と官公庁 (Open ブログ, 2011/2/18)官公庁のワープロソフトも一太郎からwordへ (弁護士ZEKE（ジーク）の法律問題etc.ブログ, 2012/2/5)"},
{file:"/2019/06/30/derivative-simple/",title:"積と商の微分公式の簡単な証明方法（条件付き）",mtime:1561852188,ctime:1561852188,body:"積と商の微分公式の簡単な証明方法（条件付き） 積と商の微分公式について、以前は微分の定義から証明したが、yがxで微分可能な関数であって常に y>0 であるときに、xで微分することをプライム(')であらわすと[[ (\log y)^{\prime} = \frac{y^{\prime}}{y} ]]となることを使えば、より簡単に証明できる（log は自然対数）。微分可能であることに加えて、関数の値域が常に正であるという条件がつく（対数を取ることを可能とするため）のであまり証明としては優秀ではないが、忘れてしまった公式を思い出す手段としては便利であろう。ここで上式は、$ u = \log y $ とすると[[ (\log y)^{\prime} = \frac{du}{dx} = \frac{du}{dy}\frac{dy}{dx} = \frac{1}{y}\frac{dy}{dx} = \frac{y^{\prime}}{y} ]]となることから示される。積の微分公式fとgがxの関数で、xについて微分可能でxがどのような値であっても常に正 (f>0, g>0) のとき、[[ y = fg ]]の導関数を考える。両辺の自然対数を取って[[ \log y = \log (fg) = \log f + \log g ]]両辺をxで微分すると[[ \frac{y^{\prime}}{y} = \frac{f^{\prime}}{f} + \frac{g^{\prime}}{g} ]]となり、両辺に y = fg をかけると[[ y^{\prime} = f^{\prime}g + fg^{\prime} ]]となる。これが積の微分公式（ただし f>0, g>0 の条件つき）である。商の微分公式fとgがxの関数で、xについて微分可能でxがどのような値であっても常に正 (f>0, g>0) のとき、[[ y = \frac{f}{g} ]]の導関数を考える。両辺の自然対数を取って[[ \log y = \log \frac{f}{g} = \log f - \log g ]]両辺をxで微分すると[[ \frac{y^{\prime}}{y} = \frac{f^{\prime}}{f} - \frac{g^{\prime}}{g} ]]となり、両辺に $ y = \frac{f}{g} $ をかけると[[ y^{\prime} = \frac{f^{\prime}}{g} - \frac{f g^{\prime}}{g^2} = \frac{f^{\prime}g - f g^{\prime}}{g^2} ]]となる。これが商の微分公式（ただし f>0, g>0 の条件つき）である。"}];
